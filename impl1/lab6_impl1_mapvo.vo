
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.13.0.56.2

// ldbanno -n Verilog -o lab6_impl1_mapvo.vo -w -neg -gui -msgset C:/labcode6/promote.xml lab6_impl1_map.ncd 
// Netlist created on Sun Dec 22 22:56:26 2024
// Netlist written on Sun Dec 22 22:56:30 2024
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module TemperatureSensor ( clk, rst, mode_key, beep, DQ, din, sck, rck );
  input  clk, rst, mode_key;
  output beep, din, sck, rck;
  inout  DQ;
  wire   \DT/shift_clock_cnt_31 , \DT/n134 , \DT/n15573 , clk_c, \DT/n18607 , 
         \DT/shift_clock_cnt_30 , \DT/shift_clock_cnt_29 , \DT/n135 , 
         \DT/n136 , \DT/n18606 , \DT/shift_clock_cnt_28 , 
         \DT/shift_clock_cnt_27 , \DT/n137 , \DT/n138 , \DT/n18605 , 
         \DT/shift_clock_cnt_26 , \DT/shift_clock_cnt_25 , \DT/n139 , 
         \DT/n140 , \DT/n18604 , \DT/shift_clock_cnt_24 , 
         \DT/shift_clock_cnt_23 , \DT/n141 , \DT/n142 , \DT/n18603 , 
         \DT/shift_clock_cnt_22 , \DT/shift_clock_cnt_21 , \DT/n143 , 
         \DT/n144 , \DT/n18602 , \DT/shift_clock_cnt_20 , 
         \DT/shift_clock_cnt_19 , \DT/n145 , \DT/n146 , \DT/n18601 , 
         \DT/shift_clock_cnt_18 , \DT/shift_clock_cnt_17 , \DT/n147 , 
         \DT/n148 , \DT/n18600 , \DT/shift_clock_cnt_16 , 
         \DT/shift_clock_cnt_15 , \DT/n149 , \DT/n150 , \DT/n18599 , 
         \DT/shift_clock_cnt_14 , \DT/shift_clock_cnt_13 , \DT/n151 , 
         \DT/n152 , \DT/n18598 , \DT/shift_clock_cnt_12 , 
         \DT/shift_clock_cnt_11 , \DT/n153 , \DT/n154 , \DT/n18597 , 
         \DT/shift_clock_cnt_10 , \DT/shift_clock_cnt_9 , \DT/n155 , \DT/n156 , 
         \DT/n18596 , \DT/shift_clock_cnt_8 , \DT/shift_clock_cnt_7 , 
         \DT/n157 , \DT/n158 , \DT/n18595 , \DT/shift_clock_cnt_6 , 
         \DT/shift_clock_cnt_5 , \DT/n159 , \DT/n160 , \DT/n18594 , 
         \DT/shift_clock_cnt_4 , \DT/shift_clock_cnt_3 , \DT/n161 , \DT/n162 , 
         \DT/n18593 , \DT/shift_clock_cnt_2 , \DT/shift_clock_cnt_1 , 
         \DT/n163 , \DT/n164 , \DT/n18592 , \DT/shift_clock_cnt_0 , \DT/n165 , 
         \CF/n12374 , \CF/n12375 , \CF/n18711 , \CF/n12385 , \CF/n12384 , 
         \CF/n18712 , \CF/n18466 , \CF/n14143 , \CF/Fahrenheit_9 , \CF/tmp_9 , 
         \CF/Fahrenheit_8 , \CF/tmp_8 , \CF/n18422 , \CF/n18423 , n27, 
         \CF/n14282 , n28, \CF/n14283 , sample_8, sample_7, \CF/n18535 , 
         \CF/Fahrenheit_28 , \CC/Data71_0 , \CF/Fahrenheit_29 , \CC/Data81_0 , 
         \CF/n18536 , n80, n81, \CF/n18465 , \CF/n14120 , \CF/n14119 , n82, 
         n83, \CF/n18464 , \CF/n14122 , \CF/n14121 , \CF/n12376 , tempC_3_3, 
         tempC_3_2, tempC_3_0, \CF/n18710 , \CF/n12387 , \CF/n12386 , 
         tempC_3_1, \CF/n12388 , n84, n85, \CF/n12322 , \CF/n18463 , 
         \CF/n14124 , \CF/n14123 , n86, \CF/n11663 , n87, \CF/n18462 , 
         \CF/n14126 , \CF/n14125 , n29, \CF/n14284 , n30, \CF/n14285 , 
         sample_6, sample_5, \CF/n18534 , \CF/Fahrenheit_26 , \CC/Data51_0 , 
         \CF/Fahrenheit_27 , \CC/Data61_0 , n88, n89, \CF/n18461 , \CF/n14128 , 
         \CF/n14127 , n31, \CF/n14286 , n32, \CF/n14287 , sample_4, 
         \CF/n18533 , \CF/Fahrenheit_24 , \CC/DataOut_integer_31_N_415_2 , 
         \CF/Fahrenheit_25 , \CC/Data41_0 , n33, \CF/n14288 , n34, \CF/n14289 , 
         sample_3, \CC/Data31_0 , \CF/n18532 , \CF/Fahrenheit_22 , 
         \CC/DataOut_decimal_31_N_447_3 , \CF/Fahrenheit_23 , \CF/n11702 , 
         \CF/n18708 , \CF/n11704 , \CF/n11713 , n35, \CF/n14290 , n36, 
         \CF/n14291 , sample_2, \CC/Data21_0 , \CF/n18531 , \CF/Fahrenheit_20 , 
         \CC/DataOut_decimal_31_N_447_2 , \CF/Fahrenheit_21 , n90, n91, 
         \CF/n12307 , \CF/n18460 , \CF/n14130 , \CF/n14129 , n37, \CF/n14292 , 
         n38, \CF/n14293 , sample_1, sample_10, \CF/n18530 , 
         \CF/Fahrenheit_18 , \CC/Data101_0 , \CF/Fahrenheit_19 , \CC/Data11_0 , 
         n39, \CF/n14294 , n40, \CF/n14295 , \CC/Data91_0 , \CF/n18529 , 
         \CF/Fahrenheit_16 , \CC/DataOut_integer_31_N_415_5 , 
         \CF/Fahrenheit_17 , \CC/DataOut_integer_31_N_415_6 , n41, \CF/n14296 , 
         n42, \CF/n14297 , \CC/d4_3 , \CC/d4_2 , clk_c_enable_272, \CF/n18528 , 
         \CF/Fahrenheit_14 , \CC/d42 , \CF/Fahrenheit_15 , \CC/d43 , 
         \CF/n11696 , \CF/n11697 , \CF/n18707 , \CF/n11706 , \CF/n11705 , 
         \CF/Fahrenheit_7 , \CF/tmp_7 , \CF/Fahrenheit_6 , \CF/tmp_6 , 
         \CF/n18421 , n43, \CF/n14298 , n44, \CF/n14299 , 
         \CC/DataOut_integer_31_N_415_1 , \CC/DataOut_integer_31_N_415_0 , 
         \CF/n18527 , \CF/Fahrenheit_12 , \CC/DataOut_integer_0 , 
         \CF/Fahrenheit_13 , \CC/DataOut_integer_1 , \CF/n11698 , \CF/n11699 , 
         \CF/n18706 , \CF/n11708 , \CF/n11707 , n45, \CF/n14300 , n46, 
         \CF/n14301 , \CC/DataOut_decimal_31_N_447_5 , \CF/n18526 , 
         \CF/Fahrenheit_10 , \CC/DataOut_decimal_3 , \CF/Fahrenheit_11 , 
         \CC/DataOut_decimal_5 , \CF/n11700 , tempC_4_3, tempC_4_2, tempC_4_0, 
         \CF/n18705 , \CF/n11710 , \CF/n11709 , tempC_4_1, \CF/n11711 , n92, 
         \CF/n12308 , n93, \CF/n12309 , \CF/n18459 , \CF/n14132 , \CF/n14131 , 
         n94, \CF/n12310 , n95, \CF/n12311 , \CF/n18458 , \CF/n14134 , 
         \CF/n14133 , \CF/n18703 , n47, \CF/n14302 , n48, \CF/n14303 , 
         \CC/DataOut_decimal_31_N_447_1 , \CF/n18525 , \CC/DataOut_decimal_1 , 
         \CC/DataOut_decimal_2 , n49, \CF/n14304 , n50, \CF/n14305 , 
         \CF/Fahrenheit_5 , \CF/tmp_5 , \CF/Fahrenheit_4 , \CF/tmp_4 , 
         \CF/n18420 , \CF/n6 , \CF/n18702 , \CF/n20581 , \CF/n18242 , 
         \CF/n18239 , \CF/n18701 , \CF/n18277 , \CF/n18699 , \CF/n12371 , 
         \CF/n12378 , \CF/n20555 , \CF/n18698 , \CF/n12373 , \CF/n12372 , 
         \CF/n20575 , \CF/n18265 , \CF/n18697 , \CF/n18519 , \CF/n18518 , 
         \CF/n18695 , \CF/n12937 , \CF/n12404 , \CF/n12392 , \CF/n18694 , 
         \CF/n12924 , \CF/n12923 , \CF/n12393 , \CF/n12394 , \CF/n18693 , 
         \CF/n12926 , \CF/n12925 , \CF/n12395 , \CF/n12396 , \CF/n18692 , 
         \CF/n12928 , \CF/n12927 , \CF/n12397 , \CF/n12398 , \CF/n18691 , 
         \CF/n12930 , \CF/n12929 , \CF/n12399 , \CF/n12400 , \CF/n18690 , 
         \CF/n12932 , \CF/n12931 , \CF/n12401 , \CF/n12402 , \CF/n18689 , 
         \CF/n12934 , \CF/n12933 , \CF/n13340 , \CF/n12935 , \CF/n12921 , 
         \CF/n18687 , \CF/n9534 , n259, \CF/n18517 , \CF/n11651 , \CF/n11650 , 
         \CF/n12900 , \CF/n12901 , \CF/n18686 , \CF/n9536 , \CF/n9535 , n260, 
         n261, \CF/n18516 , \CF/n11653 , \CF/n11652 , \CF/Fahrenheit_3 , 
         \CF/tmp_3 , Fahrenheit_2, \CF/tmp_2 , \CF/n18419 , \CF/tmp_26 , 
         \CF/tmp_25 , \CF/n114 , \CF/n115 , \CF/n2252 , \CF/n18590 , 
         \CF/n12902 , \CF/n12903 , \CF/n18685 , \CF/n9538 , \CF/n9537 , 
         \CF/n12904 , \CF/n12905 , \CF/n18684 , \CF/n9540 , \CF/n9539 , n262, 
         n263, \CF/n18515 , \CF/n11655 , \CF/n11654 , n264, n265, \CF/n18514 , 
         \CF/n11656 , \CF/n12906 , \CF/n12907 , \CF/n18683 , \CF/n9542 , 
         \CF/n9541 , n96, \CF/n12312 , n97, \CF/n12313 , \CF/n18457 , 
         \CF/n14136 , \CF/n14135 , \CF/n12908 , \CF/n12909 , \CF/n18682 , 
         \CF/n9544 , \CC/DataOut_integer_6 , \CF/n9543 , \CF/n12910 , 
         \CF/n12911 , \CC/DataOut_integer_31_N_415_4 , \CF/n18681 , \CF/n9546 , 
         \CC/DataOut_integer_4 , \CF/n9545 , \CC/DataOut_integer_5 , n271, 
         \CF/n18513 , \CF/n11659 , n98, \CF/n12314 , n99, \CF/n12315 , 
         \CF/n18456 , \CF/n14138 , \CF/n14137 , \CF/tmp_1 , n100, \CF/n12316 , 
         n101, \CF/n12317 , \CF/n18455 , \CF/n14140 , \CF/n14139 , n102, 
         \CF/n12318 , n103, \CF/n12319 , \CF/n14141 , n268, n269, \CF/n18512 , 
         \CF/n11661 , \CF/n11660 , \CF/n12912 , \CF/n12913 , 
         \CC/DataOut_integer_31_N_415_3 , \CF/n18680 , \CF/n9548 , 
         \CC/DataOut_integer_2 , \CF/n9547 , \CC/DataOut_integer_3 , 
         \CF/n12914 , \CF/n12915 , \CF/n18679 , \CF/n9550 , \CF/n9549 , n270, 
         \CF/n11662 , \CF/n18511 , \CF/tmp_24 , \CF/tmp_23 , \CF/n116 , 
         \CF/n117 , \CF/n18589 , \CF/n18453 , \CF/n14308 , \CF/n12916 , 
         \CF/n12917 , \CF/n18678 , \CF/n9552 , \CF/n9551 , \CF/n12918 , 
         \CF/n12919 , \CF/n18677 , \CF/n9554 , \CF/n9553 , \CF/n18452 , 
         \CF/tmp_22 , \CF/tmp_21 , \CF/n118 , \CF/n119 , \CF/n18588 , 
         \CF/tmp_20 , \CF/tmp_19 , \CF/n120 , \CF/n121 , \CF/n18587 , 
         \CF/n18510 , \CF/n9555 , \CF/n18509 , \CF/n18508 , n339, \CF/n18507 , 
         n340, n341, \CF/n18506 , \CF/tmp_18 , \CF/tmp_17 , \CF/n122 , 
         \CF/n123 , \CF/n18586 , n342, n343, \CF/n18505 , \CF/tmp_16 , 
         \CF/tmp_15 , \CF/n124 , \CF/n125 , \CF/n18585 , \CF/n18451 , 
         \CF/tmp_14 , \CF/tmp_13 , \CF/n126 , \CF/n127 , \CF/n18584 , 
         \CF/tmp_12 , \CF/tmp_11 , \CF/n128 , \CF/n129 , \CF/n18583 , n344, 
         n345, \CF/n18504 , \CF/tmp_10 , \CF/n130 , \CF/n131 , \CF/n18582 , 
         \CF/n132 , \CF/n133 , \CF/n18581 , \CF/n18450 , \CF/n134 , \CF/n135 , 
         \CF/n18580 , n346, n347, \CF/n18503 , \CF/n136 , \CF/n137 , 
         \CF/n18579 , \CF/n18449 , n348, n349, \CF/n12320 , \CF/n138 , 
         \CF/n139 , \CF/n18578 , n173, \CF/n18448 , \CF/tmp_0 , \CF/n140 , 
         n9477, n9478, \CC/clk_c_enable_237 , \CF/n18576 , n26, n25, n174, 
         n175, \CF/n18447 , n9479, n9480, \CF/n18575 , n9481, n9482, 
         \CF/n18574 , n9483, n9484, \CF/n18573 , n176, n177, \CF/n18446 , 
         n9485, n9486, \CF/n18572 , n9487, n9488, \CF/n18571 , n178, n179, 
         \CF/n18445 , \CF/n18496 , \CF/n13341 , \CF/n18495 , \CF/n13326 , 
         \CF/n13325 , n9489, n9490, \CF/n18570 , \CF/n18494 , \CF/n13328 , 
         \CF/n13327 , n9491, n9492, \CF/n18569 , \CF/n18493 , \CF/n13330 , 
         \CF/n13329 , n9493, n9494, \CF/n18568 , n9495, n9496, \CF/n18567 , 
         n180, n181, \CF/n18444 , n182, n183, \CF/n18443 , n9497, n9498, 
         \CF/n18566 , \CF/n18492 , \CF/n13332 , \CF/n13331 , n184, n185, 
         \CF/n18442 , n186, n187, \CF/n18441 , \CF/n18491 , \CF/n13334 , 
         \CF/n13333 , \CF/n12368 , n9499, n6409, \CF/n18490 , \CF/n13336 , 
         \CF/n13335 , \CF/n18661 , \CF/n12369 , \CF/n12351 , \CF/n12337 , 
         \CF/n18660 , \CF/n12354 , \CF/n12353 , n188, \CF/n14142 , n189, 
         \CF/n18489 , \CF/n13338 , \CF/n13337 , \CF/n13339 , \CF/n12898 , 
         \CF/n18564 , \CF/n12338 , \CF/n12339 , \CF/n18659 , \CF/n12356 , 
         \CF/n12355 , \CF/n12340 , \CF/n12341 , \CF/n18658 , \CF/n12358 , 
         \CF/n12357 , \CF/n12342 , \CF/n12343 , \CF/n18657 , \CF/n12360 , 
         \CF/n12359 , \CF/n12880 , \CF/n12881 , \CF/n18563 , \CF/n12344 , 
         \CF/n12345 , \CF/n18656 , \CF/n12362 , \CF/n12361 , \CF/n12882 , 
         \CF/n12883 , \CF/n18562 , \CF/n12884 , \CF/n12885 , \CF/n18561 , 
         \CF/n12886 , \CF/n12887 , \CF/n18560 , \CF/n12888 , \CF/n12889 , 
         \CF/n18559 , \CF/n18487 , \CF/n13663 , \CF/n18486 , \CF/n13646 , 
         \CF/n13645 , \CF/n12346 , \CF/n12347 , \CF/n18655 , \CF/n12364 , 
         \CF/n12363 , \CF/n12348 , \CF/n12349 , \CF/n18654 , \CF/n12366 , 
         \CF/n12365 , \CF/n12890 , \CF/n12891 , \CF/n18558 , \CF/n18485 , 
         \CF/n13648 , \CF/n13647 , \CF/n18484 , \CF/n13650 , \CF/n13649 , 
         \CF/n12367 , \CF/n18483 , \CF/n13652 , \CF/n13651 , \CF/n18652 , 
         \CF/n18482 , \CF/n13654 , \CF/n13653 , \CF/n12892 , \CF/n12893 , 
         \CF/n18557 , \CF/n12894 , \CF/n12895 , \CF/n18556 , \CF/n12335 , 
         \CF/n12324 , \CF/n18651 , \CF/n12325 , \CF/n12326 , \CF/n18650 , 
         \CF/n12327 , \CF/n12328 , \CF/n18649 , \CF/n12329 , \CF/n12330 , 
         \CF/n18648 , \CF/n12331 , \CF/n12332 , \CF/n18647 , \CF/n12896 , 
         \CF/n18555 , \CF/n18481 , \CF/n13656 , \CF/n13655 , \CF/n12333 , 
         \CF/n18646 , \CF/n18480 , \CF/n13658 , \CF/n13657 , \CF/n18479 , 
         \CF/n13660 , \CF/n13659 , \CF/n18553 , \CF/n18552 , \CF/n18434 , 
         \CF/clk_c_enable_150 , \CF/n13661 , \CF/Fahrenheit_31 , 
         \CF/Fahrenheit_30 , \CF/n18433 , \CF/n18432 , \CF/n18551 , 
         \CF/n18550 , \CF/n18307 , tempC_0_3, \CF/n18753 , \CF/n11791 , 
         \CF/n11798 , \CF/n20566 , tempC_0_2, \CF/n18752 , \CF/n11793 , 
         \CF/n11792 , \CF/n20588 , \CF/n18295 , tempC_0_0, \CF/n18751 , 
         \CF/n11795 , \CF/n11794 , tempC_0_1, \CF/n11796 , n11771, \CF/n18749 , 
         n6334, tempC_1_3, tempC_1_2, tempC_1_1, tempC_1_0, \CF/n6_adj_3536 , 
         n11765, n11766, \CF/n18748 , \CF/n20586 , \CF/n18336 , n11767, n11768, 
         \CF/n18747 , n11769, n6335, n12455, n12446, \CF/n18745 , \CF/n18431 , 
         n13934, \CF/n18477 , n6410, \CF/n18549 , n12447, n12448, \CF/n18744 , 
         n12449, n12450, \CF/n18743 , n12451, n12452, \CF/n18742 , \CF/n11797 , 
         n12453, n6336, \CF/n18740 , \CF/n12444 , tempC_2_3, tempC_2_2, 
         \CF/n18739 , \CF/n12437 , \CF/n12436 , tempC_2_1, tempC_2_0, 
         \CF/n18738 , \CF/n12439 , \CF/n12438 , \CF/n18737 , \CF/n12441 , 
         \CF/n12440 , \CF/n12442 , n12965, \CF/n18735 , n6333, \CF/n12949 , 
         \CF/n12939 , n12951, n12952, \CF/n18734 , \CF/n12940 , \CF/n12941 , 
         n12953, n12954, \CF/n18733 , \CF/n12942 , \CF/n12943 , n12955, n12956, 
         \CF/n18732 , n13914, n13915, \CF/n18476 , n13916, n13917, \CF/n18475 , 
         \CF/n18430 , \CF/n18547 , n13918, n13919, \CF/n18474 , \CF/n18546 , 
         \CF/n18545 , \CF/n18544 , n13920, n13921, \CF/n18473 , \CF/n18543 , 
         \CF/n18542 , \CF/n18541 , \CF/n18429 , \CF/n18428 , \CF/n12944 , 
         \CF/n12945 , n12957, n12958, \CF/n18731 , \CF/n12946 , \CF/n12947 , 
         n12959, n12960, \CF/n18730 , n12961, n12962, \CF/n18729 , n12963, 
         \CF/n18727 , \CF/n18726 , \CF/n18725 , \CF/n18724 , \CF/n18723 , 
         \CF/n12443 , \CF/n18721 , \CF/n12390 , \CF/n12380 , \CF/n18720 , 
         \CF/n12381 , \CF/n12382 , \CF/n18719 , \CF/n12383 , \CF/n18718 , 
         \CF/n18717 , \CF/n18716 , \CF/n18714 , \CF/n18713 , \CF/n18427 , 
         \CF/n18426 , n13922, n13923, \CF/n18472 , \CF/n18540 , n13924, n13925, 
         \CF/n18471 , n13926, n13927, \CF/n18470 , n13928, n13929, \CF/n18469 , 
         \CF/n18539 , \CF/n18425 , n13930, n13931, \CF/n18468 , \CF/n18424 , 
         n13932, en_N_3200_0, \CC/DataOut_decimal_31_N_447_4 , sample_9, 
         \CC/DataOut_decimal_0 , \CB/us_cnt_10 , \CB/us_cnt_9 , \CB/n50 , 
         \CB/overflow_enable_47 , \CB/n16680 , \CB/overflow , \CB/n18410 , 
         \CB/n51 , \CB/s_devide_19 , \CB/s_devide_19_N_147_19 , 
         \CB/overflow_enable_36 , \CB/n18401 , \CB/s_devide_18 , 
         \CB/s_devide_17 , \CB/s_devide_19_N_147_18 , 
         \CB/s_devide_19_N_147_17 , \CB/n18400 , \CB/us_cnt_0 , \CB/n60 , 
         \CB/n18406 , \CB/s_devide_16 , \CB/s_devide_15 , 
         \CB/s_devide_19_N_147_16 , \CB/s_devide_19_N_147_15 , \CB/n18399 , 
         \CB/us_cnt_6 , \CB/us_cnt_5 , \CB/n18408 , \CB/n55 , \CB/n54 , 
         \CB/n18409 , \CB/s_devide_14 , \CB/s_devide_13 , 
         \CB/s_devide_19_N_147_14 , \CB/s_devide_19_N_147_13 , \CB/n18398 , 
         \CB/s_devide_12 , \CB/s_devide_11 , \CB/s_devide_19_N_147_12 , 
         \CB/s_devide_19_N_147_11 , \CB/n18397 , \CB/s_devide_10 , 
         \CB/s_devide_9 , \CB/s_devide_19_N_147_10 , \CB/s_devide_19_N_147_9 , 
         \CB/n18396 , \CB/us_cnt_4 , \CB/us_cnt_3 , \CB/n18407 , \CB/n57 , 
         \CB/n56 , \CB/s_devide_8 , \CB/s_devide_7 , \CB/s_devide_19_N_147_8 , 
         \CB/s_devide_19_N_147_7 , \CB/n18395 , \CB/s_devide_6 , 
         \CB/s_devide_5 , \CB/s_devide_19_N_147_6 , \CB/s_devide_19_N_147_5 , 
         \CB/n18394 , \CB/s_devide_4 , \CB/s_devide_3 , 
         \CB/s_devide_19_N_147_4 , \CB/s_devide_19_N_147_3 , \CB/n18393 , 
         \CB/s_devide_2 , \CB/s_devide_1 , \CB/s_devide_19_N_147_2 , 
         \CB/s_devide_19_N_147_1 , \CB/n18392 , \CB/turn_0 , \CB/s_devide_0 , 
         \CB/s_devide_19_N_147_0 , \CB/us_cnt_2 , \CB/us_cnt_1 , \CB/n59 , 
         \CB/n58 , \CB/us_cnt_8 , \CB/us_cnt_7 , \CB/n52 , \CB/n53 , 
         \BC/pwm_cnt_2 , \BC/pwm_cnt_1 , \BC/n53 , \BC/n54 , 
         \BC/clk_c_enable_116 , \BC/n15610 , \BC/n18624 , \BC/n18625 , 
         \BC/pwm_cnt_0 , \BC/n55 , \BC/div_clk_cnt_31 , \BC/n134 , \BC/n15574 , 
         \BC/n18623 , \BC/div_clk_cnt_30 , \BC/div_clk_cnt_29 , \BC/n135 , 
         \BC/n136 , \BC/n18622 , \BC/div_clk_cnt_28 , \BC/div_clk_cnt_27 , 
         \BC/n137 , \BC/n138 , \BC/n18621 , \BC/div_clk_cnt_26 , 
         \BC/div_clk_cnt_25 , \BC/n139 , \BC/n140 , \BC/n18620 , 
         \BC/div_clk_cnt_24 , \BC/div_clk_cnt_23 , \BC/n141 , \BC/n142 , 
         \BC/n18619 , \BC/div_clk_cnt_22 , \BC/div_clk_cnt_21 , \BC/n143 , 
         \BC/n144 , \BC/n18618 , \BC/div_clk_cnt_20 , \BC/div_clk_cnt_19 , 
         \BC/n145 , \BC/n146 , \BC/n18617 , \BC/div_clk_cnt_18 , 
         \BC/div_clk_cnt_17 , \BC/n147 , \BC/n148 , \BC/n18616 , 
         \BC/div_clk_cnt_16 , \BC/div_clk_cnt_15 , \BC/n149 , \BC/n150 , 
         \BC/n18615 , \BC/div_clk_cnt_14 , \BC/div_clk_cnt_13 , \BC/n151 , 
         \BC/n152 , \BC/n18614 , \BC/div_clk_cnt_12 , \BC/div_clk_cnt_11 , 
         \BC/n153 , \BC/n154 , \BC/n18613 , \BC/div_clk_cnt_10 , 
         \BC/div_clk_cnt_9 , \BC/n155 , \BC/n156 , \BC/n18612 , 
         \BC/div_clk_cnt_8 , \BC/div_clk_cnt_7 , \BC/n157 , \BC/n158 , 
         \BC/n18611 , \BC/div_clk_cnt_6 , \BC/div_clk_cnt_5 , \BC/n159 , 
         \BC/n160 , \BC/n18610 , \BC/div_clk_cnt_4 , \BC/div_clk_cnt_3 , 
         \BC/n161 , \BC/n162 , \BC/n18609 , \BC/div_clk_cnt_2 , 
         \BC/div_clk_cnt_1 , \BC/n163 , \BC/n164 , \BC/n18608 , 
         \BC/div_clk_cnt_0 , \BC/n165 , \BC/n18501 , \BC/pwm_out_N_3478 , 
         \BC/pwm_cnt_9 , \BC/n18500 , \BC/pwm_cnt_8 , \BC/pwm_cnt_7 , 
         \BC/n18499 , \BC/pwm_cnt_6 , \BC/pwm_cnt_5 , \BC/n18498 , 
         \BC/pwm_cnt_4 , \BC/pwm_cnt_3 , \BC/n18497 , \BC/n46 , \BC/n18628 , 
         \BC/n47 , \BC/n48 , \BC/n18627 , \BC/n49 , \BC/n50 , \BC/n18626 , 
         \BC/n51 , \BC/n52 , \MC/n18371 , n6558, \MC/n20567 , n6559, n1842, 
         n1843, \DT/clk_c_enable_95 , \DT/n15597 , \MC/n18404 , 
         \MC/en_N_3200_5 , \MC/en_N_3200_6 , \DT/n1841 , \MC/n18405 , 
         \MC/n20590 , \MC/n18359 , n6408, n6561, \DT/n1844 , n1845, 
         \MC/n18403 , \MC/en_N_3200_3 , \MC/en_N_3200_4 , n6560, n1846, 
         \DT/n1847 , \MC/en_N_3200_2 , \MC/n18762 , en, \MC/MK/keystore_1 , 
         \MC/MK/keystore_2__N_3302 , \MC/n18761 , \MC/MK/keystore_2 , 
         \MC/en_N_3200_8 , \MC/en_N_3200_7 , \MC/n18760 , \MC/n18759 , 
         \MC/n18758 , \MC/en_N_3200_1 , \DT/n1840 , \MC/MK/keysampulsecnt_31 , 
         \MC/MK/n134 , \MC/MK/n15576 , \MC/MK/n18644 , 
         \MC/MK/keysampulsecnt_30 , \MC/MK/keysampulsecnt_29 , \MC/MK/n135 , 
         \MC/MK/n136 , \MC/MK/n18643 , \MC/MK/keysampulsecnt_28 , 
         \MC/MK/keysampulsecnt_27 , \MC/MK/n137 , \MC/MK/n138 , \MC/MK/n18642 , 
         \MC/MK/keysampulsecnt_26 , \MC/MK/keysampulsecnt_25 , \MC/MK/n139 , 
         \MC/MK/n140 , \MC/MK/n18641 , \MC/MK/keysampulsecnt_24 , 
         \MC/MK/keysampulsecnt_23 , \MC/MK/n141 , \MC/MK/n142 , \MC/MK/n18640 , 
         \MC/MK/keysampulsecnt_22 , \MC/MK/keysampulsecnt_21 , \MC/MK/n143 , 
         \MC/MK/n144 , \MC/MK/n18639 , \MC/MK/keysampulsecnt_20 , 
         \MC/MK/keysampulsecnt_19 , \MC/MK/n145 , \MC/MK/n146 , \MC/MK/n18638 , 
         \MC/MK/keysampulsecnt_18 , \MC/MK/keysampulsecnt_17 , \MC/MK/n147 , 
         \MC/MK/n148 , \MC/MK/n18637 , \MC/MK/keysampulsecnt_16 , 
         \MC/MK/keysampulsecnt_15 , \MC/MK/n149 , \MC/MK/n150 , \MC/MK/n18636 , 
         \MC/MK/keysampulsecnt_14 , \MC/MK/keysampulsecnt_13 , \MC/MK/n151 , 
         \MC/MK/n152 , \MC/MK/n18635 , \MC/MK/keysampulsecnt_12 , 
         \MC/MK/keysampulsecnt_11 , \MC/MK/n153 , \MC/MK/n154 , \MC/MK/n18634 , 
         \MC/MK/keysampulsecnt_10 , \MC/MK/keysampulsecnt_9 , \MC/MK/n155 , 
         \MC/MK/n156 , \MC/MK/n18633 , \MC/MK/keysampulsecnt_8 , 
         \MC/MK/keysampulsecnt_7 , \MC/MK/n157 , \MC/MK/n158 , \MC/MK/n18632 , 
         \MC/MK/keysampulsecnt_6 , \MC/MK/keysampulsecnt_5 , \MC/MK/n159 , 
         \MC/MK/n160 , \MC/MK/n18631 , \MC/MK/keysampulsecnt_4 , 
         \MC/MK/keysampulsecnt_3 , \MC/MK/n161 , \MC/MK/n162 , \MC/MK/n18630 , 
         \MC/MK/keysampulsecnt_2 , \MC/MK/keysampulsecnt_1 , \MC/MK/n163 , 
         \MC/MK/n164 , \MC/MK/n18629 , \MC/MK/keysampulsecnt_0 , \MC/MK/n165 , 
         \CC/n8741 , \CC/n18523 , \CC/n6235 , \CC/DataOut_decimal_31_N_1207_9 , 
         \CC/n18522 , \CC/n8732 , \CC/n8733 , \CC/n18521 , \CC/n6231 , 
         \CC/n6232 , \CC/n8734 , \CC/n6230 , \CC/tmp1_13 , \CC/n62 , 
         \CC/n2168 , \CC/n18418 , \CC/tmp1_12 , \CC/tmp1_11 , \CC/n63 , 
         \CC/n64 , \CC/n18417 , \CC/tmp1_10 , \CC/tmp1_9 , \CC/n65 , \CC/n66 , 
         \CC/n18416 , \CC/d31 , \CC/d30 , \CC/n18675 , \CC/n18674 , n6483, 
         \CC/tmp_6 , \CC/tmp_5 , \CC/n18673 , n6485, n6484, \CC/tmp_4 , 
         \CC/tmp_3 , \CC/n18672 , n6486, \CC/tmp_2 , \CC/tmp_1 , \CC/n18671 , 
         \CC/tmp_0 , n6293, n6292, \CC/d4_1 , \CC/d4_0 , \CC/n18670 , \CC/d40 , 
         \CC/d41 , \CC/tmp1_8 , \CC/tmp1_7 , \CC/n67 , \CC/n68 , \CC/n18415 , 
         \CC/n18669 , \CC/DataOut_decimal_14 , \CC/DataOut_decimal_13 , 
         \CC/n18668 , \CC/DataOut_decimal_12 , \CC/DataOut_decimal_11 , 
         \CC/d23 , \CC/d22 , \CC/n18667 , \CC/DataOut_decimal_10 , 
         \CC/DataOut_decimal_9 , \CC/d21 , \CC/d20 , \CC/n18666 , \CC/tmp1_6 , 
         \CC/tmp1_5 , \CC/n69 , \CC/n70 , \CC/n18414 , \CC/DataOut_decimal_8 , 
         \CC/DataOut_decimal_7 , \CC/d3_3 , \CC/d3_2 , \CC/n18665 , \CC/d32 , 
         \CC/d33 , \CC/DataOut_decimal_6 , \CC/d3_1 , d3_0, \CC/n18664 , 
         \CC/tmp1_4 , \CC/tmp1_3 , \CC/d2_3 , \CC/d2_2 , \CC/n18663 , 
         \CC/tmp1_2 , \CC/tmp1_1 , \CC/d2_1 , \CC/d2_0 , \CC/n18662 , 
         \CC/tmp1_0 , \CC/n71 , \CC/n72 , \CC/n18413 , \CC/n73 , \CC/n74 , 
         \CC/n18412 , \CC/n75 , \CC/DataOut_decimal_31_N_447_14 , sample_0, 
         \CC/n18439 , \CC/n14473 , \CC/n14467 , 
         \CC/DataOut_decimal_31_N_447_13 , \CC/DataOut_decimal_31_N_447_12 , 
         \CC/n18438 , \CC/n14468 , \CC/n14469 , 
         \CC/DataOut_decimal_31_N_447_11 , \CC/DataOut_decimal_31_N_447_10 , 
         \CC/n18437 , \CC/n14470 , \CC/n14471 , 
         \CC/DataOut_decimal_31_N_447_9 , \CC/DataOut_decimal_31_N_447_8 , 
         \CC/n18436 , \CC/n14472 , \CC/DataOut_decimal_31_N_447_7 , \CC/n34 , 
         \CC/n35 , \CC/n2141 , \CC/n18390 , \CC/n36 , \CC/n37 , \CC/n18389 , 
         \CC/n38 , \CC/n39 , \CC/n18388 , \CC/da1 , \CC/da0 , \CC/n18757 , 
         \CC/n18756 , \CC/n18755 , \CC/n40_adj_3496 , \BC/n58 , \BC/n57 , 
         \BC/div_clk , \BC/div_clk_N_3474 , \BC/pwm_out , \BC/pwm_out_N_3477 , 
         beep_c, \CB/DQ_N_254 , \CB/n20540 , \CB/state_0 , \CB/n20543 , 
         \CB/n16921 , \CB/DQ_N_251 , \CB/state_1 , \CB/DQ_N_237 , 
         \CB/DQ_N_216 , \CB/num_0 , \CB/num_1 , \CB/n29 , \CB/n1 , 
         \CB/overflow_enable_48 , \CB/n15867 , \CB/num_2 , \CB/num_3 , 
         \CB/n27 , \CB/n28 , \CB/num_4 , \CB/n20572 , \CB/n26 , n20928, 
         \CB/clk_c_enable_152 , \CB/n18933 , \CB/n2073 , \CB/n14515 , \CB/n33 , 
         \CB/n20000 , \CB/n5 , \CB/state_1_N_49_1 , \CB/overflow_enable_2 , 
         \CB/n19914 , \CB/n9 , \CB/n15316 , \CB/n15317 , 
         \CB/overflow_enable_50 , \CB/n2895 , \CB/n16871 , DQ_out, \CB/n72 , 
         \CB/n73 , \CB/n70 , \CB/n71 , \CB/n68 , \CB/n69 , \CB/n66 , \CB/n67 , 
         \CB/n19718 , \CB/n64 , \CB/us_devide_0 , \CB/us_devide_1 , \CB/n24 , 
         \CB/n20568 , \CB/us_devide_3 , \CB/us_devide_2 , \CB/n22_adj_3520 , 
         \CB/n23_adj_3519 , \CC/DataOut_decimal_31_N_447_6 , \CC/n8735 , 
         \CC/d1_0 , \CC/d1_1 , \CC/n24 , \CC/n1 , \CC/n2160 , \CC/d1_3 , 
         \CC/d1_2 , \CC/n22 , \CC/n23 , \CC/n19730 , \CC/n11_adj_3482 , 
         \CC/n5096 , \CC/n2011 , \CC/n2012 , \CC/clk_c_enable_275 , \CC/n2010 , 
         \CC/n19888 , \CC/n1988 , \CC/n1989 , clk_c_enable_105, 
         \CC/clk_c_enable_108 , \CC/n1987 , \CC/n1959 , \CC/n11_adj_3480 , 
         \CC/n1963 , \CC/n1964 , \CC/n1962 , \CC/da_0 , \CC/da_1 , 
         \CC/n24_adj_3486 , \CC/n25 , \CC/n2139 , \CC/da_3 , \CC/da_2 , 
         \CC/n22_adj_3485 , \CC/n23_adj_3484 , \CC/n4 , \CC/clk_c_enable_135 , 
         \CC/db_0 , \CC/n11_adj_3481 , \CC/db_2 , \CC/db_1 , \CC/n956 , 
         \CC/n957 , \CC/db_3 , \CC/n955 , \CC/n6_adj_3487 , \CF/da_0 , 
         \CF/da_1 , \CF/n24 , \CF/n25 , \CF/n20515 , \CF/da_3 , \CF/da_2 , 
         \CF/n22 , \CF/n23 , \CF/db_1 , \CF/n19864 , \CF/db_3 , \CF/n13 , 
         \CF/n45_adj_3535 , \CF/db_0 , \CF/n14 , \CF/n11 , \CF/n5102 , 
         \CF/db_2 , \CF/n743 , \CF/n744 , \CF/clk_c_enable_111 , \CF/n742 , 
         \CF/n19880 , \CF/dc_0 , \CF/n19750 , \CF/n20552 , \CF/n11_adj_3529 , 
         \CF/n5104 , \CF/dc_2 , \CF/dc_1 , \CF/n707 , \CF/n708 , 
         \CF/clk_c_enable_114 , \CF/dc_3 , \CF/n706 , \CF/n21 , \CF/dd_0 , 
         \CF/n20551 , \CF/n20546 , \CF/n11_adj_3530 , \CF/n5106 , \CF/dd_2 , 
         \CF/dd_1 , \CF/n669 , \CF/n670 , \CF/clk_c_enable_118 , \CF/dd_3 , 
         \CF/n668 , \CF/de_0 , \CF/n20545 , \CF/n20542 , \CF/n11_adj_3531 , 
         \CF/n5108 , \CF/de_2 , \CF/de_1 , \CF/n629 , \CF/n630 , 
         \CF/clk_c_enable_121 , \CF/de_3 , \CF/n628 , \CF/n19742 , \CF/n19778 , 
         \CF/n19727 , \CF/df_0 , \CF/n20541 , \CF/n20536 , \CF/n11_adj_3532 , 
         \CF/n5110 , \CF/df_2 , \CF/df_1 , \CF/n587 , \CF/n588 , 
         \CF/clk_c_enable_124 , \CF/df_3 , \CF/n586 , \CF/dg_0 , 
         \CF/n11_adj_3533 , \CF/clk_c_enable_130 , \CF/dg_2 , \CF/dg_1 , 
         \CF/n543 , \CF/n544 , \CF/clk_c_enable_127 , \CF/dg_3 , \CF/n542 , 
         \CF/n19843 , \CF/n493 , \CF/dh_0 , \CF/n11_adj_3534 , \CF/dh_2 , 
         \CF/dh_1 , \CF/n497 , \CF/n498 , \CF/dh_3 , \CF/n496 , \CB/n20558 , 
         \CB/n20548 , \CB/n20505 , \CB/DQ_N_230 , DQ_N_215, 
         \DT/clk_c_enable_132 , \DT/codeP_0 , \DT/n8 , \DT/n5116 , 
         \DT/codeP_1 , \DT/codeP_2 , \DT/n19715 , \DT/n3 , \MC/MK/n19916 , 
         \MC/MK/n9 , \MC/MK/keysampulse , \MC/MK/keysampulse_N_3307 , sck_c, 
         \DT/shift_clock_ls , mode_key_c, \MC/MK/btnstate_N_3301 , 
         \MC/MK/keystore_0 , n19748, n11, \CC/n6_adj_3495 , rst_c, 
         \DT/rck_N_3190 , \DT/n4 , \DT/n19981 , \DT/din_N_3179 , 
         \DT/din_N_3186 , din_c, rck_c, \MC/MK/keystate_N_3305 , kmodstate, 
         \MC/MK/keysampulse_ls , mode_0, mode_1, linecode_87_N_2650_1, 
         linecode_16, clk_c_enable_151, n9500, n13933, n12964, n11770, n12454, 
         \DT/n50 , \DT/n58 , \DT/n20036 , \DT/n49 , \DT/sck_N_3189 , \CC/db3 , 
         \CC/db2 , \MC/MK/n28 , \CF/DataF_0_31_N_2598_1 , 
         \CF/DataF_0_31_N_2598_0 , tempF_0_0, \MC/MK/n38 , tempF_0_1, 
         \CF/DataF_0_31_N_2598_3 , \CF/DataF_0_31_N_2598_2 , \BC/n52_adj_3508 , 
         tempF_0_2, \MC/MK/n32 , tempF_0_3, \CF/DataF_1_31_N_2566_1 , 
         \CF/DataF_1_31_N_2566_0 , \CB/n21_adj_3516 , tempF_1_0, 
         \BC/n48_adj_3507 , tempF_1_1, \CF/DataF_1_31_N_2566_3 , 
         \CF/DataF_1_31_N_2566_2 , tempF_1_2, \CB/n21_adj_3509 , tempF_1_3, 
         temp_1_2, temp_1_1, temp_1_0, \CF/DataF_2_31_N_2534_1 , 
         \CF/DataF_2_31_N_2534_0 , n19876, tempF_2_0, n19952, tempF_2_1, 
         temp_0_2, temp_0_1, temp_0_3, temp_0_0, \CF/DataF_2_31_N_2534_3 , 
         \CF/DataF_2_31_N_2534_2 , \DE/n19868 , tempF_2_2, \DE/n20573 , 
         tempF_2_3, temp_2_2, temp_2_3, temp_2_0, temp_2_1, temp_3_2, temp_3_3, 
         temp_3_0, temp_3_1, \CF/DataF_3_31_N_2502_1 , 
         \CF/DataF_3_31_N_2502_0 , \DE/n20413 , tempF_3_0, \DE/n20420 , 
         tempF_3_1, \CF/DataF_3_31_N_2502_3 , \CF/DataF_3_31_N_2502_2 , 
         tempF_3_2, tempF_3_3, \CF/DataF_4_31_N_2470_1 , 
         \CF/DataF_4_31_N_2470_0 , tempF_4_0, tempF_4_1, 
         \CF/DataF_4_31_N_2470_3 , \CF/DataF_4_31_N_2470_2 , \DT/n56 , 
         tempF_4_2, \DT/n51 , tempF_4_3, \DE/temp_0__4__N_2831 , n6295, 
         \DE/temp_0__4__N_2830 , \DE/temp_4__2__N_2772 , \DE/n20556 , 
         \DE/temp_0_4_N_2865_1 , \DE/n20557 , \DE/temp_0__4__N_2827 , 
         \DE/n20559 , \DE/n20539 , n6294, \DE/temp_0__4__N_2824 , \DE/n20554 , 
         \DE/temp_0__4__N_2821 , \DE/n20547 , \DE/n20574 , 
         \DE/temp_0_4_N_2820_4 , temp_0_4, \DE/temp_1__4__N_2815 , \DE/n20534 , 
         \DE/temp_1__4__N_2812 , \DE/n4 , \DE/n20530 , \DE/n20533 , 
         \DE/temp_1_4_N_2930_2 , \DE/temp_1__4__N_2809 , \DE/n4_adj_3524 , 
         \DE/n5692 , \DE/temp_1__4__N_2806 , temp_1_3, \DE/n20537 , 
         \DE/temp_1_4_N_2805_4 , temp_1_4, \DE/temp_2__4__N_2800 , 
         \DE/temp_2__4__N_3061 , \DE/temp_2__4__N_2797 , \DE/n20528 , 
         \DE/n20526 , \DE/temp_2__4__N_2794 , \DE/n20525 , \DE/n20522 , 
         \DE/temp_2__4__N_2791 , \DE/temp_3__4__N_2785 , 
         \DE/temp_4_2_N_2768_0 , \DE/temp_3__4__N_2782 , \DE/n20524 , 
         \DE/n20520 , \DE/temp_3__4__N_2779 , \DE/n20787 , 
         \DE/temp_3__4__N_2776 , \DE/temp_4__2__N_2770 , 
         \DE/temp_4__2__N_2769 , temp_4_0, \DE/temp_4__2__N_2730 , 
         \DE/temp_4__2__N_2767 , \DE/temp_4__31__N_2727 , temp_4_1, temp_4_2, 
         kmodstate_ls, \DE/temp_4__31__N_2726 , temp_4_3, \DT/n20502 , 
         \DT/n20219 , n20504, n20135, \DT/n19966 , linecode_71, \DT/n15496 , 
         \DT/n20386 , n20160, \DT/n19941 , \DT/n20388 , \DT/n20604 , 
         \DT/n20598 , \DT/din_N_3183 , \DT/n19836 , \DT/din_N_3184 , 
         \DT/n20281 , \DT/n1836 , \DT/n1835 , \DT/n15479 , \DT/n19817 , 
         \DT/n20507 , \DT/n1838 , \DT/n1839 , \DT/n19021 , \DT/n1837 , 
         \DT/n20243 , \DT/n138_adj_3547 , n6, \DT/n20549 , \DT/n20569 , n20561, 
         linecode_7_N_2688_3, \DT/n20629 , \DT/n19855 , \DT/n20279 , 
         \DE/n20408 , \DE/n20920 , \DT/n15493 , \DT/n14525 , n20923, 
         \DE/n20422 , \DE/n20919 , \DT/n15503 , \DT/n14543 , \DT/n15485 , 
         n20926, n20623, \DT/n20617 , n30_adj_3552, \DT/n20241 , \CB/n20562 , 
         \CB/n8 , \CB/n4 , \CB/n7 , \CB/n16469 , \CB/n20601 , \CB/n21 , 
         \CB/n20544 , \CB/n20259 , \CB/n20261 , \CB/n20257 , n30_adj_3555, 
         linecode_69, \DT/n20412 , \DT/n20251 , \DT/n19814 , \DT/n20252 , 
         \CB/n9_adj_3514 , \CB/n20538 , \CB/n15374 , \CB/n20264 , 
         \CB/overflow_enable_4 , \CB/read_in , \CC/n5 , \CC/n14 , \DT/n20385 , 
         \DT/n20240 , \DT/n42 , \DT/n54 , \DT/n60 , \DT/n41 , \DT/n39 , 
         \DT/n1834 , \DT/n20611 , \DT/n20250 , \DT/n46 , \DT/n20570 , 
         \DT/n20584 , \DT/n19819 , \DT/n20563 , \DT/n134_adj_3548 , 
         \DT/n20553 , \DT/n1848 , n15_adj_3553, n15_adj_3556, \CF/de3 , 
         \CF/de2 , \CF/dg1 , \CF/dd2 , \CF/df0 , \CF/dd0 , \CF/n20535 , 
         \CF/dd3 , \CF/df1 , \CF/dd1 , \CF/df3 , \CF/n8 , \CF/dg0 , 
         \DE/n20523 , \DE/n20527 , \DE/linecode_7_N_2688_7 , \CB/n20550 , 
         \CB/n19799 , \CB/n19775 , \CB/n20591 , \CB/n16914 , \CB/n19717 , 
         \CB/n6 , \CB/n20529 , \CB/n20571 , \CB/overflow_enable_11 , 
         \CB/overflow_enable_49 , \CB/n22 , \CB/n23 , \CB/n18861 , \CB/n14 , 
         \CB/n20532 , \CB/overflow_enable_10 , \CB/n20531 , 
         \CB/overflow_enable_5 , \CB/n5_adj_3510 , \CB/overflow_enable_9 , 
         \CB/n5_adj_3511 , \CB/overflow_enable_1 , \CB/n79 , 
         \CB/overflow_enable_39 , \CB/overflow_enable_38 , 
         \CB/overflow_enable_37 , \CB/n26_adj_3512 , \CB/n4_adj_3518 , 
         \CB/n6_adj_3513 , \CB/n15449 , \CB/n4_adj_3517 , \CB/n20579 , 
         \CB/n20587 , \CB/n19800 , \CB/n12 , \CB/n19912 , \CB/n2083 , 
         \CB/overflow_enable_6 , \CB/n19902 , \CB/n19840 , \CB/n29_adj_3515 , 
         \CB/n20582 , \CB/n19723 , \BC/n46_adj_3505 , \BC/n54_adj_3504 , 
         \BC/n38 , \BC/n50_adj_3506 , \BC/n56 , \BC/n37 , \BC/n34 , \BC/n42 , 
         \MC/MK/n42 , \MC/MK/n46 , \MC/MK/n43 , \MC/MK/n47 , \MC/MK/n40 , 
         \MC/MK/n45 , \CC/da2 , \CC/da3 , \CC/n14_adj_3483 , \CC/db1 , 
         \CC/db0 , \CC/n6 , \CF/dg2 , \CF/dh0 , \CF/de0 , \CF/df2 , \CF/de1 , 
         \CF/dh2 , \CB/overflow_enable_7 , \BC/div_clk_ls , \CF/dg3 , \CF/dh1 , 
         \CF/dh3 , VCCI;

  DT_SLICE_0 \DT/SLICE_0 ( .A0(\DT/shift_clock_cnt_31 ), .DI0(\DT/n134 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18607 ), .F0(\DT/n134 ), 
    .Q0(\DT/shift_clock_cnt_31 ));
  DT_SLICE_1 \DT/SLICE_1 ( .A1(\DT/shift_clock_cnt_30 ), 
    .A0(\DT/shift_clock_cnt_29 ), .DI1(\DT/n135 ), .DI0(\DT/n136 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18606 ), .F0(\DT/n136 ), 
    .Q0(\DT/shift_clock_cnt_29 ), .F1(\DT/n135 ), .Q1(\DT/shift_clock_cnt_30 ), 
    .FCO(\DT/n18607 ));
  DT_SLICE_2 \DT/SLICE_2 ( .A1(\DT/shift_clock_cnt_28 ), 
    .A0(\DT/shift_clock_cnt_27 ), .DI1(\DT/n137 ), .DI0(\DT/n138 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18605 ), .F0(\DT/n138 ), 
    .Q0(\DT/shift_clock_cnt_27 ), .F1(\DT/n137 ), .Q1(\DT/shift_clock_cnt_28 ), 
    .FCO(\DT/n18606 ));
  DT_SLICE_3 \DT/SLICE_3 ( .A1(\DT/shift_clock_cnt_26 ), 
    .A0(\DT/shift_clock_cnt_25 ), .DI1(\DT/n139 ), .DI0(\DT/n140 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18604 ), .F0(\DT/n140 ), 
    .Q0(\DT/shift_clock_cnt_25 ), .F1(\DT/n139 ), .Q1(\DT/shift_clock_cnt_26 ), 
    .FCO(\DT/n18605 ));
  DT_SLICE_4 \DT/SLICE_4 ( .A1(\DT/shift_clock_cnt_24 ), 
    .A0(\DT/shift_clock_cnt_23 ), .DI1(\DT/n141 ), .DI0(\DT/n142 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18603 ), .F0(\DT/n142 ), 
    .Q0(\DT/shift_clock_cnt_23 ), .F1(\DT/n141 ), .Q1(\DT/shift_clock_cnt_24 ), 
    .FCO(\DT/n18604 ));
  DT_SLICE_5 \DT/SLICE_5 ( .A1(\DT/shift_clock_cnt_22 ), 
    .A0(\DT/shift_clock_cnt_21 ), .DI1(\DT/n143 ), .DI0(\DT/n144 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18602 ), .F0(\DT/n144 ), 
    .Q0(\DT/shift_clock_cnt_21 ), .F1(\DT/n143 ), .Q1(\DT/shift_clock_cnt_22 ), 
    .FCO(\DT/n18603 ));
  DT_SLICE_6 \DT/SLICE_6 ( .A1(\DT/shift_clock_cnt_20 ), 
    .A0(\DT/shift_clock_cnt_19 ), .DI1(\DT/n145 ), .DI0(\DT/n146 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18601 ), .F0(\DT/n146 ), 
    .Q0(\DT/shift_clock_cnt_19 ), .F1(\DT/n145 ), .Q1(\DT/shift_clock_cnt_20 ), 
    .FCO(\DT/n18602 ));
  DT_SLICE_7 \DT/SLICE_7 ( .A1(\DT/shift_clock_cnt_18 ), 
    .A0(\DT/shift_clock_cnt_17 ), .DI1(\DT/n147 ), .DI0(\DT/n148 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18600 ), .F0(\DT/n148 ), 
    .Q0(\DT/shift_clock_cnt_17 ), .F1(\DT/n147 ), .Q1(\DT/shift_clock_cnt_18 ), 
    .FCO(\DT/n18601 ));
  DT_SLICE_8 \DT/SLICE_8 ( .A1(\DT/shift_clock_cnt_16 ), 
    .A0(\DT/shift_clock_cnt_15 ), .DI1(\DT/n149 ), .DI0(\DT/n150 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18599 ), .F0(\DT/n150 ), 
    .Q0(\DT/shift_clock_cnt_15 ), .F1(\DT/n149 ), .Q1(\DT/shift_clock_cnt_16 ), 
    .FCO(\DT/n18600 ));
  DT_SLICE_9 \DT/SLICE_9 ( .A1(\DT/shift_clock_cnt_14 ), 
    .A0(\DT/shift_clock_cnt_13 ), .DI1(\DT/n151 ), .DI0(\DT/n152 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18598 ), .F0(\DT/n152 ), 
    .Q0(\DT/shift_clock_cnt_13 ), .F1(\DT/n151 ), .Q1(\DT/shift_clock_cnt_14 ), 
    .FCO(\DT/n18599 ));
  DT_SLICE_10 \DT/SLICE_10 ( .A1(\DT/shift_clock_cnt_12 ), 
    .A0(\DT/shift_clock_cnt_11 ), .DI1(\DT/n153 ), .DI0(\DT/n154 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18597 ), .F0(\DT/n154 ), 
    .Q0(\DT/shift_clock_cnt_11 ), .F1(\DT/n153 ), .Q1(\DT/shift_clock_cnt_12 ), 
    .FCO(\DT/n18598 ));
  DT_SLICE_11 \DT/SLICE_11 ( .A1(\DT/shift_clock_cnt_10 ), 
    .A0(\DT/shift_clock_cnt_9 ), .DI1(\DT/n155 ), .DI0(\DT/n156 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18596 ), .F0(\DT/n156 ), 
    .Q0(\DT/shift_clock_cnt_9 ), .F1(\DT/n155 ), .Q1(\DT/shift_clock_cnt_10 ), 
    .FCO(\DT/n18597 ));
  DT_SLICE_12 \DT/SLICE_12 ( .A1(\DT/shift_clock_cnt_8 ), 
    .A0(\DT/shift_clock_cnt_7 ), .DI1(\DT/n157 ), .DI0(\DT/n158 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18595 ), .F0(\DT/n158 ), 
    .Q0(\DT/shift_clock_cnt_7 ), .F1(\DT/n157 ), .Q1(\DT/shift_clock_cnt_8 ), 
    .FCO(\DT/n18596 ));
  DT_SLICE_13 \DT/SLICE_13 ( .A1(\DT/shift_clock_cnt_6 ), 
    .A0(\DT/shift_clock_cnt_5 ), .DI1(\DT/n159 ), .DI0(\DT/n160 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18594 ), .F0(\DT/n160 ), 
    .Q0(\DT/shift_clock_cnt_5 ), .F1(\DT/n159 ), .Q1(\DT/shift_clock_cnt_6 ), 
    .FCO(\DT/n18595 ));
  DT_SLICE_14 \DT/SLICE_14 ( .A1(\DT/shift_clock_cnt_4 ), 
    .A0(\DT/shift_clock_cnt_3 ), .DI1(\DT/n161 ), .DI0(\DT/n162 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18593 ), .F0(\DT/n162 ), 
    .Q0(\DT/shift_clock_cnt_3 ), .F1(\DT/n161 ), .Q1(\DT/shift_clock_cnt_4 ), 
    .FCO(\DT/n18594 ));
  DT_SLICE_15 \DT/SLICE_15 ( .A1(\DT/shift_clock_cnt_2 ), 
    .A0(\DT/shift_clock_cnt_1 ), .DI1(\DT/n163 ), .DI0(\DT/n164 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .FCI(\DT/n18592 ), .F0(\DT/n164 ), 
    .Q0(\DT/shift_clock_cnt_1 ), .F1(\DT/n163 ), .Q1(\DT/shift_clock_cnt_2 ), 
    .FCO(\DT/n18593 ));
  DT_SLICE_16 \DT/SLICE_16 ( .A1(\DT/shift_clock_cnt_0 ), .DI1(\DT/n165 ), 
    .LSR(\DT/n15573 ), .CLK(clk_c), .F1(\DT/n165 ), 
    .Q1(\DT/shift_clock_cnt_0 ), .FCO(\DT/n18592 ));
  CF_SLICE_17 \CF/SLICE_17 ( .A1(\CF/n12374 ), .A0(\CF/n12375 ), 
    .FCI(\CF/n18711 ), .F0(\CF/n12385 ), .F1(\CF/n12384 ), .FCO(\CF/n18712 ));
  CF_SLICE_18 \CF/SLICE_18 ( .FCI(\CF/n18466 ), .F0(\CF/n14143 ));
  CF_SLICE_19 \CF/SLICE_19 ( .B1(\CF/Fahrenheit_9 ), .A1(\CF/tmp_9 ), 
    .B0(\CF/Fahrenheit_8 ), .A0(\CF/tmp_8 ), .FCI(\CF/n18422 ), 
    .FCO(\CF/n18423 ));
  SLICE_20 SLICE_20( .B1(n27), .A1(\CF/n14282 ), .B0(n28), .A0(\CF/n14283 ), 
    .M1(sample_8), .M0(sample_7), .CLK(clk_c), .FCI(\CF/n18535 ), 
    .F0(\CF/Fahrenheit_28 ), .Q0(\CC/Data71_0 ), .F1(\CF/Fahrenheit_29 ), 
    .Q1(\CC/Data81_0 ), .FCO(\CF/n18536 ));
  CF_SLICE_21 \CF/SLICE_21 ( .A1(n80), .A0(n81), .FCI(\CF/n18465 ), 
    .F0(\CF/n14120 ), .F1(\CF/n14119 ), .FCO(\CF/n18466 ));
  CF_SLICE_22 \CF/SLICE_22 ( .A1(n82), .A0(n83), .FCI(\CF/n18464 ), 
    .F0(\CF/n14122 ), .F1(\CF/n14121 ), .FCO(\CF/n18465 ));
  CF_SLICE_23 \CF/SLICE_23 ( .A1(\CF/n12376 ), .C0(tempC_3_3), .B0(tempC_3_2), 
    .A0(tempC_3_0), .FCI(\CF/n18710 ), .F0(\CF/n12387 ), .F1(\CF/n12386 ), 
    .FCO(\CF/n18711 ));
  CF_SLICE_24 \CF/SLICE_24 ( .B1(tempC_3_2), .A1(tempC_3_1), .B0(tempC_3_1), 
    .A0(tempC_3_0), .F1(\CF/n12388 ), .FCO(\CF/n18710 ));
  CF_SLICE_25 \CF/SLICE_25 ( .A1(n84), .B0(n85), .A0(\CF/n12322 ), 
    .FCI(\CF/n18463 ), .F0(\CF/n14124 ), .F1(\CF/n14123 ), .FCO(\CF/n18464 ));
  CF_SLICE_26 \CF/SLICE_26 ( .B1(n86), .A1(\CF/n11663 ), .A0(n87), 
    .FCI(\CF/n18462 ), .F0(\CF/n14126 ), .F1(\CF/n14125 ), .FCO(\CF/n18463 ));
  SLICE_27 SLICE_27( .B1(n29), .A1(\CF/n14284 ), .B0(n30), .A0(\CF/n14285 ), 
    .M1(sample_6), .M0(sample_5), .CLK(clk_c), .FCI(\CF/n18534 ), 
    .F0(\CF/Fahrenheit_26 ), .Q0(\CC/Data51_0 ), .F1(\CF/Fahrenheit_27 ), 
    .Q1(\CC/Data61_0 ), .FCO(\CF/n18535 ));
  CF_SLICE_28 \CF/SLICE_28 ( .A1(n88), .A0(n89), .FCI(\CF/n18461 ), 
    .F0(\CF/n14128 ), .F1(\CF/n14127 ), .FCO(\CF/n18462 ));
  SLICE_29 SLICE_29( .B1(n31), .A1(\CF/n14286 ), .B0(n32), .A0(\CF/n14287 ), 
    .M1(sample_4), .M0(\CC/Data61_0 ), .CLK(clk_c), .FCI(\CF/n18533 ), 
    .F0(\CF/Fahrenheit_24 ), .Q0(\CC/DataOut_integer_31_N_415_2 ), 
    .F1(\CF/Fahrenheit_25 ), .Q1(\CC/Data41_0 ), .FCO(\CF/n18534 ));
  SLICE_30 SLICE_30( .B1(n33), .A1(\CF/n14288 ), .B0(n34), .A0(\CF/n14289 ), 
    .M1(sample_3), .M0(\CC/Data31_0 ), .CLK(clk_c), .FCI(\CF/n18532 ), 
    .F0(\CF/Fahrenheit_22 ), .Q0(\CC/DataOut_decimal_31_N_447_3 ), 
    .F1(\CF/Fahrenheit_23 ), .Q1(\CC/Data31_0 ), .FCO(\CF/n18533 ));
  CF_SLICE_31 \CF/SLICE_31 ( .A0(\CF/n11702 ), .FCI(\CF/n18708 ), 
    .F0(\CF/n11704 ), .F1(\CF/n11713 ));
  SLICE_32 SLICE_32( .B1(n35), .A1(\CF/n14290 ), .B0(n36), .A0(\CF/n14291 ), 
    .M1(sample_2), .M0(\CC/Data21_0 ), .CLK(clk_c), .FCI(\CF/n18531 ), 
    .F0(\CF/Fahrenheit_20 ), .Q0(\CC/DataOut_decimal_31_N_447_2 ), 
    .F1(\CF/Fahrenheit_21 ), .Q1(\CC/Data21_0 ), .FCO(\CF/n18532 ));
  CF_SLICE_33 \CF/SLICE_33 ( .A1(n90), .B0(n91), .A0(\CF/n12307 ), 
    .FCI(\CF/n18460 ), .F0(\CF/n14130 ), .F1(\CF/n14129 ), .FCO(\CF/n18461 ));
  SLICE_34 SLICE_34( .B1(n37), .A1(\CF/n14292 ), .B0(n38), .A0(\CF/n14293 ), 
    .M1(sample_1), .M0(sample_10), .CLK(clk_c), .FCI(\CF/n18530 ), 
    .F0(\CF/Fahrenheit_18 ), .Q0(\CC/Data101_0 ), .F1(\CF/Fahrenheit_19 ), 
    .Q1(\CC/Data11_0 ), .FCO(\CF/n18531 ));
  SLICE_35 SLICE_35( .B1(n39), .A1(\CF/n14294 ), .B0(n40), .A0(\CF/n14295 ), 
    .M1(\CC/Data101_0 ), .M0(\CC/Data91_0 ), .CLK(clk_c), .FCI(\CF/n18529 ), 
    .F0(\CF/Fahrenheit_16 ), .Q0(\CC/DataOut_integer_31_N_415_5 ), 
    .F1(\CF/Fahrenheit_17 ), .Q1(\CC/DataOut_integer_31_N_415_6 ), 
    .FCO(\CF/n18530 ));
  SLICE_36 SLICE_36( .B1(n41), .A1(\CF/n14296 ), .B0(n42), .A0(\CF/n14297 ), 
    .M1(\CC/d4_3 ), .M0(\CC/d4_2 ), .CE(clk_c_enable_272), .CLK(clk_c), 
    .FCI(\CF/n18528 ), .F0(\CF/Fahrenheit_14 ), .Q0(\CC/d42 ), 
    .F1(\CF/Fahrenheit_15 ), .Q1(\CC/d43 ), .FCO(\CF/n18529 ));
  CF_SLICE_37 \CF/SLICE_37 ( .A1(\CF/n11696 ), .A0(\CF/n11697 ), 
    .FCI(\CF/n18707 ), .F0(\CF/n11706 ), .F1(\CF/n11705 ), .FCO(\CF/n18708 ));
  CF_SLICE_38 \CF/SLICE_38 ( .B1(\CF/Fahrenheit_7 ), .A1(\CF/tmp_7 ), 
    .B0(\CF/Fahrenheit_6 ), .A0(\CF/tmp_6 ), .FCI(\CF/n18421 ), 
    .FCO(\CF/n18422 ));
  SLICE_39 SLICE_39( .B1(n43), .A1(\CF/n14298 ), .B0(n44), .A0(\CF/n14299 ), 
    .M1(\CC/DataOut_integer_31_N_415_1 ), .M0(\CC/DataOut_integer_31_N_415_0 ), 
    .CLK(clk_c), .FCI(\CF/n18527 ), .F0(\CF/Fahrenheit_12 ), 
    .Q0(\CC/DataOut_integer_0 ), .F1(\CF/Fahrenheit_13 ), 
    .Q1(\CC/DataOut_integer_1 ), .FCO(\CF/n18528 ));
  CF_SLICE_40 \CF/SLICE_40 ( .A1(\CF/n11698 ), .A0(\CF/n11699 ), 
    .FCI(\CF/n18706 ), .F0(\CF/n11708 ), .F1(\CF/n11707 ), .FCO(\CF/n18707 ));
  SLICE_41 SLICE_41( .B1(n45), .A1(\CF/n14300 ), .B0(n46), .A0(\CF/n14301 ), 
    .M1(\CC/DataOut_decimal_31_N_447_5 ), .M0(\CC/DataOut_decimal_31_N_447_3 ), 
    .CLK(clk_c), .FCI(\CF/n18526 ), .F0(\CF/Fahrenheit_10 ), 
    .Q0(\CC/DataOut_decimal_3 ), .F1(\CF/Fahrenheit_11 ), 
    .Q1(\CC/DataOut_decimal_5 ), .FCO(\CF/n18527 ));
  CF_SLICE_42 \CF/SLICE_42 ( .A1(\CF/n11700 ), .C0(tempC_4_3), .B0(tempC_4_2), 
    .A0(tempC_4_0), .FCI(\CF/n18705 ), .F0(\CF/n11710 ), .F1(\CF/n11709 ), 
    .FCO(\CF/n18706 ));
  CF_SLICE_43 \CF/SLICE_43 ( .B1(tempC_4_2), .A1(tempC_4_1), .B0(tempC_4_1), 
    .A0(tempC_4_0), .F1(\CF/n11711 ), .FCO(\CF/n18705 ));
  CF_SLICE_44 \CF/SLICE_44 ( .B1(n92), .A1(\CF/n12308 ), .B0(n93), 
    .A0(\CF/n12309 ), .FCI(\CF/n18459 ), .F0(\CF/n14132 ), .F1(\CF/n14131 ), 
    .FCO(\CF/n18460 ));
  CF_SLICE_45 \CF/SLICE_45 ( .B1(n94), .A1(\CF/n12310 ), .B0(n95), 
    .A0(\CF/n12311 ), .FCI(\CF/n18458 ), .F0(\CF/n14134 ), .F1(\CF/n14133 ), 
    .FCO(\CF/n18459 ));
  CF_SLICE_46 \CF/SLICE_46 ( .FCI(\CF/n18703 ), .F0(\CF/n11702 ));
  SLICE_47 SLICE_47( .B1(n47), .A1(\CF/n14302 ), .B0(n48), .A0(\CF/n14303 ), 
    .M1(\CC/DataOut_decimal_31_N_447_2 ), .M0(\CC/DataOut_decimal_31_N_447_1 ), 
    .CLK(clk_c), .FCI(\CF/n18525 ), .F0(\CF/Fahrenheit_8 ), 
    .Q0(\CC/DataOut_decimal_1 ), .F1(\CF/Fahrenheit_9 ), 
    .Q1(\CC/DataOut_decimal_2 ), .FCO(\CF/n18526 ));
  SLICE_48 SLICE_48( .B1(n49), .A1(\CF/n14304 ), .B0(n50), .A0(\CF/n14305 ), 
    .M1(\CC/Data51_0 ), .M0(\CC/Data41_0 ), .CLK(clk_c), 
    .Q0(\CC/DataOut_integer_31_N_415_0 ), .F1(\CF/Fahrenheit_7 ), 
    .Q1(\CC/DataOut_integer_31_N_415_1 ), .FCO(\CF/n18525 ));
  CF_SLICE_49 \CF/SLICE_49 ( .B1(\CF/Fahrenheit_5 ), .A1(\CF/tmp_5 ), 
    .B0(\CF/Fahrenheit_4 ), .A0(\CF/tmp_4 ), .FCI(\CF/n18420 ), 
    .FCO(\CF/n18421 ));
  CF_SLICE_50 \CF/SLICE_50 ( .D1(tempC_4_3), .C1(tempC_4_2), .B1(tempC_4_1), 
    .A1(tempC_4_0), .B0(\CF/n6 ), .A0(tempC_4_3), .FCI(\CF/n18702 ), 
    .F0(\CF/n11697 ), .F1(\CF/n11696 ), .FCO(\CF/n18703 ));
  CF_SLICE_51 \CF/SLICE_51 ( .B1(\CF/n20581 ), .A1(\CF/n18242 ), 
    .B0(\CF/n18239 ), .A0(tempC_4_2), .FCI(\CF/n18701 ), .F0(\CF/n11699 ), 
    .F1(\CF/n11698 ), .FCO(\CF/n18702 ));
  CF_SLICE_52 \CF/SLICE_52 ( .C1(tempC_4_3), .B1(tempC_4_1), .A1(tempC_4_0), 
    .B0(tempC_4_2), .A0(tempC_4_0), .F1(\CF/n11700 ), .FCO(\CF/n18701 ));
  CF_SLICE_53 \CF/SLICE_53 ( .B0(\CF/n18277 ), .A0(tempC_3_3), 
    .FCI(\CF/n18699 ), .F0(\CF/n12371 ), .F1(\CF/n12378 ));
  CF_SLICE_54 \CF/SLICE_54 ( .B1(\CF/n18277 ), .A1(tempC_3_3), 
    .B0(\CF/n20555 ), .A0(tempC_3_2), .FCI(\CF/n18698 ), .F0(\CF/n12373 ), 
    .F1(\CF/n12372 ), .FCO(\CF/n18699 ));
  CF_SLICE_55 \CF/SLICE_55 ( .B1(\CF/n20575 ), .A1(\CF/n18265 ), 
    .B0(tempC_3_2), .A0(tempC_3_0), .FCI(\CF/n18697 ), .F0(\CF/n12375 ), 
    .F1(\CF/n12374 ), .FCO(\CF/n18698 ));
  CF_SLICE_56 \CF/SLICE_56 ( .B1(tempC_3_3), .A1(tempC_3_1), .B0(tempC_3_2), 
    .A0(tempC_3_0), .F1(\CF/n12376 ), .FCO(\CF/n18697 ));
  CF_SLICE_57 \CF/SLICE_57 ( .FCI(\CF/n18519 ), .F1(\CF/n11663 ));
  CF_SLICE_58 \CF/SLICE_58 ( .FCI(\CF/n18518 ), .FCO(\CF/n18519 ));
  CF_SLICE_59 \CF/SLICE_59 ( .FCI(\CF/n18695 ), .F0(\CF/n12937 ));
  CF_SLICE_60 \CF/SLICE_60 ( .A1(\CF/n12404 ), .A0(\CF/n12392 ), 
    .FCI(\CF/n18694 ), .F0(\CF/n12924 ), .F1(\CF/n12923 ), .FCO(\CF/n18695 ));
  CF_SLICE_61 \CF/SLICE_61 ( .A1(\CF/n12393 ), .A0(\CF/n12394 ), 
    .FCI(\CF/n18693 ), .F0(\CF/n12926 ), .F1(\CF/n12925 ), .FCO(\CF/n18694 ));
  CF_SLICE_62 \CF/SLICE_62 ( .A1(\CF/n12395 ), .A0(\CF/n12396 ), 
    .FCI(\CF/n18692 ), .F0(\CF/n12928 ), .F1(\CF/n12927 ), .FCO(\CF/n18693 ));
  CF_SLICE_63 \CF/SLICE_63 ( .A1(\CF/n12397 ), .A0(\CF/n12398 ), 
    .FCI(\CF/n18691 ), .F0(\CF/n12930 ), .F1(\CF/n12929 ), .FCO(\CF/n18692 ));
  CF_SLICE_64 \CF/SLICE_64 ( .A1(\CF/n12399 ), .A0(\CF/n12400 ), 
    .FCI(\CF/n18690 ), .F0(\CF/n12932 ), .F1(\CF/n12931 ), .FCO(\CF/n18691 ));
  CF_SLICE_65 \CF/SLICE_65 ( .A1(\CF/n12401 ), .B0(tempC_3_3), 
    .A0(\CF/n12402 ), .FCI(\CF/n18689 ), .F0(\CF/n12934 ), .F1(\CF/n12933 ), 
    .FCO(\CF/n18690 ));
  CF_SLICE_66 \CF/SLICE_66 ( .B1(tempC_3_2), .A1(\CF/n13340 ), .B0(tempC_3_1), 
    .A0(tempC_3_0), .F1(\CF/n12935 ), .FCO(\CF/n18689 ));
  CF_SLICE_67 \CF/SLICE_67 ( .A0(\CF/n12921 ), .FCI(\CF/n18687 ), 
    .F0(\CF/n9534 ));
  CF_SLICE_68 \CF/SLICE_68 ( .A0(n259), .FCI(\CF/n18517 ), .F0(\CF/n11651 ), 
    .F1(\CF/n11650 ), .FCO(\CF/n18518 ));
  CF_SLICE_69 \CF/SLICE_69 ( .A1(\CF/n12900 ), .A0(\CF/n12901 ), 
    .FCI(\CF/n18686 ), .F0(\CF/n9536 ), .F1(\CF/n9535 ), .FCO(\CF/n18687 ));
  CF_SLICE_70 \CF/SLICE_70 ( .A1(n260), .A0(n261), .FCI(\CF/n18516 ), 
    .F0(\CF/n11653 ), .F1(\CF/n11652 ), .FCO(\CF/n18517 ));
  CF_SLICE_71 \CF/SLICE_71 ( .B1(\CF/Fahrenheit_3 ), .A1(\CF/tmp_3 ), 
    .B0(Fahrenheit_2), .A0(\CF/tmp_2 ), .FCI(\CF/n18419 ), .FCO(\CF/n18420 ));
  CF_SLICE_72 \CF/SLICE_72 ( .A1(\CF/tmp_26 ), .A0(\CF/tmp_25 ), 
    .DI1(\CF/n114 ), .DI0(\CF/n115 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18590 ), .F0(\CF/n115 ), .Q0(\CF/tmp_25 ), .F1(\CF/n114 ), 
    .Q1(\CF/tmp_26 ));
  CF_SLICE_73 \CF/SLICE_73 ( .A1(\CF/n12902 ), .A0(\CF/n12903 ), 
    .FCI(\CF/n18685 ), .F0(\CF/n9538 ), .F1(\CF/n9537 ), .FCO(\CF/n18686 ));
  CF_SLICE_74 \CF/SLICE_74 ( .A1(\CF/n12904 ), .A0(\CF/n12905 ), 
    .FCI(\CF/n18684 ), .F0(\CF/n9540 ), .F1(\CF/n9539 ), .FCO(\CF/n18685 ));
  CF_SLICE_75 \CF/SLICE_75 ( .A1(n262), .A0(n263), .FCI(\CF/n18515 ), 
    .F0(\CF/n11655 ), .F1(\CF/n11654 ), .FCO(\CF/n18516 ));
  CF_SLICE_76 \CF/SLICE_76 ( .A1(n264), .A0(n265), .FCI(\CF/n18514 ), 
    .F1(\CF/n11656 ), .FCO(\CF/n18515 ));
  CF_SLICE_77 \CF/SLICE_77 ( .A1(\CF/n12906 ), .A0(\CF/n12907 ), 
    .FCI(\CF/n18683 ), .F0(\CF/n9542 ), .F1(\CF/n9541 ), .FCO(\CF/n18684 ));
  CF_SLICE_78 \CF/SLICE_78 ( .B1(n96), .A1(\CF/n12312 ), .B0(n97), 
    .A0(\CF/n12313 ), .FCI(\CF/n18457 ), .F0(\CF/n14136 ), .F1(\CF/n14135 ), 
    .FCO(\CF/n18458 ));
  SLICE_79 SLICE_79( .A1(\CF/n12908 ), .A0(\CF/n12909 ), 
    .M0(\CC/DataOut_integer_31_N_415_6 ), .CLK(clk_c), .FCI(\CF/n18682 ), 
    .F0(\CF/n9544 ), .Q0(\CC/DataOut_integer_6 ), .F1(\CF/n9543 ), 
    .FCO(\CF/n18683 ));
  SLICE_80 SLICE_80( .A1(\CF/n12910 ), .A0(\CF/n12911 ), 
    .M1(\CC/DataOut_integer_31_N_415_5 ), .M0(\CC/DataOut_integer_31_N_415_4 ), 
    .CLK(clk_c), .FCI(\CF/n18681 ), .F0(\CF/n9546 ), 
    .Q0(\CC/DataOut_integer_4 ), .F1(\CF/n9545 ), .Q1(\CC/DataOut_integer_5 ), 
    .FCO(\CF/n18682 ));
  CF_SLICE_81 \CF/SLICE_81 ( .A1(n271), .FCI(\CF/n18513 ), .F0(\CF/n11659 ), 
    .FCO(\CF/n18514 ));
  CF_SLICE_82 \CF/SLICE_82 ( .B1(n98), .A1(\CF/n12314 ), .B0(n99), 
    .A0(\CF/n12315 ), .FCI(\CF/n18456 ), .F0(\CF/n14138 ), .F1(\CF/n14137 ), 
    .FCO(\CF/n18457 ));
  CF_SLICE_83 \CF/SLICE_83 ( .A1(\CF/tmp_1 ), .FCO(\CF/n18419 ));
  CF_SLICE_84 \CF/SLICE_84 ( .B1(n100), .A1(\CF/n12316 ), .B0(n101), 
    .A0(\CF/n12317 ), .FCI(\CF/n18455 ), .F0(\CF/n14140 ), .F1(\CF/n14139 ), 
    .FCO(\CF/n18456 ));
  CF_SLICE_85 \CF/SLICE_85 ( .B1(n102), .A1(\CF/n12318 ), .B0(n103), 
    .A0(\CF/n12319 ), .F1(\CF/n14141 ), .FCO(\CF/n18455 ));
  CF_SLICE_86 \CF/SLICE_86 ( .A1(n268), .A0(n269), .FCI(\CF/n18512 ), 
    .F0(\CF/n11661 ), .F1(\CF/n11660 ), .FCO(\CF/n18513 ));
  SLICE_87 SLICE_87( .A1(\CF/n12912 ), .A0(\CF/n12913 ), 
    .M1(\CC/DataOut_integer_31_N_415_3 ), .M0(\CC/DataOut_integer_31_N_415_2 ), 
    .CLK(clk_c), .FCI(\CF/n18680 ), .F0(\CF/n9548 ), 
    .Q0(\CC/DataOut_integer_2 ), .F1(\CF/n9547 ), .Q1(\CC/DataOut_integer_3 ), 
    .FCO(\CF/n18681 ));
  CF_SLICE_88 \CF/SLICE_88 ( .A1(\CF/n12914 ), .A0(\CF/n12915 ), 
    .FCI(\CF/n18679 ), .F0(\CF/n9550 ), .F1(\CF/n9549 ), .FCO(\CF/n18680 ));
  CF_SLICE_89 \CF/SLICE_89 ( .A1(n270), .F1(\CF/n11662 ), .FCO(\CF/n18512 ));
  CF_SLICE_90 \CF/SLICE_90 ( .A0(\CF/n11663 ), .FCI(\CF/n18511 ), 
    .F1(\CF/n12322 ));
  CF_SLICE_91 \CF/SLICE_91 ( .A1(\CF/tmp_24 ), .A0(\CF/tmp_23 ), 
    .DI1(\CF/n116 ), .DI0(\CF/n117 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18589 ), .F0(\CF/n117 ), .Q0(\CF/tmp_23 ), .F1(\CF/n116 ), 
    .Q1(\CF/tmp_24 ), .FCO(\CF/n18590 ));
  CF_SLICE_92 \CF/SLICE_92 ( .FCI(\CF/n18453 ), .F0(\CF/n14308 ));
  CF_SLICE_93 \CF/SLICE_93 ( .A1(\CF/n12916 ), .A0(\CF/n12917 ), 
    .FCI(\CF/n18678 ), .F0(\CF/n9552 ), .F1(\CF/n9551 ), .FCO(\CF/n18679 ));
  CF_SLICE_94 \CF/SLICE_94 ( .A1(\CF/n12918 ), .B0(tempC_4_3), 
    .A0(\CF/n12919 ), .FCI(\CF/n18677 ), .F0(\CF/n9554 ), .F1(\CF/n9553 ), 
    .FCO(\CF/n18678 ));
  CF_SLICE_95 \CF/SLICE_95 ( .A1(\CF/n14143 ), .A0(\CF/n14119 ), 
    .FCI(\CF/n18452 ), .F0(\CF/n14283 ), .F1(\CF/n14282 ), .FCO(\CF/n18453 ));
  CF_SLICE_96 \CF/SLICE_96 ( .A1(\CF/tmp_22 ), .A0(\CF/tmp_21 ), 
    .DI1(\CF/n118 ), .DI0(\CF/n119 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18588 ), .F0(\CF/n119 ), .Q0(\CF/tmp_21 ), .F1(\CF/n118 ), 
    .Q1(\CF/tmp_22 ), .FCO(\CF/n18589 ));
  CF_SLICE_97 \CF/SLICE_97 ( .A1(\CF/tmp_20 ), .A0(\CF/tmp_19 ), 
    .DI1(\CF/n120 ), .DI0(\CF/n121 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18587 ), .F0(\CF/n121 ), .Q0(\CF/tmp_19 ), .F1(\CF/n120 ), 
    .Q1(\CF/tmp_20 ), .FCO(\CF/n18588 ));
  CF_SLICE_98 \CF/SLICE_98 ( .FCI(\CF/n18510 ), .FCO(\CF/n18511 ));
  CF_SLICE_99 \CF/SLICE_99 ( .C1(tempC_4_2), .B1(tempC_4_1), .A1(tempC_4_0), 
    .B0(tempC_4_1), .A0(tempC_4_0), .F1(\CF/n9555 ), .FCO(\CF/n18677 ));
  CF_SLICE_100 \CF/SLICE_100 ( .FCI(\CF/n18509 ), .F0(\CF/n12307 ), 
    .FCO(\CF/n18510 ));
  CF_SLICE_101 \CF/SLICE_101 ( .A1(\CF/n11650 ), .A0(\CF/n11651 ), 
    .FCI(\CF/n18508 ), .F0(\CF/n12309 ), .F1(\CF/n12308 ), .FCO(\CF/n18509 ));
  CF_SLICE_102 \CF/SLICE_102 ( .A1(\CF/n11652 ), .B0(n339), .A0(\CF/n11653 ), 
    .FCI(\CF/n18507 ), .F0(\CF/n12311 ), .F1(\CF/n12310 ), .FCO(\CF/n18508 ));
  CF_SLICE_103 \CF/SLICE_103 ( .B1(n340), .A1(\CF/n11654 ), .B0(n341), 
    .A0(\CF/n11655 ), .FCI(\CF/n18506 ), .F0(\CF/n12313 ), .F1(\CF/n12312 ), 
    .FCO(\CF/n18507 ));
  CF_SLICE_104 \CF/SLICE_104 ( .A1(\CF/tmp_18 ), .A0(\CF/tmp_17 ), 
    .DI1(\CF/n122 ), .DI0(\CF/n123 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18586 ), .F0(\CF/n123 ), .Q0(\CF/tmp_17 ), .F1(\CF/n122 ), 
    .Q1(\CF/tmp_18 ), .FCO(\CF/n18587 ));
  CF_SLICE_105 \CF/SLICE_105 ( .B1(n342), .A1(\CF/n11656 ), .B0(n343), 
    .A0(n265), .FCI(\CF/n18505 ), .F0(\CF/n12315 ), .F1(\CF/n12314 ), 
    .FCO(\CF/n18506 ));
  CF_SLICE_106 \CF/SLICE_106 ( .A1(\CF/tmp_16 ), .A0(\CF/tmp_15 ), 
    .DI1(\CF/n124 ), .DI0(\CF/n125 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18585 ), .F0(\CF/n125 ), .Q0(\CF/tmp_15 ), .F1(\CF/n124 ), 
    .Q1(\CF/tmp_16 ), .FCO(\CF/n18586 ));
  CF_SLICE_107 \CF/SLICE_107 ( .A1(\CF/n14120 ), .A0(\CF/n14121 ), 
    .FCI(\CF/n18451 ), .F0(\CF/n14285 ), .F1(\CF/n14284 ), .FCO(\CF/n18452 ));
  CF_SLICE_108 \CF/SLICE_108 ( .A1(\CF/tmp_14 ), .A0(\CF/tmp_13 ), 
    .DI1(\CF/n126 ), .DI0(\CF/n127 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18584 ), .F0(\CF/n127 ), .Q0(\CF/tmp_13 ), .F1(\CF/n126 ), 
    .Q1(\CF/tmp_14 ), .FCO(\CF/n18585 ));
  CF_SLICE_109 \CF/SLICE_109 ( .A1(\CF/tmp_12 ), .A0(\CF/tmp_11 ), 
    .DI1(\CF/n128 ), .DI0(\CF/n129 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18583 ), .F0(\CF/n129 ), .Q0(\CF/tmp_11 ), .F1(\CF/n128 ), 
    .Q1(\CF/tmp_12 ), .FCO(\CF/n18584 ));
  CF_SLICE_110 \CF/SLICE_110 ( .B1(n344), .A1(n271), .B0(n345), 
    .A0(\CF/n11659 ), .FCI(\CF/n18504 ), .F0(\CF/n12317 ), .F1(\CF/n12316 ), 
    .FCO(\CF/n18505 ));
  CF_SLICE_111 \CF/SLICE_111 ( .A1(\CF/tmp_10 ), .A0(\CF/tmp_9 ), 
    .DI1(\CF/n130 ), .DI0(\CF/n131 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18582 ), .F0(\CF/n131 ), .Q0(\CF/tmp_9 ), .F1(\CF/n130 ), 
    .Q1(\CF/tmp_10 ), .FCO(\CF/n18583 ));
  CF_SLICE_112 \CF/SLICE_112 ( .A1(\CF/tmp_8 ), .A0(\CF/tmp_7 ), 
    .DI1(\CF/n132 ), .DI0(\CF/n133 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18581 ), .F0(\CF/n133 ), .Q0(\CF/tmp_7 ), .F1(\CF/n132 ), 
    .Q1(\CF/tmp_8 ), .FCO(\CF/n18582 ));
  CF_SLICE_113 \CF/SLICE_113 ( .A1(\CF/n14122 ), .A0(\CF/n14123 ), 
    .FCI(\CF/n18450 ), .F0(\CF/n14287 ), .F1(\CF/n14286 ), .FCO(\CF/n18451 ));
  CF_SLICE_114 \CF/SLICE_114 ( .A1(\CF/tmp_6 ), .A0(\CF/tmp_5 ), 
    .DI1(\CF/n134 ), .DI0(\CF/n135 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18580 ), .F0(\CF/n135 ), .Q0(\CF/tmp_5 ), .F1(\CF/n134 ), 
    .Q1(\CF/tmp_6 ), .FCO(\CF/n18581 ));
  CF_SLICE_115 \CF/SLICE_115 ( .B1(n346), .A1(\CF/n11660 ), .B0(n347), 
    .A0(\CF/n11661 ), .FCI(\CF/n18503 ), .F0(\CF/n12319 ), .F1(\CF/n12318 ), 
    .FCO(\CF/n18504 ));
  CF_SLICE_116 \CF/SLICE_116 ( .A1(\CF/tmp_4 ), .A0(\CF/tmp_3 ), 
    .DI1(\CF/n136 ), .DI0(\CF/n137 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18579 ), .F0(\CF/n137 ), .Q0(\CF/tmp_3 ), .F1(\CF/n136 ), 
    .Q1(\CF/tmp_4 ), .FCO(\CF/n18580 ));
  CF_SLICE_117 \CF/SLICE_117 ( .A1(\CF/n14124 ), .A0(\CF/n14125 ), 
    .FCI(\CF/n18449 ), .F0(\CF/n14289 ), .F1(\CF/n14288 ), .FCO(\CF/n18450 ));
  CF_SLICE_118 \CF/SLICE_118 ( .B1(n348), .A1(\CF/n11662 ), .B0(n349), 
    .A0(n271), .F1(\CF/n12320 ), .FCO(\CF/n18503 ));
  CF_SLICE_119 \CF/SLICE_119 ( .A1(\CF/tmp_2 ), .A0(\CF/tmp_1 ), 
    .DI1(\CF/n138 ), .DI0(\CF/n139 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .FCI(\CF/n18578 ), .F0(\CF/n139 ), .Q0(\CF/tmp_1 ), .F1(\CF/n138 ), 
    .Q1(\CF/tmp_2 ), .FCO(\CF/n18579 ));
  CF_SLICE_120 \CF/SLICE_120 ( .A1(\CF/n14126 ), .B0(n173), .A0(\CF/n14127 ), 
    .FCI(\CF/n18448 ), .F0(\CF/n14291 ), .F1(\CF/n14290 ), .FCO(\CF/n18449 ));
  CF_SLICE_121 \CF/SLICE_121 ( .A1(\CF/tmp_0 ), .DI1(\CF/n140 ), 
    .LSR(\CF/n2252 ), .CLK(clk_c), .F1(\CF/n140 ), .Q1(\CF/tmp_0 ), 
    .FCO(\CF/n18578 ));
  SLICE_122 SLICE_122( .A1(\CF/n9534 ), .A0(\CF/n9535 ), .DI1(n9477), 
    .DI0(n9478), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18576 ), 
    .F0(n9478), .Q0(n26), .F1(n9477), .Q1(n25));
  CF_SLICE_123 \CF/SLICE_123 ( .B1(n174), .A1(\CF/n14128 ), .B0(n175), 
    .A0(\CF/n14129 ), .FCI(\CF/n18447 ), .F0(\CF/n14293 ), .F1(\CF/n14292 ), 
    .FCO(\CF/n18448 ));
  SLICE_124 SLICE_124( .A1(\CF/n9536 ), .A0(\CF/n9537 ), .DI1(n9479), 
    .DI0(n9480), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18575 ), 
    .F0(n9480), .Q0(n28), .F1(n9479), .Q1(n27), .FCO(\CF/n18576 ));
  SLICE_125 SLICE_125( .A1(\CF/n9538 ), .A0(\CF/n9539 ), .DI1(n9481), 
    .DI0(n9482), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18574 ), 
    .F0(n9482), .Q0(n30), .F1(n9481), .Q1(n29), .FCO(\CF/n18575 ));
  SLICE_126 SLICE_126( .A1(\CF/n9540 ), .A0(\CF/n9541 ), .DI1(n9483), 
    .DI0(n9484), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18573 ), 
    .F0(n9484), .Q0(n32), .F1(n9483), .Q1(n31), .FCO(\CF/n18574 ));
  CF_SLICE_127 \CF/SLICE_127 ( .B1(n176), .A1(\CF/n14130 ), .B0(n177), 
    .A0(\CF/n14131 ), .FCI(\CF/n18446 ), .F0(\CF/n14295 ), .F1(\CF/n14294 ), 
    .FCO(\CF/n18447 ));
  SLICE_128 SLICE_128( .A1(\CF/n9542 ), .A0(\CF/n9543 ), .DI1(n9485), 
    .DI0(n9486), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18572 ), 
    .F0(n9486), .Q0(n34), .F1(n9485), .Q1(n33), .FCO(\CF/n18573 ));
  SLICE_129 SLICE_129( .A1(\CF/n9544 ), .A0(\CF/n9545 ), .DI1(n9487), 
    .DI0(n9488), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18571 ), 
    .F0(n9488), .Q0(n36), .F1(n9487), .Q1(n35), .FCO(\CF/n18572 ));
  CF_SLICE_130 \CF/SLICE_130 ( .B1(n178), .A1(\CF/n14132 ), .B0(n179), 
    .A0(\CF/n14133 ), .FCI(\CF/n18445 ), .F0(\CF/n14297 ), .F1(\CF/n14296 ), 
    .FCO(\CF/n18446 ));
  CF_SLICE_131 \CF/SLICE_131 ( .FCI(\CF/n18496 ), .F0(\CF/n13341 ));
  CF_SLICE_132 \CF/SLICE_132 ( .A1(\CF/n12937 ), .A0(\CF/n12923 ), 
    .FCI(\CF/n18495 ), .F0(\CF/n13326 ), .F1(\CF/n13325 ), .FCO(\CF/n18496 ));
  SLICE_133 SLICE_133( .A1(\CF/n9546 ), .A0(\CF/n9547 ), .DI1(n9489), 
    .DI0(n9490), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18570 ), 
    .F0(n9490), .Q0(n38), .F1(n9489), .Q1(n37), .FCO(\CF/n18571 ));
  CF_SLICE_134 \CF/SLICE_134 ( .A1(\CF/n12924 ), .A0(\CF/n12925 ), 
    .FCI(\CF/n18494 ), .F0(\CF/n13328 ), .F1(\CF/n13327 ), .FCO(\CF/n18495 ));
  SLICE_135 SLICE_135( .A1(\CF/n9548 ), .A0(\CF/n9549 ), .DI1(n9491), 
    .DI0(n9492), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18569 ), 
    .F0(n9492), .Q0(n40), .F1(n9491), .Q1(n39), .FCO(\CF/n18570 ));
  CF_SLICE_136 \CF/SLICE_136 ( .A1(\CF/n12926 ), .A0(\CF/n12927 ), 
    .FCI(\CF/n18493 ), .F0(\CF/n13330 ), .F1(\CF/n13329 ), .FCO(\CF/n18494 ));
  SLICE_137 SLICE_137( .A1(\CF/n9550 ), .A0(\CF/n9551 ), .DI1(n9493), 
    .DI0(n9494), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18568 ), 
    .F0(n9494), .Q0(n42), .F1(n9493), .Q1(n41), .FCO(\CF/n18569 ));
  SLICE_138 SLICE_138( .A1(\CF/n9552 ), .A0(\CF/n9553 ), .DI1(n9495), 
    .DI0(n9496), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18567 ), 
    .F0(n9496), .Q0(n44), .F1(n9495), .Q1(n43), .FCO(\CF/n18568 ));
  CF_SLICE_139 \CF/SLICE_139 ( .B1(n180), .A1(\CF/n14134 ), .B0(n181), 
    .A0(\CF/n14135 ), .FCI(\CF/n18444 ), .F0(\CF/n14299 ), .F1(\CF/n14298 ), 
    .FCO(\CF/n18445 ));
  CF_SLICE_140 \CF/SLICE_140 ( .B1(n182), .A1(\CF/n14136 ), .B0(n183), 
    .A0(\CF/n14137 ), .FCI(\CF/n18443 ), .F0(\CF/n14301 ), .F1(\CF/n14300 ), 
    .FCO(\CF/n18444 ));
  SLICE_141 SLICE_141( .A1(\CF/n9554 ), .A0(\CF/n9555 ), .DI1(n9497), 
    .DI0(n9498), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18566 ), 
    .F0(n9498), .Q0(n46), .F1(n9497), .Q1(n45), .FCO(\CF/n18567 ));
  CF_SLICE_142 \CF/SLICE_142 ( .A1(\CF/n12928 ), .A0(\CF/n12929 ), 
    .FCI(\CF/n18492 ), .F0(\CF/n13332 ), .F1(\CF/n13331 ), .FCO(\CF/n18493 ));
  CF_SLICE_143 \CF/SLICE_143 ( .B1(n184), .A1(\CF/n14138 ), .B0(n185), 
    .A0(\CF/n14139 ), .FCI(\CF/n18442 ), .F0(\CF/n14303 ), .F1(\CF/n14302 ), 
    .FCO(\CF/n18443 ));
  CF_SLICE_144 \CF/SLICE_144 ( .B1(n186), .A1(\CF/n14140 ), .B0(n187), 
    .A0(\CF/n14141 ), .FCI(\CF/n18441 ), .F0(\CF/n14305 ), .F1(\CF/n14304 ), 
    .FCO(\CF/n18442 ));
  CF_SLICE_145 \CF/SLICE_145 ( .A1(\CF/n12930 ), .A0(\CF/n12931 ), 
    .FCI(\CF/n18491 ), .F0(\CF/n13334 ), .F1(\CF/n13333 ), .FCO(\CF/n18492 ));
  SLICE_146 SLICE_146( .B1(tempC_4_3), .A1(\CF/n12368 ), .B0(tempC_4_2), 
    .A0(tempC_4_0), .DI1(n9499), .M0(tempC_3_2), .CE(\CC/clk_c_enable_237 ), 
    .CLK(clk_c), .Q0(n6409), .F1(n9499), .Q1(n47), .FCO(\CF/n18566 ));
  CF_SLICE_147 \CF/SLICE_147 ( .A1(\CF/n12932 ), .A0(\CF/n12933 ), 
    .FCI(\CF/n18490 ), .F0(\CF/n13336 ), .F1(\CF/n13335 ), .FCO(\CF/n18491 ));
  CF_SLICE_148 \CF/SLICE_148 ( .FCI(\CF/n18661 ), .F0(\CF/n12369 ));
  CF_SLICE_149 \CF/SLICE_149 ( .A1(\CF/n12351 ), .A0(\CF/n12337 ), 
    .FCI(\CF/n18660 ), .F0(\CF/n12354 ), .F1(\CF/n12353 ), .FCO(\CF/n18661 ));
  CF_SLICE_150 \CF/SLICE_150 ( .B1(n188), .A1(\CF/n14142 ), .B0(n189), 
    .A0(\CF/n12320 ), .F1(\CF/Fahrenheit_5 ), .FCO(\CF/n18441 ));
  CF_SLICE_151 \CF/SLICE_151 ( .A1(\CF/n12934 ), .B0(tempC_3_3), 
    .A0(\CF/n12935 ), .FCI(\CF/n18489 ), .F0(\CF/n13338 ), .F1(\CF/n13337 ), 
    .FCO(\CF/n18490 ));
  CF_SLICE_152 \CF/SLICE_152 ( .B1(tempC_3_2), .A1(\CF/n13340 ), 
    .B0(tempC_3_1), .A0(tempC_3_0), .F1(\CF/n13339 ), .FCO(\CF/n18489 ));
  CF_SLICE_153 \CF/SLICE_153 ( .A0(\CF/n12898 ), .FCI(\CF/n18564 ), 
    .F0(\CF/n12900 ), .F1(\CF/n12921 ));
  CF_SLICE_154 \CF/SLICE_154 ( .A1(\CF/n12338 ), .A0(\CF/n12339 ), 
    .FCI(\CF/n18659 ), .F0(\CF/n12356 ), .F1(\CF/n12355 ), .FCO(\CF/n18660 ));
  CF_SLICE_155 \CF/SLICE_155 ( .A1(\CF/n12340 ), .A0(\CF/n12341 ), 
    .FCI(\CF/n18658 ), .F0(\CF/n12358 ), .F1(\CF/n12357 ), .FCO(\CF/n18659 ));
  CF_SLICE_156 \CF/SLICE_156 ( .A1(\CF/n12342 ), .A0(\CF/n12343 ), 
    .FCI(\CF/n18657 ), .F0(\CF/n12360 ), .F1(\CF/n12359 ), .FCO(\CF/n18658 ));
  CF_SLICE_157 \CF/SLICE_157 ( .A1(\CF/n12880 ), .A0(\CF/n12881 ), 
    .FCI(\CF/n18563 ), .F0(\CF/n12902 ), .F1(\CF/n12901 ), .FCO(\CF/n18564 ));
  CF_SLICE_158 \CF/SLICE_158 ( .A1(\CF/n12344 ), .A0(\CF/n12345 ), 
    .FCI(\CF/n18656 ), .F0(\CF/n12362 ), .F1(\CF/n12361 ), .FCO(\CF/n18657 ));
  CF_SLICE_159 \CF/SLICE_159 ( .A1(\CF/n12882 ), .A0(\CF/n12883 ), 
    .FCI(\CF/n18562 ), .F0(\CF/n12904 ), .F1(\CF/n12903 ), .FCO(\CF/n18563 ));
  CF_SLICE_160 \CF/SLICE_160 ( .A1(\CF/n12884 ), .A0(\CF/n12885 ), 
    .FCI(\CF/n18561 ), .F0(\CF/n12906 ), .F1(\CF/n12905 ), .FCO(\CF/n18562 ));
  CF_SLICE_161 \CF/SLICE_161 ( .A1(\CF/n12886 ), .A0(\CF/n12887 ), 
    .FCI(\CF/n18560 ), .F0(\CF/n12908 ), .F1(\CF/n12907 ), .FCO(\CF/n18561 ));
  CF_SLICE_162 \CF/SLICE_162 ( .A1(\CF/n12888 ), .A0(\CF/n12889 ), 
    .FCI(\CF/n18559 ), .F0(\CF/n12910 ), .F1(\CF/n12909 ), .FCO(\CF/n18560 ));
  CF_SLICE_163 \CF/SLICE_163 ( .FCI(\CF/n18487 ), .F0(\CF/n13663 ));
  CF_SLICE_164 \CF/SLICE_164 ( .A1(\CF/n13341 ), .A0(\CF/n13325 ), 
    .FCI(\CF/n18486 ), .F0(\CF/n13646 ), .F1(\CF/n13645 ), .FCO(\CF/n18487 ));
  CF_SLICE_165 \CF/SLICE_165 ( .A1(\CF/n12346 ), .A0(\CF/n12347 ), 
    .FCI(\CF/n18655 ), .F0(\CF/n12364 ), .F1(\CF/n12363 ), .FCO(\CF/n18656 ));
  CF_SLICE_166 \CF/SLICE_166 ( .A1(\CF/n12348 ), .B0(tempC_4_3), 
    .A0(\CF/n12349 ), .FCI(\CF/n18654 ), .F0(\CF/n12366 ), .F1(\CF/n12365 ), 
    .FCO(\CF/n18655 ));
  CF_SLICE_167 \CF/SLICE_167 ( .A1(\CF/n12890 ), .A0(\CF/n12891 ), 
    .FCI(\CF/n18558 ), .F0(\CF/n12912 ), .F1(\CF/n12911 ), .FCO(\CF/n18559 ));
  CF_SLICE_168 \CF/SLICE_168 ( .A1(\CF/n13326 ), .A0(\CF/n13327 ), 
    .FCI(\CF/n18485 ), .F0(\CF/n13648 ), .F1(\CF/n13647 ), .FCO(\CF/n18486 ));
  CF_SLICE_169 \CF/SLICE_169 ( .A1(\CF/n13328 ), .A0(\CF/n13329 ), 
    .FCI(\CF/n18484 ), .F0(\CF/n13650 ), .F1(\CF/n13649 ), .FCO(\CF/n18485 ));
  CF_SLICE_170 \CF/SLICE_170 ( .C1(tempC_4_2), .B1(tempC_4_1), .A1(tempC_4_0), 
    .B0(tempC_4_1), .A0(tempC_4_0), .F1(\CF/n12367 ), .FCO(\CF/n18654 ));
  CF_SLICE_171 \CF/SLICE_171 ( .A1(\CF/n13330 ), .A0(\CF/n13331 ), 
    .FCI(\CF/n18483 ), .F0(\CF/n13652 ), .F1(\CF/n13651 ), .FCO(\CF/n18484 ));
  CF_SLICE_172 \CF/SLICE_172 ( .FCI(\CF/n18652 ), .F0(\CF/n12351 ));
  CF_SLICE_173 \CF/SLICE_173 ( .A1(\CF/n13332 ), .A0(\CF/n13333 ), 
    .FCI(\CF/n18482 ), .F0(\CF/n13654 ), .F1(\CF/n13653 ), .FCO(\CF/n18483 ));
  CF_SLICE_174 \CF/SLICE_174 ( .A1(\CF/n12892 ), .A0(\CF/n12893 ), 
    .FCI(\CF/n18557 ), .F0(\CF/n12914 ), .F1(\CF/n12913 ), .FCO(\CF/n18558 ));
  CF_SLICE_175 \CF/SLICE_175 ( .A1(\CF/n12894 ), .A0(\CF/n12895 ), 
    .FCI(\CF/n18556 ), .F0(\CF/n12916 ), .F1(\CF/n12915 ), .FCO(\CF/n18557 ));
  CF_SLICE_176 \CF/SLICE_176 ( .A1(\CF/n12335 ), .A0(\CF/n12324 ), 
    .FCI(\CF/n18651 ), .F0(\CF/n12338 ), .F1(\CF/n12337 ), .FCO(\CF/n18652 ));
  CF_SLICE_177 \CF/SLICE_177 ( .A1(\CF/n12325 ), .A0(\CF/n12326 ), 
    .FCI(\CF/n18650 ), .F0(\CF/n12340 ), .F1(\CF/n12339 ), .FCO(\CF/n18651 ));
  CF_SLICE_178 \CF/SLICE_178 ( .A1(\CF/n12327 ), .A0(\CF/n12328 ), 
    .FCI(\CF/n18649 ), .F0(\CF/n12342 ), .F1(\CF/n12341 ), .FCO(\CF/n18650 ));
  CF_SLICE_179 \CF/SLICE_179 ( .A1(\CF/n12329 ), .A0(\CF/n12330 ), 
    .FCI(\CF/n18648 ), .F0(\CF/n12344 ), .F1(\CF/n12343 ), .FCO(\CF/n18649 ));
  CF_SLICE_180 \CF/SLICE_180 ( .A1(\CF/n12331 ), .A0(\CF/n12332 ), 
    .FCI(\CF/n18647 ), .F0(\CF/n12346 ), .F1(\CF/n12345 ), .FCO(\CF/n18648 ));
  CF_SLICE_181 \CF/SLICE_181 ( .A1(\CF/n12896 ), .C0(tempC_4_3), 
    .B0(tempC_4_2), .A0(tempC_4_0), .FCI(\CF/n18555 ), .F0(\CF/n12918 ), 
    .F1(\CF/n12917 ), .FCO(\CF/n18556 ));
  CF_SLICE_182 \CF/SLICE_182 ( .A1(\CF/n13334 ), .A0(\CF/n13335 ), 
    .FCI(\CF/n18481 ), .F0(\CF/n13656 ), .F1(\CF/n13655 ), .FCO(\CF/n18482 ));
  CF_SLICE_183 \CF/SLICE_183 ( .B1(tempC_4_2), .A1(tempC_4_1), .B0(tempC_4_1), 
    .A0(tempC_4_0), .F1(\CF/n12919 ), .FCO(\CF/n18555 ));
  CF_SLICE_184 \CF/SLICE_184 ( .A1(\CF/n12333 ), .C0(tempC_4_3), 
    .B0(tempC_4_2), .A0(tempC_4_0), .FCI(\CF/n18646 ), .F0(\CF/n12348 ), 
    .F1(\CF/n12347 ), .FCO(\CF/n18647 ));
  CF_SLICE_185 \CF/SLICE_185 ( .A1(\CF/n13336 ), .A0(\CF/n13337 ), 
    .FCI(\CF/n18480 ), .F0(\CF/n13658 ), .F1(\CF/n13657 ), .FCO(\CF/n18481 ));
  CF_SLICE_186 \CF/SLICE_186 ( .B1(tempC_4_2), .A1(tempC_4_1), .B0(tempC_4_1), 
    .A0(tempC_4_0), .F1(\CF/n12349 ), .FCO(\CF/n18646 ));
  CF_SLICE_187 \CF/SLICE_187 ( .A1(\CF/n13338 ), .B0(tempC_3_3), 
    .A0(\CF/n13339 ), .FCI(\CF/n18479 ), .F0(\CF/n13660 ), .F1(\CF/n13659 ), 
    .FCO(\CF/n18480 ));
  CF_SLICE_188 \CF/SLICE_188 ( .A0(\CF/n11713 ), .FCI(\CF/n18553 ), 
    .F0(\CF/n12324 ), .F1(\CF/n12335 ));
  CF_SLICE_189 \CF/SLICE_189 ( .A1(\CF/n11704 ), .A0(\CF/n11705 ), 
    .FCI(\CF/n18552 ), .F0(\CF/n12326 ), .F1(\CF/n12325 ), .FCO(\CF/n18553 ));
  CF_SLICE_190 \CF/SLICE_190 ( .FCI(\CF/n18434 ), .F0(\CF/clk_c_enable_150 ));
  CF_SLICE_191 \CF/SLICE_191 ( .B1(tempC_3_2), .A1(\CF/n13340 ), 
    .B0(tempC_3_1), .A0(tempC_3_0), .F1(\CF/n13661 ), .FCO(\CF/n18479 ));
  CF_SLICE_192 \CF/SLICE_192 ( .A1(\CF/Fahrenheit_31 ), 
    .A0(\CF/Fahrenheit_30 ), .FCI(\CF/n18433 ), .FCO(\CF/n18434 ));
  CF_SLICE_193 \CF/SLICE_193 ( .A1(\CF/Fahrenheit_29 ), 
    .A0(\CF/Fahrenheit_28 ), .FCI(\CF/n18432 ), .FCO(\CF/n18433 ));
  CF_SLICE_194 \CF/SLICE_194 ( .A1(\CF/n11706 ), .A0(\CF/n11707 ), 
    .FCI(\CF/n18551 ), .F0(\CF/n12328 ), .F1(\CF/n12327 ), .FCO(\CF/n18552 ));
  CF_SLICE_195 \CF/SLICE_195 ( .A1(\CF/n11708 ), .A0(\CF/n11709 ), 
    .FCI(\CF/n18550 ), .F0(\CF/n12330 ), .F1(\CF/n12329 ), .FCO(\CF/n18551 ));
  CF_SLICE_196 \CF/SLICE_196 ( .B0(\CF/n18307 ), .A0(tempC_0_3), 
    .FCI(\CF/n18753 ), .F0(\CF/n11791 ), .F1(\CF/n11798 ));
  CF_SLICE_197 \CF/SLICE_197 ( .B1(\CF/n18307 ), .A1(tempC_0_3), 
    .B0(\CF/n20566 ), .A0(tempC_0_2), .FCI(\CF/n18752 ), .F0(\CF/n11793 ), 
    .F1(\CF/n11792 ), .FCO(\CF/n18753 ));
  CF_SLICE_198 \CF/SLICE_198 ( .B1(\CF/n20588 ), .A1(\CF/n18295 ), 
    .C0(tempC_0_3), .B0(tempC_0_2), .A0(tempC_0_0), .FCI(\CF/n18751 ), 
    .F0(\CF/n11795 ), .F1(\CF/n11794 ), .FCO(\CF/n18752 ));
  CF_SLICE_199 \CF/SLICE_199 ( .B1(tempC_0_2), .A1(tempC_0_1), .B0(tempC_0_1), 
    .A0(tempC_0_0), .F1(\CF/n11796 ), .FCO(\CF/n18751 ));
  SLICE_200 SLICE_200( .DI0(n11771), .M1(tempC_0_2), .CE(clk_c_enable_272), 
    .CLK(clk_c), .FCI(\CF/n18749 ), .F0(n11771), .Q0(n259), .Q1(n6334));
  SLICE_201 SLICE_201( .D1(tempC_1_3), .C1(tempC_1_2), .B1(tempC_1_1), 
    .A1(tempC_1_0), .B0(\CF/n6_adj_3536 ), .A0(tempC_1_3), .DI1(n11765), 
    .DI0(n11766), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18748 ), 
    .F0(n11766), .Q0(n261), .F1(n11765), .Q1(n260), .FCO(\CF/n18749 ));
  SLICE_202 SLICE_202( .B1(\CF/n20586 ), .A1(\CF/n18336 ), .D0(tempC_1_0), 
    .C0(tempC_1_2), .B0(tempC_1_1), .A0(tempC_1_3), .DI1(n11767), .DI0(n11768), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18747 ), .F0(n11768), 
    .Q0(n263), .F1(n11767), .Q1(n262), .FCO(\CF/n18748 ));
  SLICE_203 SLICE_203( .C1(tempC_1_2), .B1(tempC_1_1), .A1(tempC_1_0), 
    .B0(tempC_1_1), .A0(tempC_1_0), .DI1(n11769), .M0(tempC_0_1), 
    .CE(clk_c_enable_272), .CLK(clk_c), .Q0(n6335), .F1(n11769), .Q1(n264), 
    .FCO(\CF/n18747 ));
  SLICE_204 SLICE_204( .A0(\CF/n11798 ), .DI1(n12455), .DI0(n12446), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18745 ), .F0(n12446), 
    .Q0(n340), .F1(n12455), .Q1(n339));
  CF_SLICE_205 \CF/SLICE_205 ( .A1(\CF/Fahrenheit_27 ), 
    .B0(\CF/Fahrenheit_26 ), .A0(\CF/tmp_26 ), .FCI(\CF/n18431 ), 
    .FCO(\CF/n18432 ));
  SLICE_206 SLICE_206( .DI0(n13934), .M1(tempC_3_1), 
    .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18477 ), .F0(n13934), 
    .Q0(n80), .Q1(n6410));
  CF_SLICE_207 \CF/SLICE_207 ( .A1(\CF/n11710 ), .A0(\CF/n11711 ), 
    .FCI(\CF/n18549 ), .F0(\CF/n12332 ), .F1(\CF/n12331 ), .FCO(\CF/n18550 ));
  SLICE_208 SLICE_208( .A1(\CF/n11791 ), .A0(\CF/n11792 ), .DI1(n12447), 
    .DI0(n12448), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18744 ), 
    .F0(n12448), .Q0(n342), .F1(n12447), .Q1(n341), .FCO(\CF/n18745 ));
  SLICE_209 SLICE_209( .A1(\CF/n11793 ), .A0(\CF/n11794 ), .DI1(n12449), 
    .DI0(n12450), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18743 ), 
    .F0(n12450), .Q0(n344), .F1(n12449), .Q1(n343), .FCO(\CF/n18744 ));
  SLICE_210 SLICE_210( .A1(\CF/n11795 ), .A0(\CF/n11796 ), .DI1(n12451), 
    .DI0(n12452), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18742 ), 
    .F0(n12452), .Q0(n346), .F1(n12451), .Q1(n345), .FCO(\CF/n18743 ));
  SLICE_211 SLICE_211( .B1(tempC_0_3), .A1(\CF/n11797 ), .B0(tempC_0_2), 
    .A0(tempC_0_0), .DI1(n12453), .M0(tempC_0_0), .CE(clk_c_enable_272), 
    .CLK(clk_c), .Q0(n6336), .F1(n12453), .Q1(n347), .FCO(\CF/n18742 ));
  CF_SLICE_212 \CF/SLICE_212 ( .FCI(\CF/n18740 ), .F0(\CF/n12444 ));
  CF_SLICE_213 \CF/SLICE_213 ( .A1(tempC_2_3), .A0(tempC_2_2), 
    .FCI(\CF/n18739 ), .F0(\CF/n12437 ), .F1(\CF/n12436 ), .FCO(\CF/n18740 ));
  CF_SLICE_214 \CF/SLICE_214 ( .A1(tempC_2_1), .A0(tempC_2_0), 
    .FCI(\CF/n18738 ), .F0(\CF/n12439 ), .F1(\CF/n12438 ), .FCO(\CF/n18739 ));
  CF_SLICE_215 \CF/SLICE_215 ( .A1(tempC_2_3), .B0(tempC_2_3), .A0(tempC_2_2), 
    .FCI(\CF/n18737 ), .F0(\CF/n12441 ), .F1(\CF/n12440 ), .FCO(\CF/n18738 ));
  CF_SLICE_216 \CF/SLICE_216 ( .B1(tempC_2_2), .A1(tempC_2_1), .B0(tempC_2_1), 
    .A0(tempC_2_0), .F1(\CF/n12442 ), .FCO(\CF/n18737 ));
  SLICE_217 SLICE_217( .DI0(n12965), .M1(tempC_0_3), .CE(clk_c_enable_272), 
    .CLK(clk_c), .FCI(\CF/n18735 ), .F0(n12965), .Q0(n173), .Q1(n6333));
  SLICE_218 SLICE_218( .A1(\CF/n12949 ), .A0(\CF/n12939 ), .DI1(n12951), 
    .DI0(n12952), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18734 ), 
    .F0(n12952), .Q0(n175), .F1(n12951), .Q1(n174), .FCO(\CF/n18735 ));
  SLICE_219 SLICE_219( .A1(\CF/n12940 ), .A0(\CF/n12941 ), .DI1(n12953), 
    .DI0(n12954), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18733 ), 
    .F0(n12954), .Q0(n177), .F1(n12953), .Q1(n176), .FCO(\CF/n18734 ));
  SLICE_220 SLICE_220( .A1(\CF/n12942 ), .A0(\CF/n12943 ), .DI1(n12955), 
    .DI0(n12956), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18732 ), 
    .F0(n12956), .Q0(n179), .F1(n12955), .Q1(n178), .FCO(\CF/n18733 ));
  SLICE_221 SLICE_221( .A1(\CF/n13663 ), .A0(\CF/n13645 ), .DI1(n13914), 
    .DI0(n13915), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18476 ), 
    .F0(n13915), .Q0(n82), .F1(n13914), .Q1(n81), .FCO(\CF/n18477 ));
  CF_SLICE_222 \CF/SLICE_222 ( .B1(tempC_4_3), .A1(\CF/n12368 ), 
    .B0(tempC_4_2), .A0(tempC_4_0), .F1(\CF/n12333 ), .FCO(\CF/n18549 ));
  SLICE_223 SLICE_223( .A1(\CF/n13646 ), .A0(\CF/n13647 ), .DI1(n13916), 
    .DI0(n13917), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18475 ), 
    .F0(n13917), .Q0(n84), .F1(n13916), .Q1(n83), .FCO(\CF/n18476 ));
  CF_SLICE_224 \CF/SLICE_224 ( .B1(\CF/Fahrenheit_25 ), .A1(\CF/tmp_25 ), 
    .B0(\CF/Fahrenheit_24 ), .A0(\CF/tmp_24 ), .FCI(\CF/n18430 ), 
    .FCO(\CF/n18431 ));
  CF_SLICE_225 \CF/SLICE_225 ( .FCI(\CF/n18547 ), .F0(\CF/n12898 ));
  SLICE_226 SLICE_226( .A1(\CF/n13648 ), .A0(\CF/n13649 ), .DI1(n13918), 
    .DI0(n13919), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18474 ), 
    .F0(n13919), .Q0(n86), .F1(n13918), .Q1(n85), .FCO(\CF/n18475 ));
  CF_SLICE_227 \CF/SLICE_227 ( .A1(\CF/n12369 ), .A0(\CF/n12353 ), 
    .FCI(\CF/n18546 ), .F0(\CF/n12881 ), .F1(\CF/n12880 ), .FCO(\CF/n18547 ));
  CF_SLICE_228 \CF/SLICE_228 ( .A1(\CF/n12354 ), .A0(\CF/n12355 ), 
    .FCI(\CF/n18545 ), .F0(\CF/n12883 ), .F1(\CF/n12882 ), .FCO(\CF/n18546 ));
  CF_SLICE_229 \CF/SLICE_229 ( .A1(\CF/n12356 ), .A0(\CF/n12357 ), 
    .FCI(\CF/n18544 ), .F0(\CF/n12885 ), .F1(\CF/n12884 ), .FCO(\CF/n18545 ));
  SLICE_230 SLICE_230( .A1(\CF/n13650 ), .A0(\CF/n13651 ), .DI1(n13920), 
    .DI0(n13921), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18473 ), 
    .F0(n13921), .Q0(n88), .F1(n13920), .Q1(n87), .FCO(\CF/n18474 ));
  CF_SLICE_231 \CF/SLICE_231 ( .A1(\CF/n12358 ), .A0(\CF/n12359 ), 
    .FCI(\CF/n18543 ), .F0(\CF/n12887 ), .F1(\CF/n12886 ), .FCO(\CF/n18544 ));
  CF_SLICE_232 \CF/SLICE_232 ( .A1(\CF/n12360 ), .A0(\CF/n12361 ), 
    .FCI(\CF/n18542 ), .F0(\CF/n12889 ), .F1(\CF/n12888 ), .FCO(\CF/n18543 ));
  CF_SLICE_233 \CF/SLICE_233 ( .A1(\CF/n12362 ), .A0(\CF/n12363 ), 
    .FCI(\CF/n18541 ), .F0(\CF/n12891 ), .F1(\CF/n12890 ), .FCO(\CF/n18542 ));
  CF_SLICE_234 \CF/SLICE_234 ( .B1(\CF/Fahrenheit_23 ), .A1(\CF/tmp_23 ), 
    .B0(\CF/Fahrenheit_22 ), .A0(\CF/tmp_22 ), .FCI(\CF/n18429 ), 
    .FCO(\CF/n18430 ));
  CF_SLICE_235 \CF/SLICE_235 ( .B1(\CF/Fahrenheit_21 ), .A1(\CF/tmp_21 ), 
    .B0(\CF/Fahrenheit_20 ), .A0(\CF/tmp_20 ), .FCI(\CF/n18428 ), 
    .FCO(\CF/n18429 ));
  SLICE_236 SLICE_236( .A1(\CF/n12944 ), .A0(\CF/n12945 ), .DI1(n12957), 
    .DI0(n12958), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18731 ), 
    .F0(n12958), .Q0(n181), .F1(n12957), .Q1(n180), .FCO(\CF/n18732 ));
  SLICE_237 SLICE_237( .A1(\CF/n12946 ), .A0(\CF/n12947 ), .DI1(n12959), 
    .DI0(n12960), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CF/n18730 ), 
    .F0(n12960), .Q0(n183), .F1(n12959), .Q1(n182), .FCO(\CF/n18731 ));
  SLICE_238 SLICE_238( .B1(tempC_2_3), .A1(tempC_2_0), .A0(tempC_2_2), 
    .DI1(n12961), .DI0(n12962), .CE(clk_c_enable_272), .CLK(clk_c), 
    .FCI(\CF/n18729 ), .F0(n12962), .Q0(n185), .F1(n12961), .Q1(n184), 
    .FCO(\CF/n18730 ));
  SLICE_239 SLICE_239( .B1(tempC_2_3), .A1(tempC_2_1), .B0(tempC_2_2), 
    .A0(tempC_2_0), .DI1(n12963), .M0(tempC_0_0), .CE(clk_c_enable_272), 
    .CLK(clk_c), .Q0(Fahrenheit_2), .F1(n12963), .Q1(n186), .FCO(\CF/n18729 ));
  CF_SLICE_240 \CF/SLICE_240 ( .FCI(\CF/n18727 ), .F0(\CF/n12949 ));
  CF_SLICE_241 \CF/SLICE_241 ( .A1(\CF/n12444 ), .A0(\CF/n12436 ), 
    .FCI(\CF/n18726 ), .F0(\CF/n12940 ), .F1(\CF/n12939 ), .FCO(\CF/n18727 ));
  CF_SLICE_242 \CF/SLICE_242 ( .A1(\CF/n12437 ), .A0(\CF/n12438 ), 
    .FCI(\CF/n18725 ), .F0(\CF/n12942 ), .F1(\CF/n12941 ), .FCO(\CF/n18726 ));
  CF_SLICE_243 \CF/SLICE_243 ( .A1(\CF/n12439 ), .A0(\CF/n12440 ), 
    .FCI(\CF/n18724 ), .F0(\CF/n12944 ), .F1(\CF/n12943 ), .FCO(\CF/n18725 ));
  CF_SLICE_244 \CF/SLICE_244 ( .A1(\CF/n12441 ), .A0(\CF/n12442 ), 
    .FCI(\CF/n18723 ), .F0(\CF/n12946 ), .F1(\CF/n12945 ), .FCO(\CF/n18724 ));
  CF_SLICE_245 \CF/SLICE_245 ( .A1(\CF/n12443 ), .B0(tempC_2_3), 
    .A0(tempC_2_0), .F1(\CF/n12947 ), .FCO(\CF/n18723 ));
  CF_SLICE_246 \CF/SLICE_246 ( .FCI(\CF/n18721 ), .F0(\CF/n12404 ));
  CF_SLICE_247 \CF/SLICE_247 ( .A1(\CF/n12390 ), .A0(\CF/n12380 ), 
    .FCI(\CF/n18720 ), .F0(\CF/n12393 ), .F1(\CF/n12392 ), .FCO(\CF/n18721 ));
  CF_SLICE_248 \CF/SLICE_248 ( .A1(\CF/n12381 ), .A0(\CF/n12382 ), 
    .FCI(\CF/n18719 ), .F0(\CF/n12395 ), .F1(\CF/n12394 ), .FCO(\CF/n18720 ));
  CF_SLICE_249 \CF/SLICE_249 ( .A1(\CF/n12383 ), .A0(\CF/n12384 ), 
    .FCI(\CF/n18718 ), .F0(\CF/n12397 ), .F1(\CF/n12396 ), .FCO(\CF/n18719 ));
  CF_SLICE_250 \CF/SLICE_250 ( .A1(\CF/n12385 ), .A0(\CF/n12386 ), 
    .FCI(\CF/n18717 ), .F0(\CF/n12399 ), .F1(\CF/n12398 ), .FCO(\CF/n18718 ));
  CF_SLICE_251 \CF/SLICE_251 ( .A1(\CF/n12387 ), .B0(tempC_3_3), 
    .A0(\CF/n12388 ), .FCI(\CF/n18716 ), .F0(\CF/n12401 ), .F1(\CF/n12400 ), 
    .FCO(\CF/n18717 ));
  CF_SLICE_252 \CF/SLICE_252 ( .C1(tempC_3_2), .B1(tempC_3_1), .A1(tempC_3_0), 
    .B0(tempC_3_1), .A0(tempC_3_0), .F1(\CF/n12402 ), .FCO(\CF/n18716 ));
  CF_SLICE_253 \CF/SLICE_253 ( .FCI(\CF/n18714 ), .F0(\CF/n12390 ));
  CF_SLICE_254 \CF/SLICE_254 ( .A1(\CF/n12378 ), .A0(\CF/n12371 ), 
    .FCI(\CF/n18713 ), .F0(\CF/n12381 ), .F1(\CF/n12380 ), .FCO(\CF/n18714 ));
  CF_SLICE_255 \CF/SLICE_255 ( .B1(\CF/Fahrenheit_19 ), .A1(\CF/tmp_19 ), 
    .B0(\CF/Fahrenheit_18 ), .A0(\CF/tmp_18 ), .FCI(\CF/n18427 ), 
    .FCO(\CF/n18428 ));
  CF_SLICE_256 \CF/SLICE_256 ( .B1(\CF/Fahrenheit_17 ), .A1(\CF/tmp_17 ), 
    .B0(\CF/Fahrenheit_16 ), .A0(\CF/tmp_16 ), .FCI(\CF/n18426 ), 
    .FCO(\CF/n18427 ));
  SLICE_257 SLICE_257( .A1(\CF/n13652 ), .A0(\CF/n13653 ), .DI1(n13922), 
    .DI0(n13923), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18472 ), 
    .F0(n13923), .Q0(n90), .F1(n13922), .Q1(n89), .FCO(\CF/n18473 ));
  CF_SLICE_258 \CF/SLICE_258 ( .A1(\CF/n12364 ), .A0(\CF/n12365 ), 
    .FCI(\CF/n18540 ), .F0(\CF/n12893 ), .F1(\CF/n12892 ), .FCO(\CF/n18541 ));
  SLICE_259 SLICE_259( .A1(\CF/n13654 ), .A0(\CF/n13655 ), .DI1(n13924), 
    .DI0(n13925), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18471 ), 
    .F0(n13925), .Q0(n92), .F1(n13924), .Q1(n91), .FCO(\CF/n18472 ));
  SLICE_260 SLICE_260( .A1(\CF/n13656 ), .A0(\CF/n13657 ), .DI1(n13926), 
    .DI0(n13927), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18470 ), 
    .F0(n13927), .Q0(n94), .F1(n13926), .Q1(n93), .FCO(\CF/n18471 ));
  SLICE_261 SLICE_261( .A1(\CF/n13658 ), .A0(\CF/n13659 ), .DI1(n13928), 
    .DI0(n13929), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18469 ), 
    .F0(n13929), .Q0(n96), .F1(n13928), .Q1(n95), .FCO(\CF/n18470 ));
  CF_SLICE_262 \CF/SLICE_262 ( .A1(\CF/n12366 ), .A0(\CF/n12367 ), 
    .FCI(\CF/n18539 ), .F0(\CF/n12895 ), .F1(\CF/n12894 ), .FCO(\CF/n18540 ));
  CF_SLICE_263 \CF/SLICE_263 ( .B1(\CF/Fahrenheit_15 ), .A1(\CF/tmp_15 ), 
    .B0(\CF/Fahrenheit_14 ), .A0(\CF/tmp_14 ), .FCI(\CF/n18425 ), 
    .FCO(\CF/n18426 ));
  SLICE_264 SLICE_264( .A1(\CF/n13660 ), .A0(\CF/n13661 ), .DI1(n13930), 
    .DI0(n13931), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CF/n18468 ), 
    .F0(n13931), .Q0(n98), .F1(n13930), .Q1(n97), .FCO(\CF/n18469 ));
  CF_SLICE_265 \CF/SLICE_265 ( .B1(\CF/Fahrenheit_13 ), .A1(\CF/tmp_13 ), 
    .B0(\CF/Fahrenheit_12 ), .A0(\CF/tmp_12 ), .FCI(\CF/n18424 ), 
    .FCO(\CF/n18425 ));
  CF_SLICE_266 \CF/SLICE_266 ( .B1(tempC_4_3), .A1(\CF/n12368 ), 
    .B0(tempC_4_2), .A0(tempC_4_0), .F1(\CF/n12896 ), .FCO(\CF/n18539 ));
  SLICE_267 SLICE_267( .A1(\CF/n13340 ), .B0(tempC_3_3), .A0(tempC_3_0), 
    .DI1(n13932), .M0(tempC_3_0), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .Q0(en_N_3200_0), .F1(n13932), .Q1(n99), .FCO(\CF/n18468 ));
  CF_SLICE_268 \CF/SLICE_268 ( .A1(\CF/n12372 ), .A0(\CF/n12373 ), 
    .FCI(\CF/n18712 ), .F0(\CF/n12383 ), .F1(\CF/n12382 ), .FCO(\CF/n18713 ));
  CF_SLICE_269 \CF/SLICE_269 ( .B1(\CF/Fahrenheit_11 ), .A1(\CF/tmp_11 ), 
    .B0(\CF/Fahrenheit_10 ), .A0(\CF/tmp_10 ), .FCI(\CF/n18423 ), 
    .FCO(\CF/n18424 ));
  SLICE_270 SLICE_270( .A1(n25), .B0(n26), .A0(\CF/n14308 ), 
    .M1(\CC/DataOut_decimal_31_N_447_4 ), .M0(sample_9), .CLK(clk_c), 
    .FCI(\CF/n18536 ), .F0(\CF/Fahrenheit_30 ), .Q0(\CC/Data91_0 ), 
    .F1(\CF/Fahrenheit_31 ), .Q1(\CC/DataOut_decimal_0 ));
  CB_SLICE_271 \CB/SLICE_271 ( .A1(\CB/us_cnt_10 ), .A0(\CB/us_cnt_9 ), 
    .DI1(\CB/n50 ), .CE(\CB/overflow_enable_47 ), .LSR(\CB/n16680 ), 
    .CLK(\CB/overflow ), .FCI(\CB/n18410 ), .F0(\CB/n51 ), .F1(\CB/n50 ), 
    .Q1(\CB/us_cnt_10 ));
  CB_SLICE_272 \CB/SLICE_272 ( .A0(\CB/s_devide_19 ), 
    .DI0(\CB/s_devide_19_N_147_19 ), .CE(\CB/overflow_enable_36 ), 
    .CLK(\CB/overflow ), .FCI(\CB/n18401 ), .F0(\CB/s_devide_19_N_147_19 ), 
    .Q0(\CB/s_devide_19 ));
  CB_SLICE_273 \CB/SLICE_273 ( .A1(\CB/s_devide_18 ), .A0(\CB/s_devide_17 ), 
    .DI1(\CB/s_devide_19_N_147_18 ), .DI0(\CB/s_devide_19_N_147_17 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18400 ), 
    .F0(\CB/s_devide_19_N_147_17 ), .Q0(\CB/s_devide_17 ), 
    .F1(\CB/s_devide_19_N_147_18 ), .Q1(\CB/s_devide_18 ), .FCO(\CB/n18401 ));
  CB_SLICE_274 \CB/SLICE_274 ( .A1(\CB/us_cnt_0 ), .F1(\CB/n60 ), 
    .FCO(\CB/n18406 ));
  CB_SLICE_275 \CB/SLICE_275 ( .A1(\CB/s_devide_16 ), .A0(\CB/s_devide_15 ), 
    .DI1(\CB/s_devide_19_N_147_16 ), .DI0(\CB/s_devide_19_N_147_15 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18399 ), 
    .F0(\CB/s_devide_19_N_147_15 ), .Q0(\CB/s_devide_15 ), 
    .F1(\CB/s_devide_19_N_147_16 ), .Q1(\CB/s_devide_16 ), .FCO(\CB/n18400 ));
  CB_SLICE_276 \CB/SLICE_276 ( .A1(\CB/us_cnt_6 ), .A0(\CB/us_cnt_5 ), 
    .FCI(\CB/n18408 ), .F0(\CB/n55 ), .F1(\CB/n54 ), .FCO(\CB/n18409 ));
  CB_SLICE_277 \CB/SLICE_277 ( .A1(\CB/s_devide_14 ), .A0(\CB/s_devide_13 ), 
    .DI1(\CB/s_devide_19_N_147_14 ), .DI0(\CB/s_devide_19_N_147_13 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18398 ), 
    .F0(\CB/s_devide_19_N_147_13 ), .Q0(\CB/s_devide_13 ), 
    .F1(\CB/s_devide_19_N_147_14 ), .Q1(\CB/s_devide_14 ), .FCO(\CB/n18399 ));
  CB_SLICE_278 \CB/SLICE_278 ( .A1(\CB/s_devide_12 ), .A0(\CB/s_devide_11 ), 
    .DI1(\CB/s_devide_19_N_147_12 ), .DI0(\CB/s_devide_19_N_147_11 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18397 ), 
    .F0(\CB/s_devide_19_N_147_11 ), .Q0(\CB/s_devide_11 ), 
    .F1(\CB/s_devide_19_N_147_12 ), .Q1(\CB/s_devide_12 ), .FCO(\CB/n18398 ));
  CB_SLICE_279 \CB/SLICE_279 ( .A1(\CB/s_devide_10 ), .A0(\CB/s_devide_9 ), 
    .DI1(\CB/s_devide_19_N_147_10 ), .DI0(\CB/s_devide_19_N_147_9 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18396 ), 
    .F0(\CB/s_devide_19_N_147_9 ), .Q0(\CB/s_devide_9 ), 
    .F1(\CB/s_devide_19_N_147_10 ), .Q1(\CB/s_devide_10 ), .FCO(\CB/n18397 ));
  CB_SLICE_280 \CB/SLICE_280 ( .A1(\CB/us_cnt_4 ), .A0(\CB/us_cnt_3 ), 
    .FCI(\CB/n18407 ), .F0(\CB/n57 ), .F1(\CB/n56 ), .FCO(\CB/n18408 ));
  CB_SLICE_281 \CB/SLICE_281 ( .A1(\CB/s_devide_8 ), .A0(\CB/s_devide_7 ), 
    .DI1(\CB/s_devide_19_N_147_8 ), .DI0(\CB/s_devide_19_N_147_7 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18395 ), 
    .F0(\CB/s_devide_19_N_147_7 ), .Q0(\CB/s_devide_7 ), 
    .F1(\CB/s_devide_19_N_147_8 ), .Q1(\CB/s_devide_8 ), .FCO(\CB/n18396 ));
  CB_SLICE_282 \CB/SLICE_282 ( .A1(\CB/s_devide_6 ), .A0(\CB/s_devide_5 ), 
    .DI1(\CB/s_devide_19_N_147_6 ), .DI0(\CB/s_devide_19_N_147_5 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18394 ), 
    .F0(\CB/s_devide_19_N_147_5 ), .Q0(\CB/s_devide_5 ), 
    .F1(\CB/s_devide_19_N_147_6 ), .Q1(\CB/s_devide_6 ), .FCO(\CB/n18395 ));
  CB_SLICE_283 \CB/SLICE_283 ( .A1(\CB/s_devide_4 ), .A0(\CB/s_devide_3 ), 
    .DI1(\CB/s_devide_19_N_147_4 ), .DI0(\CB/s_devide_19_N_147_3 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18393 ), 
    .F0(\CB/s_devide_19_N_147_3 ), .Q0(\CB/s_devide_3 ), 
    .F1(\CB/s_devide_19_N_147_4 ), .Q1(\CB/s_devide_4 ), .FCO(\CB/n18394 ));
  CB_SLICE_284 \CB/SLICE_284 ( .A1(\CB/s_devide_2 ), .A0(\CB/s_devide_1 ), 
    .DI1(\CB/s_devide_19_N_147_2 ), .DI0(\CB/s_devide_19_N_147_1 ), 
    .CE(\CB/overflow_enable_36 ), .CLK(\CB/overflow ), .FCI(\CB/n18392 ), 
    .F0(\CB/s_devide_19_N_147_1 ), .Q0(\CB/s_devide_1 ), 
    .F1(\CB/s_devide_19_N_147_2 ), .Q1(\CB/s_devide_2 ), .FCO(\CB/n18393 ));
  CB_SLICE_285 \CB/SLICE_285 ( .B1(\CB/turn_0 ), .A1(\CB/s_devide_0 ), 
    .DI1(\CB/s_devide_19_N_147_0 ), .CE(\CB/overflow_enable_36 ), 
    .CLK(\CB/overflow ), .F1(\CB/s_devide_19_N_147_0 ), .Q1(\CB/s_devide_0 ), 
    .FCO(\CB/n18392 ));
  CB_SLICE_286 \CB/SLICE_286 ( .A1(\CB/us_cnt_2 ), .A0(\CB/us_cnt_1 ), 
    .FCI(\CB/n18406 ), .F0(\CB/n59 ), .F1(\CB/n58 ), .FCO(\CB/n18407 ));
  CB_SLICE_287 \CB/SLICE_287 ( .A1(\CB/us_cnt_8 ), .A0(\CB/us_cnt_7 ), 
    .DI1(\CB/n52 ), .CE(\CB/overflow_enable_47 ), .LSR(\CB/n16680 ), 
    .CLK(\CB/overflow ), .FCI(\CB/n18409 ), .F0(\CB/n53 ), .F1(\CB/n52 ), 
    .Q1(\CB/us_cnt_8 ), .FCO(\CB/n18410 ));
  BC_SLICE_288 \BC/SLICE_288 ( .A1(\BC/pwm_cnt_2 ), .A0(\BC/pwm_cnt_1 ), 
    .DI1(\BC/n53 ), .DI0(\BC/n54 ), .CE(\BC/clk_c_enable_116 ), 
    .LSR(\BC/n15610 ), .CLK(clk_c), .FCI(\BC/n18624 ), .F0(\BC/n54 ), 
    .Q0(\BC/pwm_cnt_1 ), .F1(\BC/n53 ), .Q1(\BC/pwm_cnt_2 ), .FCO(\BC/n18625 ));
  BC_SLICE_289 \BC/SLICE_289 ( .A1(\BC/pwm_cnt_0 ), .DI1(\BC/n55 ), 
    .CE(\BC/clk_c_enable_116 ), .LSR(\BC/n15610 ), .CLK(clk_c), .F1(\BC/n55 ), 
    .Q1(\BC/pwm_cnt_0 ), .FCO(\BC/n18624 ));
  BC_SLICE_290 \BC/SLICE_290 ( .A0(\BC/div_clk_cnt_31 ), .DI0(\BC/n134 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18623 ), .F0(\BC/n134 ), 
    .Q0(\BC/div_clk_cnt_31 ));
  BC_SLICE_291 \BC/SLICE_291 ( .A1(\BC/div_clk_cnt_30 ), 
    .A0(\BC/div_clk_cnt_29 ), .DI1(\BC/n135 ), .DI0(\BC/n136 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18622 ), .F0(\BC/n136 ), 
    .Q0(\BC/div_clk_cnt_29 ), .F1(\BC/n135 ), .Q1(\BC/div_clk_cnt_30 ), 
    .FCO(\BC/n18623 ));
  BC_SLICE_292 \BC/SLICE_292 ( .A1(\BC/div_clk_cnt_28 ), 
    .A0(\BC/div_clk_cnt_27 ), .DI1(\BC/n137 ), .DI0(\BC/n138 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18621 ), .F0(\BC/n138 ), 
    .Q0(\BC/div_clk_cnt_27 ), .F1(\BC/n137 ), .Q1(\BC/div_clk_cnt_28 ), 
    .FCO(\BC/n18622 ));
  BC_SLICE_293 \BC/SLICE_293 ( .A1(\BC/div_clk_cnt_26 ), 
    .A0(\BC/div_clk_cnt_25 ), .DI1(\BC/n139 ), .DI0(\BC/n140 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18620 ), .F0(\BC/n140 ), 
    .Q0(\BC/div_clk_cnt_25 ), .F1(\BC/n139 ), .Q1(\BC/div_clk_cnt_26 ), 
    .FCO(\BC/n18621 ));
  BC_SLICE_294 \BC/SLICE_294 ( .A1(\BC/div_clk_cnt_24 ), 
    .A0(\BC/div_clk_cnt_23 ), .DI1(\BC/n141 ), .DI0(\BC/n142 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18619 ), .F0(\BC/n142 ), 
    .Q0(\BC/div_clk_cnt_23 ), .F1(\BC/n141 ), .Q1(\BC/div_clk_cnt_24 ), 
    .FCO(\BC/n18620 ));
  BC_SLICE_295 \BC/SLICE_295 ( .A1(\BC/div_clk_cnt_22 ), 
    .A0(\BC/div_clk_cnt_21 ), .DI1(\BC/n143 ), .DI0(\BC/n144 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18618 ), .F0(\BC/n144 ), 
    .Q0(\BC/div_clk_cnt_21 ), .F1(\BC/n143 ), .Q1(\BC/div_clk_cnt_22 ), 
    .FCO(\BC/n18619 ));
  BC_SLICE_296 \BC/SLICE_296 ( .A1(\BC/div_clk_cnt_20 ), 
    .A0(\BC/div_clk_cnt_19 ), .DI1(\BC/n145 ), .DI0(\BC/n146 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18617 ), .F0(\BC/n146 ), 
    .Q0(\BC/div_clk_cnt_19 ), .F1(\BC/n145 ), .Q1(\BC/div_clk_cnt_20 ), 
    .FCO(\BC/n18618 ));
  BC_SLICE_297 \BC/SLICE_297 ( .A1(\BC/div_clk_cnt_18 ), 
    .A0(\BC/div_clk_cnt_17 ), .DI1(\BC/n147 ), .DI0(\BC/n148 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18616 ), .F0(\BC/n148 ), 
    .Q0(\BC/div_clk_cnt_17 ), .F1(\BC/n147 ), .Q1(\BC/div_clk_cnt_18 ), 
    .FCO(\BC/n18617 ));
  BC_SLICE_298 \BC/SLICE_298 ( .A1(\BC/div_clk_cnt_16 ), 
    .A0(\BC/div_clk_cnt_15 ), .DI1(\BC/n149 ), .DI0(\BC/n150 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18615 ), .F0(\BC/n150 ), 
    .Q0(\BC/div_clk_cnt_15 ), .F1(\BC/n149 ), .Q1(\BC/div_clk_cnt_16 ), 
    .FCO(\BC/n18616 ));
  BC_SLICE_299 \BC/SLICE_299 ( .A1(\BC/div_clk_cnt_14 ), 
    .A0(\BC/div_clk_cnt_13 ), .DI1(\BC/n151 ), .DI0(\BC/n152 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18614 ), .F0(\BC/n152 ), 
    .Q0(\BC/div_clk_cnt_13 ), .F1(\BC/n151 ), .Q1(\BC/div_clk_cnt_14 ), 
    .FCO(\BC/n18615 ));
  BC_SLICE_300 \BC/SLICE_300 ( .A1(\BC/div_clk_cnt_12 ), 
    .A0(\BC/div_clk_cnt_11 ), .DI1(\BC/n153 ), .DI0(\BC/n154 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18613 ), .F0(\BC/n154 ), 
    .Q0(\BC/div_clk_cnt_11 ), .F1(\BC/n153 ), .Q1(\BC/div_clk_cnt_12 ), 
    .FCO(\BC/n18614 ));
  BC_SLICE_301 \BC/SLICE_301 ( .A1(\BC/div_clk_cnt_10 ), 
    .A0(\BC/div_clk_cnt_9 ), .DI1(\BC/n155 ), .DI0(\BC/n156 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18612 ), .F0(\BC/n156 ), 
    .Q0(\BC/div_clk_cnt_9 ), .F1(\BC/n155 ), .Q1(\BC/div_clk_cnt_10 ), 
    .FCO(\BC/n18613 ));
  BC_SLICE_302 \BC/SLICE_302 ( .A1(\BC/div_clk_cnt_8 ), 
    .A0(\BC/div_clk_cnt_7 ), .DI1(\BC/n157 ), .DI0(\BC/n158 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18611 ), .F0(\BC/n158 ), 
    .Q0(\BC/div_clk_cnt_7 ), .F1(\BC/n157 ), .Q1(\BC/div_clk_cnt_8 ), 
    .FCO(\BC/n18612 ));
  BC_SLICE_303 \BC/SLICE_303 ( .A1(\BC/div_clk_cnt_6 ), 
    .A0(\BC/div_clk_cnt_5 ), .DI1(\BC/n159 ), .DI0(\BC/n160 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18610 ), .F0(\BC/n160 ), 
    .Q0(\BC/div_clk_cnt_5 ), .F1(\BC/n159 ), .Q1(\BC/div_clk_cnt_6 ), 
    .FCO(\BC/n18611 ));
  BC_SLICE_304 \BC/SLICE_304 ( .A1(\BC/div_clk_cnt_4 ), 
    .A0(\BC/div_clk_cnt_3 ), .DI1(\BC/n161 ), .DI0(\BC/n162 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18609 ), .F0(\BC/n162 ), 
    .Q0(\BC/div_clk_cnt_3 ), .F1(\BC/n161 ), .Q1(\BC/div_clk_cnt_4 ), 
    .FCO(\BC/n18610 ));
  BC_SLICE_305 \BC/SLICE_305 ( .A1(\BC/div_clk_cnt_2 ), 
    .A0(\BC/div_clk_cnt_1 ), .DI1(\BC/n163 ), .DI0(\BC/n164 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .FCI(\BC/n18608 ), .F0(\BC/n164 ), 
    .Q0(\BC/div_clk_cnt_1 ), .F1(\BC/n163 ), .Q1(\BC/div_clk_cnt_2 ), 
    .FCO(\BC/n18609 ));
  BC_SLICE_306 \BC/SLICE_306 ( .A1(\BC/div_clk_cnt_0 ), .DI1(\BC/n165 ), 
    .LSR(\BC/n15574 ), .CLK(clk_c), .F1(\BC/n165 ), .Q1(\BC/div_clk_cnt_0 ), 
    .FCO(\BC/n18608 ));
  BC_SLICE_307 \BC/SLICE_307 ( .FCI(\BC/n18501 ), .F1(\BC/pwm_out_N_3478 ));
  BC_SLICE_308 \BC/SLICE_308 ( .A0(\BC/pwm_cnt_9 ), .FCI(\BC/n18500 ), 
    .FCO(\BC/n18501 ));
  BC_SLICE_309 \BC/SLICE_309 ( .A1(\BC/pwm_cnt_8 ), .A0(\BC/pwm_cnt_7 ), 
    .FCI(\BC/n18499 ), .FCO(\BC/n18500 ));
  BC_SLICE_310 \BC/SLICE_310 ( .A1(\BC/pwm_cnt_6 ), .A0(\BC/pwm_cnt_5 ), 
    .FCI(\BC/n18498 ), .FCO(\BC/n18499 ));
  BC_SLICE_311 \BC/SLICE_311 ( .A1(\BC/pwm_cnt_4 ), .A0(\BC/pwm_cnt_3 ), 
    .FCI(\BC/n18497 ), .FCO(\BC/n18498 ));
  BC_SLICE_312 \BC/SLICE_312 ( .A1(\BC/pwm_cnt_2 ), .A0(\BC/pwm_cnt_1 ), 
    .FCO(\BC/n18497 ));
  BC_SLICE_313 \BC/SLICE_313 ( .A0(\BC/pwm_cnt_9 ), .DI0(\BC/n46 ), 
    .CE(\BC/clk_c_enable_116 ), .LSR(\BC/n15610 ), .CLK(clk_c), 
    .FCI(\BC/n18628 ), .F0(\BC/n46 ), .Q0(\BC/pwm_cnt_9 ));
  BC_SLICE_314 \BC/SLICE_314 ( .A1(\BC/pwm_cnt_8 ), .A0(\BC/pwm_cnt_7 ), 
    .DI1(\BC/n47 ), .DI0(\BC/n48 ), .CE(\BC/clk_c_enable_116 ), 
    .LSR(\BC/n15610 ), .CLK(clk_c), .FCI(\BC/n18627 ), .F0(\BC/n48 ), 
    .Q0(\BC/pwm_cnt_7 ), .F1(\BC/n47 ), .Q1(\BC/pwm_cnt_8 ), .FCO(\BC/n18628 ));
  BC_SLICE_315 \BC/SLICE_315 ( .A1(\BC/pwm_cnt_6 ), .A0(\BC/pwm_cnt_5 ), 
    .DI1(\BC/n49 ), .DI0(\BC/n50 ), .CE(\BC/clk_c_enable_116 ), 
    .LSR(\BC/n15610 ), .CLK(clk_c), .FCI(\BC/n18626 ), .F0(\BC/n50 ), 
    .Q0(\BC/pwm_cnt_5 ), .F1(\BC/n49 ), .Q1(\BC/pwm_cnt_6 ), .FCO(\BC/n18627 ));
  BC_SLICE_316 \BC/SLICE_316 ( .A1(\BC/pwm_cnt_4 ), .A0(\BC/pwm_cnt_3 ), 
    .DI1(\BC/n51 ), .DI0(\BC/n52 ), .CE(\BC/clk_c_enable_116 ), 
    .LSR(\BC/n15610 ), .CLK(clk_c), .FCI(\BC/n18625 ), .F0(\BC/n52 ), 
    .Q0(\BC/pwm_cnt_3 ), .F1(\BC/n51 ), .Q1(\BC/pwm_cnt_4 ), .FCO(\BC/n18626 ));
  SLICE_317 SLICE_317( .B1(\MC/n18371 ), .A1(n6558), .B0(\MC/n20567 ), 
    .A0(n6559), .M1(n1842), .M0(n1843), .CE(\DT/clk_c_enable_95 ), 
    .LSR(\DT/n15597 ), .CLK(clk_c), .FCI(\MC/n18404 ), .F0(\MC/en_N_3200_5 ), 
    .Q0(n1842), .F1(\MC/en_N_3200_6 ), .Q1(\DT/n1841 ), .FCO(\MC/n18405 ));
  SLICE_318 SLICE_318( .B1(\MC/n20590 ), .A1(\MC/n18359 ), .C0(n6408), 
    .B0(n6559), .A0(n6561), .M1(\DT/n1844 ), .M0(n1845), 
    .CE(\DT/clk_c_enable_95 ), .LSR(\DT/n15597 ), .CLK(clk_c), 
    .FCI(\MC/n18403 ), .F0(\MC/en_N_3200_3 ), .Q0(\DT/n1844 ), 
    .F1(\MC/en_N_3200_4 ), .Q1(n1843), .FCO(\MC/n18404 ));
  SLICE_319 SLICE_319( .B1(n6409), .A1(n6560), .B0(n6410), .A0(n6561), 
    .M1(n1846), .M0(\DT/n1847 ), .CE(\DT/clk_c_enable_95 ), .LSR(\DT/n15597 ), 
    .CLK(clk_c), .Q0(n1846), .F1(\MC/en_N_3200_2 ), .Q1(n1845), 
    .FCO(\MC/n18403 ));
  MC_SLICE_320 \MC/SLICE_320 ( .FCI(\MC/n18762 ), .F0(en));
  MC_SLICE_321 \MC/SLICE_321 ( .M0(\MC/MK/keystore_1 ), 
    .CE(\MC/MK/keystore_2__N_3302 ), .CLK(clk_c), .FCI(\MC/n18761 ), 
    .Q0(\MC/MK/keystore_2 ), .FCO(\MC/n18762 ));
  MC_SLICE_322 \MC/SLICE_322 ( .A1(\MC/en_N_3200_8 ), .A0(\MC/en_N_3200_7 ), 
    .FCI(\MC/n18760 ), .FCO(\MC/n18761 ));
  MC_SLICE_323 \MC/SLICE_323 ( .A1(\MC/en_N_3200_6 ), .A0(\MC/en_N_3200_5 ), 
    .FCI(\MC/n18759 ), .FCO(\MC/n18760 ));
  MC_SLICE_324 \MC/SLICE_324 ( .A1(\MC/en_N_3200_4 ), .A0(\MC/en_N_3200_3 ), 
    .FCI(\MC/n18758 ), .FCO(\MC/n18759 ));
  MC_SLICE_325 \MC/SLICE_325 ( .A1(\MC/en_N_3200_2 ), .B0(en_N_3200_0), 
    .A0(\MC/en_N_3200_1 ), .FCO(\MC/n18758 ));
  SLICE_326 SLICE_326( .B0(\MC/n18371 ), .A0(n6558), .M0(\DT/n1841 ), 
    .CE(\DT/clk_c_enable_95 ), .LSR(\DT/n15597 ), .CLK(clk_c), 
    .FCI(\MC/n18405 ), .F0(\MC/en_N_3200_7 ), .Q0(\DT/n1840 ), 
    .F1(\MC/en_N_3200_8 ));
  MC_MK_SLICE_327 \MC/MK/SLICE_327 ( .A0(\MC/MK/keysampulsecnt_31 ), 
    .DI0(\MC/MK/n134 ), .LSR(\MC/MK/n15576 ), .CLK(clk_c), 
    .FCI(\MC/MK/n18644 ), .F0(\MC/MK/n134 ), .Q0(\MC/MK/keysampulsecnt_31 ));
  MC_MK_SLICE_328 \MC/MK/SLICE_328 ( .A1(\MC/MK/keysampulsecnt_30 ), 
    .A0(\MC/MK/keysampulsecnt_29 ), .DI1(\MC/MK/n135 ), .DI0(\MC/MK/n136 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18643 ), .F0(\MC/MK/n136 ), 
    .Q0(\MC/MK/keysampulsecnt_29 ), .F1(\MC/MK/n135 ), 
    .Q1(\MC/MK/keysampulsecnt_30 ), .FCO(\MC/MK/n18644 ));
  MC_MK_SLICE_329 \MC/MK/SLICE_329 ( .A1(\MC/MK/keysampulsecnt_28 ), 
    .A0(\MC/MK/keysampulsecnt_27 ), .DI1(\MC/MK/n137 ), .DI0(\MC/MK/n138 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18642 ), .F0(\MC/MK/n138 ), 
    .Q0(\MC/MK/keysampulsecnt_27 ), .F1(\MC/MK/n137 ), 
    .Q1(\MC/MK/keysampulsecnt_28 ), .FCO(\MC/MK/n18643 ));
  MC_MK_SLICE_330 \MC/MK/SLICE_330 ( .A1(\MC/MK/keysampulsecnt_26 ), 
    .A0(\MC/MK/keysampulsecnt_25 ), .DI1(\MC/MK/n139 ), .DI0(\MC/MK/n140 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18641 ), .F0(\MC/MK/n140 ), 
    .Q0(\MC/MK/keysampulsecnt_25 ), .F1(\MC/MK/n139 ), 
    .Q1(\MC/MK/keysampulsecnt_26 ), .FCO(\MC/MK/n18642 ));
  MC_MK_SLICE_331 \MC/MK/SLICE_331 ( .A1(\MC/MK/keysampulsecnt_24 ), 
    .A0(\MC/MK/keysampulsecnt_23 ), .DI1(\MC/MK/n141 ), .DI0(\MC/MK/n142 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18640 ), .F0(\MC/MK/n142 ), 
    .Q0(\MC/MK/keysampulsecnt_23 ), .F1(\MC/MK/n141 ), 
    .Q1(\MC/MK/keysampulsecnt_24 ), .FCO(\MC/MK/n18641 ));
  MC_MK_SLICE_332 \MC/MK/SLICE_332 ( .A1(\MC/MK/keysampulsecnt_22 ), 
    .A0(\MC/MK/keysampulsecnt_21 ), .DI1(\MC/MK/n143 ), .DI0(\MC/MK/n144 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18639 ), .F0(\MC/MK/n144 ), 
    .Q0(\MC/MK/keysampulsecnt_21 ), .F1(\MC/MK/n143 ), 
    .Q1(\MC/MK/keysampulsecnt_22 ), .FCO(\MC/MK/n18640 ));
  MC_MK_SLICE_333 \MC/MK/SLICE_333 ( .A1(\MC/MK/keysampulsecnt_20 ), 
    .A0(\MC/MK/keysampulsecnt_19 ), .DI1(\MC/MK/n145 ), .DI0(\MC/MK/n146 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18638 ), .F0(\MC/MK/n146 ), 
    .Q0(\MC/MK/keysampulsecnt_19 ), .F1(\MC/MK/n145 ), 
    .Q1(\MC/MK/keysampulsecnt_20 ), .FCO(\MC/MK/n18639 ));
  MC_MK_SLICE_334 \MC/MK/SLICE_334 ( .A1(\MC/MK/keysampulsecnt_18 ), 
    .A0(\MC/MK/keysampulsecnt_17 ), .DI1(\MC/MK/n147 ), .DI0(\MC/MK/n148 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18637 ), .F0(\MC/MK/n148 ), 
    .Q0(\MC/MK/keysampulsecnt_17 ), .F1(\MC/MK/n147 ), 
    .Q1(\MC/MK/keysampulsecnt_18 ), .FCO(\MC/MK/n18638 ));
  MC_MK_SLICE_335 \MC/MK/SLICE_335 ( .A1(\MC/MK/keysampulsecnt_16 ), 
    .A0(\MC/MK/keysampulsecnt_15 ), .DI1(\MC/MK/n149 ), .DI0(\MC/MK/n150 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18636 ), .F0(\MC/MK/n150 ), 
    .Q0(\MC/MK/keysampulsecnt_15 ), .F1(\MC/MK/n149 ), 
    .Q1(\MC/MK/keysampulsecnt_16 ), .FCO(\MC/MK/n18637 ));
  MC_MK_SLICE_336 \MC/MK/SLICE_336 ( .A1(\MC/MK/keysampulsecnt_14 ), 
    .A0(\MC/MK/keysampulsecnt_13 ), .DI1(\MC/MK/n151 ), .DI0(\MC/MK/n152 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18635 ), .F0(\MC/MK/n152 ), 
    .Q0(\MC/MK/keysampulsecnt_13 ), .F1(\MC/MK/n151 ), 
    .Q1(\MC/MK/keysampulsecnt_14 ), .FCO(\MC/MK/n18636 ));
  MC_MK_SLICE_337 \MC/MK/SLICE_337 ( .A1(\MC/MK/keysampulsecnt_12 ), 
    .A0(\MC/MK/keysampulsecnt_11 ), .DI1(\MC/MK/n153 ), .DI0(\MC/MK/n154 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18634 ), .F0(\MC/MK/n154 ), 
    .Q0(\MC/MK/keysampulsecnt_11 ), .F1(\MC/MK/n153 ), 
    .Q1(\MC/MK/keysampulsecnt_12 ), .FCO(\MC/MK/n18635 ));
  MC_MK_SLICE_338 \MC/MK/SLICE_338 ( .A1(\MC/MK/keysampulsecnt_10 ), 
    .A0(\MC/MK/keysampulsecnt_9 ), .DI1(\MC/MK/n155 ), .DI0(\MC/MK/n156 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18633 ), .F0(\MC/MK/n156 ), 
    .Q0(\MC/MK/keysampulsecnt_9 ), .F1(\MC/MK/n155 ), 
    .Q1(\MC/MK/keysampulsecnt_10 ), .FCO(\MC/MK/n18634 ));
  MC_MK_SLICE_339 \MC/MK/SLICE_339 ( .A1(\MC/MK/keysampulsecnt_8 ), 
    .A0(\MC/MK/keysampulsecnt_7 ), .DI1(\MC/MK/n157 ), .DI0(\MC/MK/n158 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18632 ), .F0(\MC/MK/n158 ), 
    .Q0(\MC/MK/keysampulsecnt_7 ), .F1(\MC/MK/n157 ), 
    .Q1(\MC/MK/keysampulsecnt_8 ), .FCO(\MC/MK/n18633 ));
  MC_MK_SLICE_340 \MC/MK/SLICE_340 ( .A1(\MC/MK/keysampulsecnt_6 ), 
    .A0(\MC/MK/keysampulsecnt_5 ), .DI1(\MC/MK/n159 ), .DI0(\MC/MK/n160 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18631 ), .F0(\MC/MK/n160 ), 
    .Q0(\MC/MK/keysampulsecnt_5 ), .F1(\MC/MK/n159 ), 
    .Q1(\MC/MK/keysampulsecnt_6 ), .FCO(\MC/MK/n18632 ));
  MC_MK_SLICE_341 \MC/MK/SLICE_341 ( .A1(\MC/MK/keysampulsecnt_4 ), 
    .A0(\MC/MK/keysampulsecnt_3 ), .DI1(\MC/MK/n161 ), .DI0(\MC/MK/n162 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18630 ), .F0(\MC/MK/n162 ), 
    .Q0(\MC/MK/keysampulsecnt_3 ), .F1(\MC/MK/n161 ), 
    .Q1(\MC/MK/keysampulsecnt_4 ), .FCO(\MC/MK/n18631 ));
  MC_MK_SLICE_342 \MC/MK/SLICE_342 ( .A1(\MC/MK/keysampulsecnt_2 ), 
    .A0(\MC/MK/keysampulsecnt_1 ), .DI1(\MC/MK/n163 ), .DI0(\MC/MK/n164 ), 
    .LSR(\MC/MK/n15576 ), .CLK(clk_c), .FCI(\MC/MK/n18629 ), .F0(\MC/MK/n164 ), 
    .Q0(\MC/MK/keysampulsecnt_1 ), .F1(\MC/MK/n163 ), 
    .Q1(\MC/MK/keysampulsecnt_2 ), .FCO(\MC/MK/n18630 ));
  MC_MK_SLICE_343 \MC/MK/SLICE_343 ( .A1(\MC/MK/keysampulsecnt_0 ), 
    .DI1(\MC/MK/n165 ), .LSR(\MC/MK/n15576 ), .CLK(clk_c), .F1(\MC/MK/n165 ), 
    .Q1(\MC/MK/keysampulsecnt_0 ), .FCO(\MC/MK/n18629 ));
  CC_SLICE_344 \CC/SLICE_344 ( .DI0(\CC/n8741 ), .M1(\CC/Data11_0 ), 
    .CLK(clk_c), .FCI(\CC/n18523 ), .F0(\CC/n8741 ), .Q0(\CC/n6235 ), 
    .Q1(\CC/DataOut_decimal_31_N_447_1 ));
  CC_SLICE_345 \CC/SLICE_345 ( .A1(\CC/Data11_0 ), 
    .A0(\CC/DataOut_decimal_31_N_1207_9 ), .M1(tempC_3_0), .M0(tempC_3_3), 
    .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CC/n18522 ), .Q0(n6408), 
    .Q1(n103), .FCO(\CC/n18523 ));
  CC_SLICE_346 \CC/SLICE_346 ( .A0(\CC/Data11_0 ), .DI1(\CC/n8732 ), 
    .DI0(\CC/n8733 ), .CLK(clk_c), .FCI(\CC/n18521 ), .F0(\CC/n8733 ), 
    .Q0(\CC/n6231 ), .F1(\CC/n8732 ), .Q1(\CC/n6232 ), .FCO(\CC/n18522 ));
  CC_SLICE_347 \CC/SLICE_347 ( .B1(\CC/Data11_0 ), 
    .A1(\CC/DataOut_decimal_31_N_1207_9 ), .B0(\CC/Data11_0 ), 
    .A0(\CC/DataOut_decimal_31_N_1207_9 ), .DI1(\CC/n8734 ), .CLK(clk_c), 
    .F1(\CC/n8734 ), .Q1(\CC/n6230 ), .FCO(\CC/n18521 ));
  CC_SLICE_348 \CC/SLICE_348 ( .A0(\CC/tmp1_13 ), .DI0(\CC/n62 ), 
    .LSR(\CC/n2168 ), .CLK(clk_c), .FCI(\CC/n18418 ), .F0(\CC/n62 ), 
    .Q0(\CC/tmp1_13 ));
  CC_SLICE_349 \CC/SLICE_349 ( .A1(\CC/tmp1_12 ), .A0(\CC/tmp1_11 ), 
    .DI1(\CC/n63 ), .DI0(\CC/n64 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .FCI(\CC/n18417 ), .F0(\CC/n64 ), .Q0(\CC/tmp1_11 ), .F1(\CC/n63 ), 
    .Q1(\CC/tmp1_12 ), .FCO(\CC/n18418 ));
  CC_SLICE_350 \CC/SLICE_350 ( .A1(\CC/tmp1_10 ), .A0(\CC/tmp1_9 ), 
    .DI1(\CC/n65 ), .DI0(\CC/n66 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .FCI(\CC/n18416 ), .F0(\CC/n66 ), .Q0(\CC/tmp1_9 ), .F1(\CC/n65 ), 
    .Q1(\CC/tmp1_10 ), .FCO(\CC/n18417 ));
  CC_SLICE_351 \CC/SLICE_351 ( .M1(\CC/d31 ), .M0(\CC/d30 ), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18675 ), 
    .F0(\CC/clk_c_enable_237 ), .Q0(tempC_1_0), .Q1(tempC_1_1));
  CC_SLICE_352 \CC/SLICE_352 ( .M1(tempC_2_0), .M0(tempC_2_3), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18674 ), .Q0(n6483), 
    .Q1(n189), .FCO(\CC/n18675 ));
  CC_SLICE_353 \CC/SLICE_353 ( .B1(\CC/DataOut_integer_6 ), .A1(\CC/tmp_6 ), 
    .B0(\CC/DataOut_integer_5 ), .A0(\CC/tmp_5 ), .M1(tempC_2_2), 
    .M0(tempC_2_1), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18673 ), 
    .Q0(n6485), .Q1(n6484), .FCO(\CC/n18674 ));
  CC_SLICE_354 \CC/SLICE_354 ( .B1(\CC/DataOut_integer_4 ), .A1(\CC/tmp_4 ), 
    .B0(\CC/DataOut_integer_3 ), .A0(\CC/tmp_3 ), .M1(tempC_2_0), 
    .M0(tempC_1_2), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18672 ), 
    .Q0(n269), .Q1(n6486), .FCO(\CC/n18673 ));
  CC_SLICE_355 \CC/SLICE_355 ( .B1(\CC/DataOut_integer_2 ), .A1(\CC/tmp_2 ), 
    .B0(\CC/DataOut_integer_1 ), .A0(\CC/tmp_1 ), .M1(tempC_1_1), 
    .M0(tempC_1_0), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18671 ), 
    .Q0(n271), .Q1(n270), .FCO(\CC/n18672 ));
  CC_SLICE_356 \CC/SLICE_356 ( .B1(\CC/DataOut_integer_0 ), .A1(\CC/tmp_0 ), 
    .M1(tempC_1_3), .M0(tempC_1_2), .CE(clk_c_enable_272), .CLK(clk_c), 
    .Q0(n6293), .Q1(n6292), .FCO(\CC/n18671 ));
  CC_SLICE_357 \CC/SLICE_357 ( .M1(\CC/d4_1 ), .M0(\CC/d4_0 ), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18670 ), 
    .F0(clk_c_enable_272), .Q0(\CC/d40 ), .Q1(\CC/d41 ));
  CC_SLICE_358 \CC/SLICE_358 ( .A1(\CC/tmp1_8 ), .A0(\CC/tmp1_7 ), 
    .DI1(\CC/n67 ), .DI0(\CC/n68 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .FCI(\CC/n18415 ), .F0(\CC/n68 ), .Q0(\CC/tmp1_7 ), .F1(\CC/n67 ), 
    .Q1(\CC/tmp1_8 ), .FCO(\CC/n18416 ));
  CC_SLICE_359 \CC/SLICE_359 ( .M1(\CC/d43 ), .M0(\CC/d42 ), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18669 ), .Q0(tempC_2_2), 
    .Q1(tempC_2_3), .FCO(\CC/n18670 ));
  CC_SLICE_360 \CC/SLICE_360 ( .A1(\CC/DataOut_decimal_14 ), 
    .B0(\CC/DataOut_decimal_13 ), .A0(\CC/tmp1_13 ), .M1(\CC/d41 ), 
    .M0(\CC/d40 ), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18668 ), 
    .Q0(tempC_2_0), .Q1(tempC_2_1), .FCO(\CC/n18669 ));
  CC_SLICE_361 \CC/SLICE_361 ( .B1(\CC/DataOut_decimal_12 ), .A1(\CC/tmp1_12 ), 
    .B0(\CC/DataOut_decimal_11 ), .A0(\CC/tmp1_11 ), .M1(\CC/d23 ), 
    .M0(\CC/d22 ), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18667 ), 
    .Q0(tempC_0_2), .Q1(tempC_0_3), .FCO(\CC/n18668 ));
  CC_SLICE_362 \CC/SLICE_362 ( .B1(\CC/DataOut_decimal_10 ), .A1(\CC/tmp1_10 ), 
    .B0(\CC/DataOut_decimal_9 ), .A0(\CC/tmp1_9 ), .M1(\CC/d21 ), 
    .M0(\CC/d20 ), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18666 ), 
    .Q0(tempC_0_0), .Q1(tempC_0_1), .FCO(\CC/n18667 ));
  CC_SLICE_363 \CC/SLICE_363 ( .A1(\CC/tmp1_6 ), .A0(\CC/tmp1_5 ), 
    .DI1(\CC/n69 ), .DI0(\CC/n70 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .FCI(\CC/n18414 ), .F0(\CC/n70 ), .Q0(\CC/tmp1_5 ), .F1(\CC/n69 ), 
    .Q1(\CC/tmp1_6 ), .FCO(\CC/n18415 ));
  CC_SLICE_364 \CC/SLICE_364 ( .B1(\CC/DataOut_decimal_8 ), .A1(\CC/tmp1_8 ), 
    .B0(\CC/DataOut_decimal_7 ), .A0(\CC/tmp1_7 ), .M1(\CC/d3_3 ), 
    .M0(\CC/d3_2 ), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18665 ), 
    .Q0(\CC/d32 ), .Q1(\CC/d33 ), .FCO(\CC/n18666 ));
  CC_SLICE_365 \CC/SLICE_365 ( .B1(\CC/DataOut_decimal_6 ), .A1(\CC/tmp1_6 ), 
    .B0(\CC/DataOut_decimal_5 ), .A0(\CC/tmp1_5 ), .M1(\CC/d3_1 ), .M0(d3_0), 
    .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18664 ), .Q0(\CC/d30 ), 
    .Q1(\CC/d31 ), .FCO(\CC/n18665 ));
  CC_SLICE_366 \CC/SLICE_366 ( .B1(\CC/DataOut_decimal_0 ), .A1(\CC/tmp1_4 ), 
    .B0(\CC/DataOut_decimal_3 ), .A0(\CC/tmp1_3 ), .M1(\CC/d2_3 ), 
    .M0(\CC/d2_2 ), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18663 ), 
    .Q0(\CC/d22 ), .Q1(\CC/d23 ), .FCO(\CC/n18664 ));
  CC_SLICE_367 \CC/SLICE_367 ( .B1(\CC/DataOut_decimal_2 ), .A1(\CC/tmp1_2 ), 
    .B0(\CC/DataOut_decimal_1 ), .A0(\CC/tmp1_1 ), .M1(\CC/d2_1 ), 
    .M0(\CC/d2_0 ), .CE(clk_c_enable_272), .CLK(clk_c), .FCI(\CC/n18662 ), 
    .Q0(\CC/d20 ), .Q1(\CC/d21 ), .FCO(\CC/n18663 ));
  CC_SLICE_368 \CC/SLICE_368 ( .B1(\CC/DataOut_decimal_0 ), .A1(\CC/tmp1_0 ), 
    .M1(\CC/d33 ), .M0(\CC/d32 ), .CE(clk_c_enable_272), .CLK(clk_c), 
    .Q0(tempC_1_2), .Q1(tempC_1_3), .FCO(\CC/n18662 ));
  CC_SLICE_369 \CC/SLICE_369 ( .A1(\CC/tmp1_4 ), .A0(\CC/tmp1_3 ), 
    .DI1(\CC/n71 ), .DI0(\CC/n72 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .FCI(\CC/n18413 ), .F0(\CC/n72 ), .Q0(\CC/tmp1_3 ), .F1(\CC/n71 ), 
    .Q1(\CC/tmp1_4 ), .FCO(\CC/n18414 ));
  CC_SLICE_370 \CC/SLICE_370 ( .A1(\CC/tmp1_2 ), .A0(\CC/tmp1_1 ), 
    .DI1(\CC/n73 ), .DI0(\CC/n74 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .FCI(\CC/n18412 ), .F0(\CC/n74 ), .Q0(\CC/tmp1_1 ), .F1(\CC/n73 ), 
    .Q1(\CC/tmp1_2 ), .FCO(\CC/n18413 ));
  CC_SLICE_371 \CC/SLICE_371 ( .A1(\CC/tmp1_0 ), .DI1(\CC/n75 ), 
    .LSR(\CC/n2168 ), .CLK(clk_c), .F1(\CC/n75 ), .Q1(\CC/tmp1_0 ), 
    .FCO(\CC/n18412 ));
  CC_SLICE_372 \CC/SLICE_372 ( .DI0(\CC/DataOut_decimal_31_N_447_14 ), 
    .M1(sample_0), .CLK(clk_c), .FCI(\CC/n18439 ), 
    .F0(\CC/DataOut_decimal_31_N_447_14 ), .Q0(\CC/DataOut_decimal_14 ), 
    .Q1(\CC/DataOut_decimal_31_N_1207_9 ));
  CC_SLICE_373 \CC/SLICE_373 ( .A1(\CC/n14473 ), .A0(\CC/n14467 ), 
    .DI1(\CC/DataOut_decimal_31_N_447_13 ), 
    .DI0(\CC/DataOut_decimal_31_N_447_12 ), .CLK(clk_c), .FCI(\CC/n18438 ), 
    .F0(\CC/DataOut_decimal_31_N_447_12 ), .Q0(\CC/DataOut_decimal_12 ), 
    .F1(\CC/DataOut_decimal_31_N_447_13 ), .Q1(\CC/DataOut_decimal_13 ), 
    .FCO(\CC/n18439 ));
  CC_SLICE_374 \CC/SLICE_374 ( .B1(\CC/DataOut_decimal_31_N_447_2 ), 
    .A1(\CC/n14468 ), .A0(\CC/n14469 ), .DI1(\CC/DataOut_decimal_31_N_447_11 ), 
    .DI0(\CC/DataOut_decimal_31_N_447_10 ), .CLK(clk_c), .FCI(\CC/n18437 ), 
    .F0(\CC/DataOut_decimal_31_N_447_10 ), .Q0(\CC/DataOut_decimal_10 ), 
    .F1(\CC/DataOut_decimal_31_N_447_11 ), .Q1(\CC/DataOut_decimal_11 ), 
    .FCO(\CC/n18438 ));
  CC_SLICE_375 \CC/SLICE_375 ( .A1(\CC/n14470 ), 
    .B0(\CC/DataOut_decimal_31_N_447_2 ), .A0(\CC/n14471 ), 
    .DI1(\CC/DataOut_decimal_31_N_447_9 ), 
    .DI0(\CC/DataOut_decimal_31_N_447_8 ), .CLK(clk_c), .FCI(\CC/n18436 ), 
    .F0(\CC/DataOut_decimal_31_N_447_8 ), .Q0(\CC/DataOut_decimal_8 ), 
    .F1(\CC/DataOut_decimal_31_N_447_9 ), .Q1(\CC/DataOut_decimal_9 ), 
    .FCO(\CC/n18437 ));
  CC_SLICE_376 \CC/SLICE_376 ( .B1(\CC/DataOut_decimal_31_N_447_2 ), 
    .A1(\CC/n14472 ), .B0(\CC/DataOut_decimal_31_N_447_2 ), .A0(\CC/n6230 ), 
    .DI1(\CC/DataOut_decimal_31_N_447_7 ), .M0(\CC/Data81_0 ), .CLK(clk_c), 
    .Q0(\CC/DataOut_integer_31_N_415_4 ), .F1(\CC/DataOut_decimal_31_N_447_7 ), 
    .Q1(\CC/DataOut_decimal_7 ), .FCO(\CC/n18436 ));
  CC_SLICE_377 \CC/SLICE_377 ( .A1(\CC/tmp_6 ), .A0(\CC/tmp_5 ), 
    .DI1(\CC/n34 ), .DI0(\CC/n35 ), .LSR(\CC/n2141 ), .CLK(clk_c), 
    .FCI(\CC/n18390 ), .F0(\CC/n35 ), .Q0(\CC/tmp_5 ), .F1(\CC/n34 ), 
    .Q1(\CC/tmp_6 ));
  CC_SLICE_378 \CC/SLICE_378 ( .A1(\CC/tmp_4 ), .A0(\CC/tmp_3 ), 
    .DI1(\CC/n36 ), .DI0(\CC/n37 ), .LSR(\CC/n2141 ), .CLK(clk_c), 
    .FCI(\CC/n18389 ), .F0(\CC/n37 ), .Q0(\CC/tmp_3 ), .F1(\CC/n36 ), 
    .Q1(\CC/tmp_4 ), .FCO(\CC/n18390 ));
  CC_SLICE_379 \CC/SLICE_379 ( .A1(\CC/tmp_2 ), .A0(\CC/tmp_1 ), 
    .DI1(\CC/n38 ), .DI0(\CC/n39 ), .LSR(\CC/n2141 ), .CLK(clk_c), 
    .FCI(\CC/n18388 ), .F0(\CC/n39 ), .Q0(\CC/tmp_1 ), .F1(\CC/n38 ), 
    .Q1(\CC/tmp_2 ), .FCO(\CC/n18389 ));
  CC_SLICE_380 \CC/SLICE_380 ( .M1(\CC/da1 ), .M0(\CC/da0 ), 
    .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CC/n18757 ), 
    .F0(\CC/n14473 ), .Q0(tempC_3_0), .Q1(tempC_3_1));
  CC_SLICE_381 \CC/SLICE_381 ( .A1(\CC/DataOut_decimal_31_N_447_3 ), 
    .A0(\CC/n6235 ), .M1(tempC_4_0), .M0(tempC_4_3), 
    .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .FCI(\CC/n18756 ), 
    .F0(\CC/n14468 ), .Q0(n6558), .F1(\CC/n14467 ), .Q1(n50), 
    .FCO(\CC/n18757 ));
  CC_SLICE_382 \CC/SLICE_382 ( .A1(\CC/DataOut_decimal_31_N_447_1 ), 
    .B0(\CC/DataOut_decimal_31_N_447_3 ), .A0(\CC/DataOut_decimal_31_N_447_4 ), 
    .M1(tempC_4_2), .M0(tempC_4_1), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .FCI(\CC/n18755 ), .F0(\CC/n14470 ), .Q0(n6560), .F1(\CC/n14469 ), 
    .Q1(n6559), .FCO(\CC/n18756 ));
  CC_SLICE_383 \CC/SLICE_383 ( .B1(\CC/DataOut_decimal_31_N_447_3 ), 
    .A1(\CC/n6232 ), .B0(\CC/DataOut_decimal_31_N_447_3 ), .A0(\CC/n6231 ), 
    .M1(tempC_4_0), .M0(tempC_3_1), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .Q0(n102), .F1(\CC/n14471 ), .Q1(n6561), .FCO(\CC/n18755 ));
  CC_SLICE_384 \CC/SLICE_384 ( .A1(\CC/tmp_0 ), .DI1(\CC/n40_adj_3496 ), 
    .LSR(\CC/n2141 ), .CLK(clk_c), .F1(\CC/n40_adj_3496 ), .Q1(\CC/tmp_0 ), 
    .FCO(\CC/n18388 ));
  BC_SLICE_385 \BC/SLICE_385 ( .D1(\BC/n58 ), .C1(\BC/n57 ), 
    .B1(\BC/div_clk_cnt_2 ), .A1(\BC/div_clk_cnt_1 ), .B0(\BC/n15574 ), 
    .A0(\BC/div_clk ), .DI0(\BC/div_clk_N_3474 ), .CLK(clk_c), 
    .F0(\BC/div_clk_N_3474 ), .Q0(\BC/div_clk ), .F1(\BC/n15574 ));
  BC_SLICE_387 \BC/SLICE_387 ( .B1(en), .A1(\BC/pwm_out ), 
    .B0(\BC/pwm_out_N_3478 ), .A0(\BC/pwm_out ), .DI0(\BC/pwm_out_N_3477 ), 
    .CE(\BC/clk_c_enable_116 ), .CLK(clk_c), .F0(\BC/pwm_out_N_3477 ), 
    .Q0(\BC/pwm_out ), .F1(beep_c));
  CB_SLICE_388 \CB/SLICE_388 ( .D1(\CB/DQ_N_254 ), .C1(\CB/n20540 ), 
    .B1(\CB/state_0 ), .A1(\CB/n20543 ), .C0(\CB/state_0 ), .B0(\CB/n16921 ), 
    .A0(\CB/n20543 ), .DI0(\CB/DQ_N_251 ), .M0(\CB/state_1 ), 
    .CE(\CB/DQ_N_237 ), .CLK(\CB/overflow ), .OFX0(\CB/DQ_N_251 ), 
    .Q0(\CB/DQ_N_216 ));
  CB_SLICE_389 \CB/SLICE_389 ( .B1(\CB/num_0 ), .A1(\CB/num_1 ), 
    .A0(\CB/num_0 ), .DI1(\CB/n29 ), .DI0(\CB/n1 ), 
    .CE(\CB/overflow_enable_48 ), .LSR(\CB/n15867 ), .CLK(\CB/overflow ), 
    .F0(\CB/n1 ), .Q0(\CB/num_0 ), .F1(\CB/n29 ), .Q1(\CB/num_1 ));
  CB_SLICE_390 \CB/SLICE_390 ( .D1(\CB/num_2 ), .C1(\CB/num_3 ), 
    .B1(\CB/num_1 ), .A1(\CB/num_0 ), .C0(\CB/num_2 ), .B0(\CB/num_1 ), 
    .A0(\CB/num_0 ), .DI1(\CB/n27 ), .DI0(\CB/n28 ), 
    .CE(\CB/overflow_enable_48 ), .LSR(\CB/n15867 ), .CLK(\CB/overflow ), 
    .F0(\CB/n28 ), .Q0(\CB/num_2 ), .F1(\CB/n27 ), .Q1(\CB/num_3 ));
  CB_SLICE_391 \CB/SLICE_391 ( .D0(\CB/num_4 ), .C0(\CB/num_3 ), 
    .B0(\CB/n20572 ), .A0(\CB/num_2 ), .DI0(\CB/n26 ), 
    .CE(\CB/overflow_enable_48 ), .LSR(\CB/n15867 ), .CLK(\CB/overflow ), 
    .F0(\CB/n26 ), .Q0(\CB/num_4 ));
  SLICE_392 SLICE_392( .DI0(n20928), .CE(\CB/clk_c_enable_152 ), 
    .LSR(\CB/n18933 ), .CLK(clk_c), .F0(n20928), .Q0(\CB/overflow ));
  CB_SLICE_394 \CB/SLICE_394 ( .D1(\CB/n2073 ), .C1(\CB/state_0 ), 
    .B1(\CB/n14515 ), .A1(\CB/state_1 ), .D0(\CB/n33 ), .C0(\CB/state_0 ), 
    .B0(\CB/state_1 ), .A0(\CB/DQ_N_254 ), .DI0(\CB/n20000 ), 
    .CLK(\CB/overflow ), .F0(\CB/n20000 ), .Q0(\CB/state_0 ), .F1(\CB/n33 ));
  CB_SLICE_395 \CB/SLICE_395 ( .D1(\CB/n5 ), .C1(\CB/num_3 ), .B1(\CB/num_2 ), 
    .A1(\CB/num_4 ), .C0(\CB/state_0 ), .B0(\CB/DQ_N_254 ), .A0(\CB/state_1 ), 
    .DI0(\CB/state_1_N_49_1 ), .CE(\CB/overflow_enable_2 ), 
    .CLK(\CB/overflow ), .F0(\CB/state_1_N_49_1 ), .Q0(\CB/state_1 ), 
    .F1(\CB/DQ_N_254 ));
  CB_SLICE_396 \CB/SLICE_396 ( .D1(\CB/s_devide_6 ), .C1(\CB/s_devide_16 ), 
    .B1(\CB/n19914 ), .A1(\CB/n9 ), .B0(\CB/n15316 ), .A0(\CB/turn_0 ), 
    .DI0(\CB/n15317 ), .CE(\CB/overflow_enable_50 ), .CLK(\CB/overflow ), 
    .F0(\CB/n15317 ), .Q0(\CB/turn_0 ), .F1(\CB/n15316 ));
  CB_SLICE_397 \CB/SLICE_397 ( .D1(\CB/n59 ), .C1(\CB/n2895 ), 
    .B1(\CB/n16871 ), .A1(DQ_out), .C0(\CB/n2895 ), .B0(\CB/n60 ), 
    .A0(\CB/n16871 ), .DI1(\CB/n72 ), .DI0(\CB/n73 ), 
    .CE(\CB/overflow_enable_47 ), .CLK(\CB/overflow ), .F0(\CB/n73 ), 
    .Q0(\CB/us_cnt_0 ), .F1(\CB/n72 ), .Q1(\CB/us_cnt_1 ));
  CB_SLICE_398 \CB/SLICE_398 ( .D1(\CB/n16871 ), .C1(\CB/n2895 ), 
    .B1(\CB/n57 ), .A1(DQ_out), .D0(\CB/n58 ), .C0(\CB/n2895 ), 
    .B0(\CB/n16871 ), .A0(DQ_out), .DI1(\CB/n70 ), .DI0(\CB/n71 ), 
    .CE(\CB/overflow_enable_47 ), .CLK(\CB/overflow ), .F0(\CB/n71 ), 
    .Q0(\CB/us_cnt_2 ), .F1(\CB/n70 ), .Q1(\CB/us_cnt_3 ));
  CB_SLICE_399 \CB/SLICE_399 ( .C1(\CB/n2895 ), .B1(\CB/n55 ), 
    .A1(\CB/n16871 ), .C0(\CB/n2895 ), .B0(\CB/n56 ), .A0(\CB/n16871 ), 
    .DI1(\CB/n68 ), .DI0(\CB/n69 ), .CE(\CB/overflow_enable_47 ), 
    .CLK(\CB/overflow ), .F0(\CB/n69 ), .Q0(\CB/us_cnt_4 ), .F1(\CB/n68 ), 
    .Q1(\CB/us_cnt_5 ));
  CB_SLICE_400 \CB/SLICE_400 ( .C1(\CB/n2895 ), .B1(\CB/n53 ), 
    .A1(\CB/n16871 ), .C0(\CB/n2895 ), .B0(\CB/n54 ), .A0(\CB/n16871 ), 
    .DI1(\CB/n66 ), .DI0(\CB/n67 ), .CE(\CB/overflow_enable_47 ), 
    .CLK(\CB/overflow ), .F0(\CB/n67 ), .Q0(\CB/us_cnt_6 ), .F1(\CB/n66 ), 
    .Q1(\CB/us_cnt_7 ));
  CB_SLICE_401 \CB/SLICE_401 ( .D1(\CB/state_1 ), .C1(\CB/state_0 ), 
    .B1(\CB/n19718 ), .A1(\CB/us_cnt_10 ), .C0(\CB/n2895 ), .B0(\CB/n51 ), 
    .A0(\CB/n16871 ), .DI0(\CB/n64 ), .CE(\CB/overflow_enable_47 ), 
    .CLK(\CB/overflow ), .F0(\CB/n64 ), .Q0(\CB/us_cnt_9 ), .F1(\CB/n16871 ));
  CB_SLICE_402 \CB/SLICE_402 ( .B1(\CB/us_devide_0 ), .A1(\CB/us_devide_1 ), 
    .A0(\CB/us_devide_0 ), .DI1(\CB/n24 ), .DI0(\CB/n20568 ), .CLK(clk_c), 
    .F0(\CB/n20568 ), .Q0(\CB/us_devide_0 ), .F1(\CB/n24 ), 
    .Q1(\CB/us_devide_1 ));
  CB_SLICE_403 \CB/SLICE_403 ( .D1(\CB/us_devide_3 ), .C1(\CB/us_devide_2 ), 
    .B1(\CB/us_devide_0 ), .A1(\CB/us_devide_1 ), .C0(\CB/us_devide_2 ), 
    .B0(\CB/us_devide_0 ), .A0(\CB/us_devide_1 ), .DI1(\CB/n22_adj_3520 ), 
    .DI0(\CB/n23_adj_3519 ), .CLK(clk_c), .F0(\CB/n23_adj_3519 ), 
    .Q0(\CB/us_devide_2 ), .F1(\CB/n22_adj_3520 ), .Q1(\CB/us_devide_3 ));
  CC_SLICE_417 \CC/SLICE_417 ( .B0(\CC/DataOut_decimal_31_N_447_2 ), 
    .A0(\CC/n6230 ), .DI0(\CC/DataOut_decimal_31_N_447_6 ), .M1(\CC/Data71_0 ), 
    .CLK(clk_c), .F0(\CC/DataOut_decimal_31_N_447_6 ), 
    .Q0(\CC/DataOut_decimal_6 ), .Q1(\CC/DataOut_integer_31_N_415_3 ));
  CC_SLICE_421 \CC/SLICE_421 ( .B0(\CC/Data11_0 ), 
    .A0(\CC/DataOut_decimal_31_N_1207_9 ), .DI0(\CC/n8735 ), 
    .M1(\CC/DataOut_decimal_31_N_1207_9 ), .CLK(clk_c), .F0(\CC/n8735 ), 
    .Q0(\CC/DataOut_decimal_31_N_447_5 ), .Q1(\CC/DataOut_decimal_31_N_447_4 ));
  CC_SLICE_436 \CC/SLICE_436 ( .B1(\CC/d1_0 ), .A1(\CC/d1_1 ), .A0(\CC/d1_0 ), 
    .DI1(\CC/n24 ), .DI0(\CC/n1 ), .LSR(\CC/n2160 ), .CLK(clk_c), .F0(\CC/n1 ), 
    .Q0(\CC/d1_0 ), .F1(\CC/n24 ), .Q1(\CC/d1_1 ));
  CC_SLICE_437 \CC/SLICE_437 ( .D1(\CC/d1_3 ), .C1(\CC/d1_2 ), .B1(\CC/d1_0 ), 
    .A1(\CC/d1_1 ), .C0(\CC/d1_2 ), .B0(\CC/d1_0 ), .A0(\CC/d1_1 ), 
    .DI1(\CC/n22 ), .DI0(\CC/n23 ), .LSR(\CC/n2160 ), .CLK(clk_c), 
    .F0(\CC/n23 ), .Q0(\CC/d1_2 ), .F1(\CC/n22 ), .Q1(\CC/d1_3 ));
  CC_SLICE_438 \CC/SLICE_438 ( .C0(\CC/d2_0 ), .B0(\CC/n19730 ), 
    .A0(clk_c_enable_272), .DI0(\CC/n11_adj_3482 ), .LSR(\CC/n5096 ), 
    .CLK(clk_c), .F0(\CC/n11_adj_3482 ), .Q0(\CC/d2_0 ));
  CC_SLICE_439 \CC/SLICE_439 ( .C1(\CC/d2_2 ), .B1(\CC/d2_0 ), .A1(\CC/d2_1 ), 
    .B0(\CC/d2_0 ), .A0(\CC/d2_1 ), .DI1(\CC/n2011 ), .DI0(\CC/n2012 ), 
    .CE(\CC/clk_c_enable_275 ), .LSR(\CC/n5096 ), .CLK(clk_c), .F0(\CC/n2012 ), 
    .Q0(\CC/d2_1 ), .F1(\CC/n2011 ), .Q1(\CC/d2_2 ));
  CC_SLICE_440 \CC/SLICE_440 ( .B1(\CC/d2_2 ), .A1(\CC/d2_1 ), .D0(\CC/d2_3 ), 
    .C0(\CC/d2_2 ), .B0(\CC/d2_0 ), .A0(\CC/d2_1 ), .DI0(\CC/n2010 ), 
    .CE(\CC/clk_c_enable_275 ), .LSR(\CC/n5096 ), .CLK(clk_c), .F0(\CC/n2010 ), 
    .Q0(\CC/d2_3 ), .F1(\CC/n19888 ));
  CC_SLICE_441 \CC/SLICE_441 ( .C1(\CC/d3_2 ), .B1(d3_0), .A1(\CC/d3_1 ), 
    .B0(d3_0), .A0(\CC/d3_1 ), .DI1(\CC/n1988 ), .DI0(\CC/n1989 ), 
    .CE(clk_c_enable_105), .LSR(\CC/clk_c_enable_108 ), .CLK(clk_c), 
    .F0(\CC/n1989 ), .Q0(\CC/d3_1 ), .F1(\CC/n1988 ), .Q1(\CC/d3_2 ));
  CC_SLICE_442 \CC/SLICE_442 ( .D0(\CC/d3_3 ), .C0(\CC/d3_2 ), .B0(d3_0), 
    .A0(\CC/d3_1 ), .DI0(\CC/n1987 ), .CE(clk_c_enable_105), 
    .LSR(\CC/clk_c_enable_108 ), .CLK(clk_c), .F0(\CC/n1987 ), .Q0(\CC/d3_3 ));
  CC_SLICE_443 \CC/SLICE_443 ( .C0(\CC/d4_0 ), .B0(clk_c_enable_272), 
    .A0(\CC/n1959 ), .DI0(\CC/n11_adj_3480 ), .LSR(\CC/n2168 ), .CLK(clk_c), 
    .F0(\CC/n11_adj_3480 ), .Q0(\CC/d4_0 ));
  CC_SLICE_444 \CC/SLICE_444 ( .C1(\CC/d4_2 ), .B1(\CC/d4_0 ), .A1(\CC/d4_1 ), 
    .B0(\CC/d4_0 ), .A0(\CC/d4_1 ), .DI1(\CC/n1963 ), .DI0(\CC/n1964 ), 
    .CE(\CC/clk_c_enable_108 ), .LSR(\CC/n2168 ), .CLK(clk_c), .F0(\CC/n1964 ), 
    .Q0(\CC/d4_1 ), .F1(\CC/n1963 ), .Q1(\CC/d4_2 ));
  CC_SLICE_445 \CC/SLICE_445 ( .D0(\CC/d4_3 ), .C0(\CC/d4_2 ), .B0(\CC/d4_0 ), 
    .A0(\CC/d4_1 ), .DI0(\CC/n1962 ), .CE(\CC/clk_c_enable_108 ), 
    .LSR(\CC/n2168 ), .CLK(clk_c), .F0(\CC/n1962 ), .Q0(\CC/d4_3 ));
  CC_SLICE_448 \CC/SLICE_448 ( .B1(\CC/da_0 ), .A1(\CC/da_1 ), .A0(\CC/da_0 ), 
    .DI1(\CC/n24_adj_3486 ), .DI0(\CC/n25 ), .LSR(\CC/n2139 ), .CLK(clk_c), 
    .F0(\CC/n25 ), .Q0(\CC/da_0 ), .F1(\CC/n24_adj_3486 ), .Q1(\CC/da_1 ));
  CC_SLICE_449 \CC/SLICE_449 ( .D1(\CC/da_3 ), .C1(\CC/da_2 ), .B1(\CC/da_0 ), 
    .A1(\CC/da_1 ), .C0(\CC/da_2 ), .B0(\CC/da_0 ), .A0(\CC/da_1 ), 
    .DI1(\CC/n22_adj_3485 ), .DI0(\CC/n23_adj_3484 ), .LSR(\CC/n2139 ), 
    .CLK(clk_c), .F0(\CC/n23_adj_3484 ), .Q0(\CC/da_2 ), 
    .F1(\CC/n22_adj_3485 ), .Q1(\CC/da_3 ));
  CC_SLICE_452 \CC/SLICE_452 ( .D1(\CC/n4 ), .C1(\CC/da_1 ), 
    .B1(\CC/clk_c_enable_237 ), .A1(\CC/da_3 ), .B0(\CC/clk_c_enable_135 ), 
    .A0(\CC/db_0 ), .DI0(\CC/n11_adj_3481 ), .LSR(\CC/n2141 ), .CLK(clk_c), 
    .F0(\CC/n11_adj_3481 ), .Q0(\CC/db_0 ), .F1(\CC/clk_c_enable_135 ));
  CC_SLICE_453 \CC/SLICE_453 ( .C1(\CC/db_2 ), .B1(\CC/db_0 ), .A1(\CC/db_1 ), 
    .B0(\CC/db_0 ), .A0(\CC/db_1 ), .DI1(\CC/n956 ), .DI0(\CC/n957 ), 
    .CE(\CC/clk_c_enable_135 ), .LSR(\CC/n2141 ), .CLK(clk_c), .F0(\CC/n957 ), 
    .Q0(\CC/db_1 ), .F1(\CC/n956 ), .Q1(\CC/db_2 ));
  CC_SLICE_454 \CC/SLICE_454 ( .C1(\CC/db_3 ), .B1(\CC/db_0 ), .A1(\CC/db_2 ), 
    .D0(\CC/db_3 ), .C0(\CC/db_2 ), .B0(\CC/db_0 ), .A0(\CC/db_1 ), 
    .DI0(\CC/n955 ), .CE(\CC/clk_c_enable_135 ), .LSR(\CC/n2141 ), .CLK(clk_c), 
    .F0(\CC/n955 ), .Q0(\CC/db_3 ), .F1(\CC/n6_adj_3487 ));
  CF_SLICE_465 \CF/SLICE_465 ( .B1(\CF/da_0 ), .A1(\CF/da_1 ), .A0(\CF/da_0 ), 
    .DI1(\CF/n24 ), .DI0(\CF/n25 ), .LSR(\CF/n20515 ), .CLK(clk_c), 
    .F0(\CF/n25 ), .Q0(\CF/da_0 ), .F1(\CF/n24 ), .Q1(\CF/da_1 ));
  CF_SLICE_466 \CF/SLICE_466 ( .D1(\CF/da_3 ), .C1(\CF/da_2 ), .B1(\CF/da_0 ), 
    .A1(\CF/da_1 ), .C0(\CF/da_2 ), .B0(\CF/da_0 ), .A0(\CF/da_1 ), 
    .DI1(\CF/n22 ), .DI0(\CF/n23 ), .LSR(\CF/n20515 ), .CLK(clk_c), 
    .F0(\CF/n23 ), .Q0(\CF/da_2 ), .F1(\CF/n22 ), .Q1(\CF/da_3 ));
  CF_SLICE_467 \CF/SLICE_467 ( .D1(\CF/db_1 ), .C1(\CF/n19864 ), 
    .B1(\CF/db_3 ), .A1(\CF/n13 ), .D0(\CF/n45_adj_3535 ), .C0(\CF/db_0 ), 
    .B0(\CF/clk_c_enable_150 ), .A0(\CF/n14 ), .DI0(\CF/n11 ), 
    .LSR(\CF/n5102 ), .CLK(clk_c), .F0(\CF/n11 ), .Q0(\CF/db_0 ), 
    .F1(\CF/n45_adj_3535 ));
  CF_SLICE_468 \CF/SLICE_468 ( .C1(\CF/db_2 ), .B1(\CF/db_0 ), .A1(\CF/db_1 ), 
    .B0(\CF/db_0 ), .A0(\CF/db_1 ), .DI1(\CF/n743 ), .DI0(\CF/n744 ), 
    .CE(\CF/clk_c_enable_111 ), .LSR(\CF/n5102 ), .CLK(clk_c), .F0(\CF/n744 ), 
    .Q0(\CF/db_1 ), .F1(\CF/n743 ), .Q1(\CF/db_2 ));
  CF_SLICE_469 \CF/SLICE_469 ( .B1(\CF/db_3 ), .A1(\CF/db_0 ), .D0(\CF/db_3 ), 
    .C0(\CF/db_2 ), .B0(\CF/db_0 ), .A0(\CF/db_1 ), .DI0(\CF/n742 ), 
    .CE(\CF/clk_c_enable_111 ), .LSR(\CF/n5102 ), .CLK(clk_c), .F0(\CF/n742 ), 
    .Q0(\CF/db_3 ), .F1(\CF/n19880 ));
  CF_SLICE_470 \CF/SLICE_470 ( .D1(\CF/n19880 ), .C1(\CF/db_1 ), 
    .B1(\CF/db_2 ), .A1(\CF/n14 ), .D0(\CF/dc_0 ), .C0(\CF/clk_c_enable_150 ), 
    .B0(\CF/n19750 ), .A0(\CF/n20552 ), .DI0(\CF/n11_adj_3529 ), 
    .LSR(\CF/n5104 ), .CLK(clk_c), .F0(\CF/n11_adj_3529 ), .Q0(\CF/dc_0 ), 
    .F1(\CF/n19750 ));
  CF_SLICE_471 \CF/SLICE_471 ( .C1(\CF/dc_2 ), .B1(\CF/dc_0 ), .A1(\CF/dc_1 ), 
    .B0(\CF/dc_0 ), .A0(\CF/dc_1 ), .DI1(\CF/n707 ), .DI0(\CF/n708 ), 
    .CE(\CF/clk_c_enable_114 ), .LSR(\CF/n5104 ), .CLK(clk_c), .F0(\CF/n708 ), 
    .Q0(\CF/dc_1 ), .F1(\CF/n707 ), .Q1(\CF/dc_2 ));
  CF_SLICE_472 \CF/SLICE_472 ( .D0(\CF/dc_3 ), .C0(\CF/dc_2 ), .B0(\CF/dc_0 ), 
    .A0(\CF/dc_1 ), .DI0(\CF/n706 ), .CE(\CF/clk_c_enable_114 ), 
    .LSR(\CF/n5104 ), .CLK(clk_c), .F0(\CF/n706 ), .Q0(\CF/dc_3 ));
  CF_SLICE_475 \CF/SLICE_475 ( .B1(\CF/n21 ), .A1(\CF/n19750 ), .D0(\CF/dd_0 ), 
    .C0(\CF/clk_c_enable_150 ), .B0(\CF/n20551 ), .A0(\CF/n20546 ), 
    .DI0(\CF/n11_adj_3530 ), .LSR(\CF/n5106 ), .CLK(clk_c), 
    .F0(\CF/n11_adj_3530 ), .Q0(\CF/dd_0 ), .F1(\CF/n20551 ));
  CF_SLICE_476 \CF/SLICE_476 ( .C1(\CF/dd_2 ), .B1(\CF/dd_0 ), .A1(\CF/dd_1 ), 
    .B0(\CF/dd_0 ), .A0(\CF/dd_1 ), .DI1(\CF/n669 ), .DI0(\CF/n670 ), 
    .CE(\CF/clk_c_enable_118 ), .LSR(\CF/n5106 ), .CLK(clk_c), .F0(\CF/n670 ), 
    .Q0(\CF/dd_1 ), .F1(\CF/n669 ), .Q1(\CF/dd_2 ));
  CF_SLICE_477 \CF/SLICE_477 ( .D0(\CF/dd_3 ), .C0(\CF/dd_2 ), .B0(\CF/dd_0 ), 
    .A0(\CF/dd_1 ), .DI0(\CF/n668 ), .CE(\CF/clk_c_enable_118 ), 
    .LSR(\CF/n5106 ), .CLK(clk_c), .F0(\CF/n668 ), .Q0(\CF/dd_3 ));
  CF_SLICE_480 \CF/SLICE_480 ( .B1(\CF/n45_adj_3535 ), 
    .A1(\CF/clk_c_enable_150 ), .D0(\CF/de_0 ), .C0(\CF/clk_c_enable_150 ), 
    .B0(\CF/n20545 ), .A0(\CF/n20542 ), .DI0(\CF/n11_adj_3531 ), 
    .LSR(\CF/n5108 ), .CLK(clk_c), .F0(\CF/n11_adj_3531 ), .Q0(\CF/de_0 ), 
    .F1(\CF/n5102 ));
  CF_SLICE_481 \CF/SLICE_481 ( .C1(\CF/de_2 ), .B1(\CF/de_0 ), .A1(\CF/de_1 ), 
    .B0(\CF/de_0 ), .A0(\CF/de_1 ), .DI1(\CF/n629 ), .DI0(\CF/n630 ), 
    .CE(\CF/clk_c_enable_121 ), .LSR(\CF/n5108 ), .CLK(clk_c), .F0(\CF/n630 ), 
    .Q0(\CF/de_1 ), .F1(\CF/n629 ), .Q1(\CF/de_2 ));
  CF_SLICE_482 \CF/SLICE_482 ( .D0(\CF/de_3 ), .C0(\CF/de_2 ), .B0(\CF/de_0 ), 
    .A0(\CF/de_1 ), .DI0(\CF/n628 ), .CE(\CF/clk_c_enable_121 ), 
    .LSR(\CF/n5108 ), .CLK(clk_c), .F0(\CF/n628 ), .Q0(\CF/de_3 ));
  CF_SLICE_485 \CF/SLICE_485 ( .D1(\CF/n19742 ), .C1(\CF/n19778 ), 
    .B1(\CF/n20552 ), .A1(\CF/n19727 ), .D0(\CF/df_0 ), 
    .C0(\CF/clk_c_enable_150 ), .B0(\CF/n20541 ), .A0(\CF/n20536 ), 
    .DI0(\CF/n11_adj_3532 ), .LSR(\CF/n5110 ), .CLK(clk_c), 
    .F0(\CF/n11_adj_3532 ), .Q0(\CF/df_0 ), .F1(\CF/n20536 ));
  CF_SLICE_486 \CF/SLICE_486 ( .C1(\CF/df_2 ), .B1(\CF/df_0 ), .A1(\CF/df_1 ), 
    .B0(\CF/df_0 ), .A0(\CF/df_1 ), .DI1(\CF/n587 ), .DI0(\CF/n588 ), 
    .CE(\CF/clk_c_enable_124 ), .LSR(\CF/n5110 ), .CLK(clk_c), .F0(\CF/n588 ), 
    .Q0(\CF/df_1 ), .F1(\CF/n587 ), .Q1(\CF/df_2 ));
  CF_SLICE_487 \CF/SLICE_487 ( .D0(\CF/df_3 ), .C0(\CF/df_2 ), .B0(\CF/df_0 ), 
    .A0(\CF/df_1 ), .DI0(\CF/n586 ), .CE(\CF/clk_c_enable_124 ), 
    .LSR(\CF/n5110 ), .CLK(clk_c), .F0(\CF/n586 ), .Q0(\CF/df_3 ));
  CF_SLICE_490 \CF/SLICE_490 ( .B1(\CF/clk_c_enable_150 ), .A1(\CF/n14 ), 
    .D0(\CF/clk_c_enable_150 ), .C0(\CF/dg_0 ), .B0(\CF/n19778 ), 
    .A0(\CF/n20541 ), .DI0(\CF/n11_adj_3533 ), .LSR(\CF/clk_c_enable_130 ), 
    .CLK(clk_c), .F0(\CF/n11_adj_3533 ), .Q0(\CF/dg_0 ), .F1(\CF/n20515 ));
  CF_SLICE_491 \CF/SLICE_491 ( .C1(\CF/dg_2 ), .B1(\CF/dg_0 ), .A1(\CF/dg_1 ), 
    .B0(\CF/dg_0 ), .A0(\CF/dg_1 ), .DI1(\CF/n543 ), .DI0(\CF/n544 ), 
    .CE(\CF/clk_c_enable_127 ), .LSR(\CF/clk_c_enable_130 ), .CLK(clk_c), 
    .F0(\CF/n544 ), .Q0(\CF/dg_1 ), .F1(\CF/n543 ), .Q1(\CF/dg_2 ));
  CF_SLICE_492 \CF/SLICE_492 ( .B1(\CF/dg_1 ), .A1(\CF/dg_2 ), .D0(\CF/dg_3 ), 
    .C0(\CF/dg_2 ), .B0(\CF/dg_0 ), .A0(\CF/dg_1 ), .DI0(\CF/n542 ), 
    .CE(\CF/clk_c_enable_127 ), .LSR(\CF/clk_c_enable_130 ), .CLK(clk_c), 
    .F0(\CF/n542 ), .Q0(\CF/dg_3 ), .F1(\CF/n19843 ));
  CF_SLICE_495 \CF/SLICE_495 ( .B1(\CF/clk_c_enable_150 ), .A1(\CF/n493 ), 
    .C0(\CF/dh_0 ), .B0(\CF/clk_c_enable_150 ), .A0(\CF/n493 ), 
    .DI0(\CF/n11_adj_3534 ), .LSR(\CF/n2252 ), .CLK(clk_c), 
    .F0(\CF/n11_adj_3534 ), .Q0(\CF/dh_0 ), .F1(\CF/clk_c_enable_130 ));
  CF_SLICE_496 \CF/SLICE_496 ( .C1(\CF/dh_2 ), .B1(\CF/dh_0 ), .A1(\CF/dh_1 ), 
    .B0(\CF/dh_0 ), .A0(\CF/dh_1 ), .DI1(\CF/n497 ), .DI0(\CF/n498 ), 
    .CE(\CF/clk_c_enable_130 ), .LSR(\CF/n2252 ), .CLK(clk_c), .F0(\CF/n498 ), 
    .Q0(\CF/dh_1 ), .F1(\CF/n497 ), .Q1(\CF/dh_2 ));
  CF_SLICE_497 \CF/SLICE_497 ( .D0(\CF/dh_3 ), .C0(\CF/dh_2 ), .B0(\CF/dh_0 ), 
    .A0(\CF/dh_1 ), .DI0(\CF/n496 ), .CE(\CF/clk_c_enable_130 ), 
    .LSR(\CF/n2252 ), .CLK(clk_c), .F0(\CF/n496 ), .Q0(\CF/dh_3 ));
  CB_SLICE_498 \CB/SLICE_498 ( .D1(\CB/n20558 ), .C1(\CB/us_cnt_4 ), 
    .B1(\CB/us_cnt_6 ), .A1(\CB/n20548 ), .D0(DQ_out), .C0(\CB/DQ_N_237 ), 
    .B0(\CB/n20540 ), .A0(\CB/n20505 ), .DI0(\CB/DQ_N_230 ), 
    .CLK(\CB/overflow ), .F0(\CB/DQ_N_230 ), .Q0(DQ_N_215), .F1(\CB/n20540 ));
  DT_SLICE_499 \DT/SLICE_499 ( .B0(\DT/clk_c_enable_132 ), .A0(\DT/codeP_0 ), 
    .DI0(\DT/n8 ), .LSR(\DT/n5116 ), .CLK(clk_c), .F0(\DT/n8 ), 
    .Q0(\DT/codeP_0 ));
  DT_SLICE_500 \DT/SLICE_500 ( .C1(\DT/codeP_1 ), .B1(\DT/codeP_2 ), 
    .A1(\DT/codeP_0 ), .B0(\DT/codeP_1 ), .A0(\DT/codeP_0 ), .DI1(\DT/n19715 ), 
    .DI0(\DT/n3 ), .CE(\DT/clk_c_enable_132 ), .LSR(\DT/n5116 ), .CLK(clk_c), 
    .F0(\DT/n3 ), .Q0(\DT/codeP_1 ), .F1(\DT/n19715 ), .Q1(\DT/codeP_2 ));
  SLICE_510 SLICE_510( .D1(\MC/MK/keysampulsecnt_16 ), 
    .C1(\MC/MK/keysampulsecnt_10 ), .B1(\MC/MK/n19916 ), .A1(\MC/MK/n9 ), 
    .B0(\MC/MK/n15576 ), .A0(\MC/MK/keysampulse ), 
    .DI0(\MC/MK/keysampulse_N_3307 ), .M1(sck_c), .CLK(clk_c), 
    .F0(\MC/MK/keysampulse_N_3307 ), .Q0(\MC/MK/keysampulse ), 
    .F1(\MC/MK/n15576 ), .Q1(\DT/shift_clock_ls ));
  MC_MK_SLICE_512 \MC/MK/SLICE_512 ( .A0(mode_key_c), 
    .DI0(\MC/MK/btnstate_N_3301 ), .M1(\MC/MK/keystore_0 ), 
    .CE(\MC/MK/keystore_2__N_3302 ), .CLK(clk_c), .F0(\MC/MK/btnstate_N_3301 ), 
    .Q0(\MC/MK/keystore_0 ), .Q1(\MC/MK/keystore_1 ));
  SLICE_514 SLICE_514( .B1(\CC/d3_3 ), .A1(n19748), .C0(d3_0), 
    .B0(clk_c_enable_272), .A0(n19748), .DI0(n11), .LSR(\CC/clk_c_enable_108 ), 
    .CLK(clk_c), .F0(n11), .Q0(d3_0), .F1(\CC/n6_adj_3495 ));
  DT_SLICE_515 \DT/SLICE_515 ( .B1(rst_c), .A1(\DT/rck_N_3190 ), .D0(\DT/n4 ), 
    .C0(\DT/codeP_2 ), .B0(\DT/codeP_1 ), .A0(\DT/n19981 ), 
    .DI0(\DT/din_N_3179 ), .CE(\DT/din_N_3186 ), .CLK(clk_c), 
    .F0(\DT/din_N_3179 ), .Q0(din_c), .F1(rck_c));
  MC_MK_SLICE_517 \MC/MK/SLICE_517 ( .C0(\MC/MK/keystore_0 ), 
    .B0(\MC/MK/keystore_1 ), .A0(\MC/MK/keystore_2 ), 
    .DI0(\MC/MK/keystate_N_3305 ), .M1(\MC/MK/keysampulse ), .CLK(clk_c), 
    .F0(\MC/MK/keystate_N_3305 ), .Q0(kmodstate), .Q1(\MC/MK/keysampulse_ls ));
  SLICE_519 SLICE_519( .B1(mode_0), .A1(mode_1), .B0(mode_1), .A0(mode_0), 
    .DI1(linecode_87_N_2650_1), .DI0(linecode_16), .CE(clk_c_enable_151), 
    .CLK(clk_c), .F0(linecode_16), .Q0(mode_0), .F1(linecode_87_N_2650_1), 
    .Q1(mode_1));
  SLICE_520 SLICE_520( .B1(tempC_4_3), .A1(tempC_4_2), .B0(tempC_4_2), 
    .A0(tempC_4_0), .DI0(n9500), .M1(tempC_4_1), .CE(\CC/clk_c_enable_237 ), 
    .CLK(clk_c), .F0(n9500), .Q0(n48), .F1(\CF/n18242 ), .Q1(n49));
  SLICE_522 SLICE_522( .B1(tempC_3_2), .A1(tempC_3_0), .B0(tempC_3_3), 
    .A0(tempC_3_0), .DI0(n13933), .M1(tempC_3_2), .CE(\CC/clk_c_enable_237 ), 
    .CLK(clk_c), .F0(n13933), .Q0(n100), .F1(\CF/n20575 ), .Q1(n101));
  SLICE_524 SLICE_524( .B1(tempC_2_1), .A1(tempC_2_0), .B0(tempC_2_2), 
    .A0(tempC_2_0), .DI0(n12964), .M1(tempC_2_1), .CE(clk_c_enable_272), 
    .CLK(clk_c), .F0(n12964), .Q0(n187), .F1(\CF/n12443 ), .Q1(n188));
  SLICE_526 SLICE_526( .B1(tempC_1_3), .A1(tempC_1_2), .B0(tempC_1_1), 
    .A0(tempC_1_0), .DI0(n11770), .M1(tempC_1_3), .CE(clk_c_enable_272), 
    .CLK(clk_c), .F0(n11770), .Q0(n265), .F1(\CF/n18336 ), .Q1(n268));
  SLICE_529 SLICE_529( .B1(tempC_0_2), .A1(tempC_0_0), .B0(tempC_0_2), 
    .A0(tempC_0_0), .DI0(n12454), .M1(tempC_0_1), .CE(clk_c_enable_272), 
    .CLK(clk_c), .F0(n12454), .Q0(n348), .F1(\CF/n20588 ), .Q1(n349));
  DT_SLICE_553 \DT/SLICE_553 ( .D1(\DT/n50 ), .C1(\DT/n58 ), .B1(\DT/n20036 ), 
    .A1(\DT/n49 ), .B0(\DT/n15573 ), .A0(sck_c), .DI0(\DT/sck_N_3189 ), 
    .CLK(clk_c), .F0(\DT/sck_N_3189 ), .Q0(sck_c), .F1(\DT/n15573 ));
  SLICE_563 SLICE_563( .B1(\CC/DataOut_decimal_31_N_447_3 ), .A1(\CC/n6231 ), 
    .B0(\MC/MK/keysampulsecnt_28 ), .A0(\MC/MK/keysampulsecnt_29 ), 
    .M1(\CC/db3 ), .M0(\CC/db2 ), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .F0(\MC/MK/n28 ), .Q0(tempC_4_2), .F1(\CC/n14472 ), .Q1(tempC_4_3));
  SLICE_564 SLICE_564( .C1(\MC/MK/keysampulsecnt_1 ), 
    .B1(\MC/MK/keysampulsecnt_30 ), .A1(\MC/MK/keysampulsecnt_11 ), 
    .B0(\MC/MK/keysampulse_ls ), .A0(\MC/MK/keysampulse ), 
    .M1(\CF/DataF_0_31_N_2598_1 ), .M0(\CF/DataF_0_31_N_2598_0 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\MC/MK/keystore_2__N_3302 ), 
    .Q0(tempF_0_0), .F1(\MC/MK/n38 ), .Q1(tempF_0_1));
  SLICE_565 SLICE_565( .B1(\MC/MK/keysampulsecnt_26 ), 
    .A1(\MC/MK/keysampulsecnt_25 ), .D0(\BC/div_clk_cnt_13 ), 
    .C0(\BC/div_clk_cnt_23 ), .B0(\BC/div_clk_cnt_29 ), 
    .A0(\BC/div_clk_cnt_15 ), .M1(\CF/DataF_0_31_N_2598_3 ), 
    .M0(\CF/DataF_0_31_N_2598_2 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\BC/n52_adj_3508 ), .Q0(tempF_0_2), .F1(\MC/MK/n32 ), .Q1(tempF_0_3));
  SLICE_566 SLICE_566( .D1(\BC/div_clk_cnt_24 ), .C1(\BC/div_clk_cnt_12 ), 
    .B1(\BC/div_clk_cnt_17 ), .A1(\BC/div_clk_cnt_9 ), .B0(\CB/us_cnt_3 ), 
    .A0(\CB/us_cnt_2 ), .M1(\CF/DataF_1_31_N_2566_1 ), 
    .M0(\CF/DataF_1_31_N_2566_0 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CB/n21_adj_3516 ), .Q0(tempF_1_0), .F1(\BC/n48_adj_3507 ), 
    .Q1(tempF_1_1));
  SLICE_567 SLICE_567( .D1(\CB/s_devide_4 ), .C1(\CB/s_devide_11 ), 
    .B1(\CB/s_devide_2 ), .A1(\CB/s_devide_0 ), .D0(\CB/s_devide_17 ), 
    .C0(\CB/s_devide_14 ), .B0(\CB/s_devide_19 ), .A0(\CB/s_devide_9 ), 
    .M1(\CF/DataF_1_31_N_2566_3 ), .M0(\CF/DataF_1_31_N_2566_2 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CB/n19914 ), .Q0(tempF_1_2), 
    .F1(\CB/n21_adj_3509 ), .Q1(tempF_1_3));
  SLICE_568 SLICE_568( .B1(n1845), .A1(n1846), .C0(temp_1_2), .B0(temp_1_1), 
    .A0(temp_1_0), .M1(\CF/DataF_2_31_N_2534_1 ), 
    .M0(\CF/DataF_2_31_N_2534_0 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(n19876), .Q0(tempF_2_0), .F1(n19952), .Q1(tempF_2_1));
  SLICE_569 SLICE_569( .B1(n6485), .A1(n6486), .D0(temp_0_2), .C0(temp_0_1), 
    .B0(temp_0_3), .A0(temp_0_0), .M1(\CF/DataF_2_31_N_2534_3 ), 
    .M0(\CF/DataF_2_31_N_2534_2 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\DE/n19868 ), .Q0(tempF_2_2), .F1(\DE/n20573 ), .Q1(tempF_2_3));
  SLICE_570 SLICE_570( .D1(temp_2_2), .C1(temp_2_3), .B1(temp_2_0), 
    .A1(temp_2_1), .D0(temp_3_2), .C0(temp_3_3), .B0(temp_3_0), .A0(temp_3_1), 
    .M1(\CF/DataF_3_31_N_2502_1 ), .M0(\CF/DataF_3_31_N_2502_0 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\DE/n20413 ), .Q0(tempF_3_0), 
    .F1(\DE/n20420 ), .Q1(tempF_3_1));
  CF_SLICE_571 \CF/SLICE_571 ( .B1(n189), .A1(\CF/n12320 ), .B0(n50), 
    .A0(\CF/n14305 ), .M1(\CF/DataF_3_31_N_2502_3 ), 
    .M0(\CF/DataF_3_31_N_2502_2 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/Fahrenheit_6 ), .Q0(tempF_3_2), .F1(\CF/Fahrenheit_4 ), 
    .Q1(tempF_3_3));
  CF_SLICE_572 \CF/SLICE_572 ( .B1(n349), .A1(n271), .B0(n103), 
    .A0(\CF/n12319 ), .M1(\CF/DataF_4_31_N_2470_1 ), 
    .M0(\CF/DataF_4_31_N_2470_0 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/n14142 ), .Q0(tempF_4_0), .F1(\CF/Fahrenheit_3 ), .Q1(tempF_4_1));
  SLICE_573 SLICE_573( .D1(\DT/shift_clock_cnt_12 ), 
    .C1(\DT/shift_clock_cnt_26 ), .B1(\DT/shift_clock_cnt_9 ), 
    .A1(\DT/shift_clock_cnt_25 ), .D0(\DT/shift_clock_cnt_31 ), 
    .C0(\DT/shift_clock_cnt_13 ), .B0(\DT/shift_clock_cnt_3 ), 
    .A0(\DT/shift_clock_cnt_29 ), .M1(\CF/DataF_4_31_N_2470_3 ), 
    .M0(\CF/DataF_4_31_N_2470_2 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\DT/n56 ), .Q0(tempF_4_2), .F1(\DT/n51 ), .Q1(tempF_4_3));
  DE_SLICE_574 \DE/SLICE_574 ( .D1(n6336), .C1(tempF_0_0), .B1(mode_1), 
    .A1(mode_0), .D0(mode_0), .C0(\DE/temp_0__4__N_2831 ), .B0(n6295), 
    .A0(mode_1), .DI0(\DE/temp_0__4__N_2830 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .F0(\DE/temp_0__4__N_2830 ), .Q0(temp_0_0), .F1(\DE/temp_0__4__N_2831 ));
  DE_SLICE_575 \DE/SLICE_575 ( .D1(n6335), .C1(tempF_0_1), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/n20556 ), .C0(\DE/temp_0_4_N_2865_1 ), 
    .B0(\DE/n20557 ), .A0(n6292), .DI0(\DE/temp_0__4__N_2827 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_0__4__N_2827 ), .Q0(temp_0_1));
  DE_SLICE_576 \DE/SLICE_576 ( .D1(n6334), .C1(tempF_0_2), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/n20539 ), .C0(n6295), .B0(n6294), .A0(n6293), 
    .DI0(\DE/temp_0__4__N_2824 ), .M0(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_0__4__N_2824 ), .Q0(temp_0_2));
  DE_SLICE_577 \DE/SLICE_577 ( .D1(n6333), .C1(tempF_0_3), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/n20539 ), .C0(\DE/n20554 ), .B0(\DE/n20557 ), 
    .A0(n6292), .DI0(\DE/temp_0__4__N_2821 ), .M0(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_0__4__N_2821 ), .Q0(temp_0_3));
  DE_SLICE_578 \DE/SLICE_578 ( .B1(n6295), .A1(n6294), .D0(\DE/n20547 ), 
    .C0(n6292), .B0(\DE/n20574 ), .A0(n6293), .DI0(\DE/temp_0_4_N_2820_4 ), 
    .LSR(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .F0(\DE/temp_0_4_N_2820_4 ), .Q0(temp_0_4), .F1(\DE/n20574 ));
  DE_SLICE_579 \DE/SLICE_579 ( .D1(n6295), .C1(tempF_1_0), .B1(mode_1), 
    .A1(mode_0), .D0(n6486), .C0(\DE/n20557 ), .B0(\DE/n20547 ), .A0(n6292), 
    .DI0(\DE/temp_1__4__N_2815 ), .M0(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_1__4__N_2815 ), .Q0(temp_1_0));
  DE_SLICE_580 \DE/SLICE_580 ( .D1(n6294), .C1(tempF_1_1), .B1(mode_1), 
    .A1(mode_0), .D0(n6484), .C0(n6485), .B0(\DE/n20534 ), .A0(n6483), 
    .DI0(\DE/temp_1__4__N_2812 ), .M0(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_1__4__N_2812 ), .Q0(temp_1_1));
  DE_SLICE_581 \DE/SLICE_581 ( .D1(n6293), .C1(tempF_1_2), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/n4 ), .C0(\DE/n20530 ), .B0(\DE/n20533 ), 
    .A0(\DE/temp_1_4_N_2930_2 ), .DI0(\DE/temp_1__4__N_2809 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_1__4__N_2809 ), .Q0(temp_1_2));
  DE_SLICE_582 \DE/SLICE_582 ( .D1(n6292), .C1(tempF_1_3), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/n20530 ), .C0(\DE/n4_adj_3524 ), .B0(\DE/n5692 ), 
    .A0(n6483), .DI0(\DE/temp_1__4__N_2806 ), .M0(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_1__4__N_2806 ), .Q0(temp_1_3));
  DE_SLICE_583 \DE/SLICE_583 ( .D1(\DE/n20539 ), .C1(n6484), .B1(n6485), 
    .A1(n6486), .D0(\DE/n20530 ), .C0(\DE/n20537 ), .B0(n6483), 
    .A0(\DE/n20539 ), .DI0(\DE/temp_1_4_N_2805_4 ), .LSR(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .F0(\DE/temp_1_4_N_2805_4 ), .Q0(temp_1_4), 
    .F1(\DE/n20537 ));
  DE_SLICE_584 \DE/SLICE_584 ( .D1(\DE/n20530 ), .C1(en_N_3200_0), .B1(n6486), 
    .A1(mode_0), .C0(n6486), .B0(tempF_2_0), .A0(mode_0), 
    .DI0(\DE/temp_2__4__N_2800 ), .M0(mode_1), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_2__4__N_2800 ), .Q0(temp_2_0));
  DE_SLICE_585 \DE/SLICE_585 ( .D1(n6485), .C1(tempF_2_1), .B1(mode_1), 
    .A1(mode_0), .D0(en_N_3200_0), .C0(n6410), .B0(\DE/n20530 ), 
    .A0(\DE/temp_2__4__N_3061 ), .DI0(\DE/temp_2__4__N_2797 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_2__4__N_2797 ), .Q0(temp_2_1));
  DE_SLICE_586 \DE/SLICE_586 ( .D1(n6484), .C1(tempF_2_2), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/temp_2__4__N_3061 ), .C0(\DE/n20528 ), 
    .B0(\DE/n20526 ), .A0(n6409), .DI0(\DE/temp_2__4__N_2794 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_2__4__N_2794 ), .Q0(temp_2_2));
  DE_SLICE_587 \DE/SLICE_587 ( .D1(n6483), .C1(tempF_2_3), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/temp_2__4__N_3061 ), .C0(\DE/n20525 ), 
    .B0(\DE/n20522 ), .A0(n6408), .DI0(\DE/temp_2__4__N_2791 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_2__4__N_2791 ), .Q0(temp_2_3));
  DE_SLICE_588 \DE/SLICE_588 ( .D1(n6561), .C1(\DE/temp_2__4__N_3061 ), 
    .B1(en_N_3200_0), .A1(mode_0), .C0(en_N_3200_0), .B0(tempF_3_0), 
    .A0(mode_0), .DI0(\DE/temp_3__4__N_2785 ), .M0(mode_1), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_3__4__N_2785 ), .Q0(temp_3_0));
  DE_SLICE_589 \DE/SLICE_589 ( .D1(n6410), .C1(tempF_3_1), .B1(mode_1), 
    .A1(mode_0), .D0(n6561), .C0(n6560), .B0(\DE/temp_2__4__N_3061 ), 
    .A0(\DE/temp_4_2_N_2768_0 ), .DI0(\DE/temp_3__4__N_2782 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_3__4__N_2782 ), .Q0(temp_3_1));
  DE_SLICE_590 \DE/SLICE_590 ( .D1(n6409), .C1(tempF_3_2), .B1(mode_1), 
    .A1(mode_0), .D0(\DE/temp_4_2_N_2768_0 ), .C0(\DE/n20524 ), 
    .B0(\DE/n20520 ), .A0(n6559), .DI0(\DE/temp_3__4__N_2779 ), 
    .M0(\DE/n20559 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .OFX0(\DE/temp_3__4__N_2779 ), .Q0(temp_3_2));
  DE_SLICE_591 \DE/SLICE_591 ( .D1(n6408), .C1(mode_1), .B1(tempF_3_3), 
    .A1(mode_0), .C0(n6559), .B0(n6558), .A0(\DE/n20787 ), 
    .DI0(\DE/temp_3__4__N_2776 ), .M0(\DE/n20559 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .OFX0(\DE/temp_3__4__N_2776 ), .Q0(temp_3_3));
  DE_SLICE_592 \DE/SLICE_592 ( .D1(n6561), .C1(tempF_4_0), .B1(mode_1), 
    .A1(mode_0), .D0(mode_0), .C0(\DE/temp_4__2__N_2770 ), 
    .B0(\DE/temp_4_2_N_2768_0 ), .A0(mode_1), .DI0(\DE/temp_4__2__N_2769 ), 
    .CLK(\DE/temp_4__2__N_2772 ), .F0(\DE/temp_4__2__N_2769 ), .Q0(temp_4_0), 
    .F1(\DE/temp_4__2__N_2770 ));
  DE_SLICE_593 \DE/SLICE_593 ( .D1(n6559), .C1(tempF_4_2), .B1(mode_1), 
    .A1(mode_0), .D0(n6560), .C0(tempF_4_1), .B0(mode_1), .A0(mode_0), 
    .DI1(\DE/temp_4__2__N_2730 ), .DI0(\DE/temp_4__2__N_2767 ), 
    .LSR(\DE/temp_4__31__N_2727 ), .CLK(\DE/temp_4__2__N_2772 ), 
    .F0(\DE/temp_4__2__N_2767 ), .Q0(temp_4_1), .F1(\DE/temp_4__2__N_2730 ), 
    .Q1(temp_4_2));
  DE_SLICE_594 \DE/SLICE_594 ( .D1(kmodstate_ls), .C1(kmodstate), .B1(mode_0), 
    .A1(mode_1), .D0(n6558), .C0(tempF_4_3), .B0(mode_1), .A0(mode_0), 
    .DI0(\DE/temp_4__31__N_2726 ), .LSR(\DE/temp_4__31__N_2727 ), .CLK(mode_1), 
    .F0(\DE/temp_4__31__N_2726 ), .Q0(temp_4_3), .F1(clk_c_enable_151));
  DT_SLICE_595 \DT/SLICE_595 ( .C1(temp_1_0), .B1(temp_1_3), .A1(temp_1_1), 
    .D0(temp_1_3), .C0(temp_1_1), .B0(temp_1_2), .A0(temp_1_0), 
    .OFX0(\DT/n20502 ), .F1(\DT/n20219 ));
  DE_SLICE_596 \DE/SLICE_596 ( .D1(temp_1_0), .C1(temp_1_1), .B1(temp_1_3), 
    .A1(temp_1_2), .D0(temp_1_2), .C0(temp_1_1), .B0(temp_1_3), .A0(temp_1_0), 
    .M1(\DT/n1847 ), .FXB(n20504), .FXA(\DT/n20502 ), .OFX0(n20504), 
    .F1(n20135), .OFX1(\DT/n19966 ));
  DT_i8634_SLICE_597 \DT/i8634/SLICE_597 ( .C1(n1842), .B1(linecode_71), 
    .A1(\DT/n15496 ), .D0(\DT/n20386 ), .C0(n1845), .B0(temp_0_4), .A0(n20160), 
    .M0(\DT/n19941 ), .OFX0(\DT/n20388 ));
  DT_i8707_SLICE_598 \DT/i8707/SLICE_598 ( .D1(temp_1_2), .C1(temp_1_1), 
    .B1(temp_1_3), .A1(temp_1_4), .D0(temp_1_2), .C0(temp_1_1), .B0(temp_1_3), 
    .A0(temp_1_4), .M0(temp_1_0), .OFX0(\DT/n20604 ));
  DT_i8703_SLICE_599 \DT/i8703/SLICE_599 ( .D1(temp_1_2), .C1(temp_1_3), 
    .B1(temp_1_0), .A1(temp_1_4), .D0(temp_1_2), .C0(temp_1_3), .B0(temp_1_0), 
    .A0(temp_1_4), .M0(temp_1_1), .OFX0(\DT/n20598 ));
  DT_i8345_SLICE_600 \DT/i8345/SLICE_600 ( .D1(\DT/din_N_3183 ), 
    .C1(\DT/n19836 ), .B1(\DT/codeP_0 ), .A1(\DT/rck_N_3190 ), 
    .D0(\DT/din_N_3184 ), .C0(\DT/codeP_0 ), .B0(\DT/n20281 ), 
    .A0(\DT/rck_N_3190 ), .M0(\DT/codeP_1 ), .OFX0(\DT/n19981 ));
  DT_mux_749_i1_SLICE_601 \DT/mux_749_i1/SLICE_601 ( .B1(mode_0), .A1(mode_1), 
    .D0(\DT/n1836 ), .C0(\DT/n1835 ), .B0(\DT/n15479 ), .A0(\DT/n19817 ), 
    .M0(\DT/rck_N_3190 ), .OFX0(\DT/din_N_3183 ));
  DT_i7389_SLICE_602 \DT/i7389/SLICE_602 ( .D1(\DT/n20507 ), .C1(\DT/n1838 ), 
    .B1(\DT/n1840 ), .A1(\DT/n1839 ), .D0(\DT/n20388 ), .C0(\DT/n1838 ), 
    .B0(\DT/n1840 ), .A0(\DT/n1839 ), .M0(\DT/codeP_0 ), .OFX0(\DT/n19021 ));
  DT_i127_SLICE_603 \DT/i127/SLICE_603 ( .D1(\DT/n20219 ), .C1(temp_1_4), 
    .B1(n19876), .A1(\DT/n1837 ), .B0(\DT/n20243 ), .A0(\DT/n1837 ), 
    .M0(n1843), .OFX0(\DT/n138_adj_3547 ));
  DT_i8556_SLICE_604 \DT/i8556/SLICE_604 ( .D1(n6), .C1(\DT/n20549 ), 
    .B1(\DT/n20569 ), .A1(\DT/n1841 ), .D0(n1846), .C0(n20561), 
    .B0(linecode_7_N_2688_3), .A0(\DT/n20629 ), .M0(\DT/n19855 ), 
    .OFX0(\DT/n20279 ));
  DT_i4219_SLICE_605 \DT/i4219/SLICE_605 ( .D1(temp_2_2), .C1(temp_2_1), 
    .B1(temp_2_3), .A1(temp_2_0), .C0(n1843), .B0(\DE/n20408 ), 
    .A0(\DE/n20920 ), .M1(\DT/n19941 ), .M0(n1842), .FXB(\DT/n15493 ), 
    .FXA(\DT/n14525 ), .OFX0(\DT/n15493 ), .OFX1(\DT/n15479 ));
  DT_i3279_SLICE_606 \DT/i3279/SLICE_606 ( .C1(n20923), .B1(n1845), 
    .A1(\DE/n20420 ), .D0(temp_2_3), .C0(temp_2_2), .B0(temp_2_1), 
    .A0(temp_2_0), .M0(n19952), .OFX0(\DT/n14525 ));
  DT_i4228_SLICE_607 \DT/i4228/SLICE_607 ( .D1(temp_3_2), .C1(temp_3_1), 
    .B1(temp_3_3), .A1(temp_3_0), .C0(n1843), .B0(\DE/n20422 ), 
    .A0(\DE/n20919 ), .M1(\DT/n19941 ), .M0(n1842), .FXB(\DT/n15503 ), 
    .FXA(\DT/n14543 ), .OFX0(\DT/n15503 ), .OFX1(\DT/n15485 ));
  DT_i3297_SLICE_608 \DT/i3297/SLICE_608 ( .C1(n20926), .B1(n1845), 
    .A1(\DE/n20413 ), .D0(temp_3_3), .C0(temp_3_2), .B0(temp_3_1), 
    .A0(temp_3_0), .M0(n19952), .OFX0(\DT/n14543 ));
  DT_i8831_SLICE_609 \DT/i8831/SLICE_609 ( .D1(temp_3_2), .C1(temp_3_1), 
    .B1(temp_3_3), .A1(temp_3_0), .D0(temp_3_2), .C0(temp_3_1), .B0(temp_3_3), 
    .A0(temp_3_0), .M0(\DT/n1847 ), .OFX0(n20926));
  DT_i8723_SLICE_610 \DT/i8723/SLICE_610 ( .D1(temp_4_2), .C1(temp_4_3), 
    .B1(temp_4_1), .A1(\DT/n1847 ), .D0(temp_4_2), .C0(temp_4_3), 
    .B0(temp_4_1), .A0(\DT/n1847 ), .M0(temp_4_0), .OFX0(\DT/n20629 ));
  DT_i8719_SLICE_611 \DT/i8719/SLICE_611 ( .D1(temp_4_0), .C1(temp_4_2), 
    .B1(temp_4_3), .A1(n1843), .D0(temp_4_0), .C0(temp_4_2), .B0(temp_4_3), 
    .A0(n1843), .M0(temp_4_1), .OFX0(n20623));
  DT_i8829_SLICE_612 \DT/i8829/SLICE_612 ( .D1(temp_2_2), .C1(temp_2_1), 
    .B1(temp_2_3), .A1(temp_2_0), .D0(temp_2_2), .C0(temp_2_1), .B0(temp_2_3), 
    .A0(temp_2_0), .M0(\DT/n1847 ), .OFX0(n20923));
  DT_i8715_SLICE_613 \DT/i8715/SLICE_613 ( .D1(temp_0_2), .C1(temp_0_1), 
    .B1(temp_0_3), .A1(\DT/n1847 ), .D0(temp_0_2), .C0(temp_0_1), 
    .B0(temp_0_3), .A0(\DT/n1847 ), .M0(temp_0_0), .OFX0(\DT/n20617 ));
  DT_i8538_SLICE_614 \DT/i8538/SLICE_614 ( .C1(n20135), .B1(temp_1_4), 
    .A1(n30_adj_3552), .C0(n1845), .B0(\DT/n20598 ), .A0(\DT/n20241 ), 
    .M0(\DT/n1844 ), .OFX0(\DT/n20243 ));
  DE_i8713_SLICE_615 \DE/i8713/SLICE_615 ( .D1(temp_0_2), .C1(temp_0_1), 
    .B1(temp_0_3), .A1(temp_0_4), .D0(temp_0_2), .C0(temp_0_1), .B0(temp_0_3), 
    .A0(temp_0_4), .M0(temp_0_0), .OFX0(linecode_71));
  CB_i5196_SLICE_616 \CB/i5196/SLICE_616 ( .D1(\CB/n5 ), .C1(\CB/n20562 ), 
    .B1(\CB/turn_0 ), .A1(\CB/state_1 ), .D0(\CB/n8 ), .C0(\CB/n4 ), 
    .B0(\CB/n7 ), .A0(\CB/state_1 ), .M0(\CB/state_0 ), .OFX0(\CB/n16469 ));
  CB_i8705_SLICE_617 \CB/i8705/SLICE_617 ( .D1(\CB/us_cnt_10 ), 
    .C1(\CB/us_cnt_8 ), .B1(\CB/us_cnt_2 ), .A1(\CB/us_cnt_5 ), 
    .D0(\CB/us_cnt_10 ), .C0(\CB/us_cnt_8 ), .B0(\CB/us_cnt_2 ), 
    .A0(\CB/us_cnt_5 ), .M0(\CB/us_cnt_9 ), .OFX0(\CB/n20601 ));
  CB_i8546_SLICE_618 \CB/i8546/SLICE_618 ( .D1(\CB/n21 ), .C1(\CB/us_cnt_1 ), 
    .B1(\CB/us_cnt_2 ), .A1(\CB/n20544 ), .B0(\CB/n16921 ), .A0(\CB/n20259 ), 
    .M0(\CB/state_0 ), .OFX0(\CB/n20261 ));
  CB_i8543_SLICE_619 \CB/i8543/SLICE_619 ( .C1(\CB/DQ_N_254 ), .B1(\CB/n21 ), 
    .A1(\CB/state_0 ), .B0(\CB/turn_0 ), .A0(\CB/state_0 ), .M1(\CB/state_1 ), 
    .M0(\CB/n20543 ), .FXB(\CB/n20257 ), .FXA(\CB/n20261 ), .OFX0(\CB/n20257 ), 
    .OFX1(\CB/DQ_N_237 ));
  SLICE_620 SLICE_620( .D1(temp_0_4), .C1(n1843), .B1(\DE/n19868 ), 
    .A1(n30_adj_3555), .D0(temp_0_4), .C0(linecode_69), .B0(\DT/n20412 ), 
    .A0(n1843), .F0(\DT/n15496 ), .F1(linecode_69));
  DE_SLICE_621 \DE/SLICE_621 ( .D1(\DE/n20556 ), .C1(\DE/temp_0_4_N_2865_1 ), 
    .B1(\DE/n20557 ), .A1(n6292), .D0(\DE/n20573 ), .C0(\DE/n20557 ), 
    .B0(\DE/n20547 ), .A0(n6292), .F0(\DE/n20533 ), .F1(\DE/n20547 ));
  CB_SLICE_622 \CB/SLICE_622 ( .D1(\CB/n16469 ), .C1(\CB/state_0 ), 
    .B1(\CB/state_1 ), .A1(\CB/DQ_N_254 ), .D0(\CB/turn_0 ), .C0(\CB/n2895 ), 
    .B0(\CB/state_1 ), .A0(\CB/state_0 ), .F0(\CB/n16680 ), .F1(\CB/n2895 ));
  DT_SLICE_623 \DT/SLICE_623 ( .C1(\DT/n1844 ), .B1(mode_1), .A1(\DT/n20251 ), 
    .D0(mode_1), .C0(mode_0), .B0(n1845), .A0(\DT/n19814 ), .F0(\DT/n20251 ), 
    .F1(\DT/n20252 ));
  CB_SLICE_624 \CB/SLICE_624 ( .D1(\CB/n9_adj_3514 ), .C1(\CB/n20538 ), 
    .B1(\CB/n15374 ), .A1(\CB/state_1 ), .C0(\CB/n2073 ), .B0(\CB/state_1 ), 
    .A0(\CB/state_0 ), .F0(\CB/n20538 ), .F1(\CB/overflow_enable_48 ));
  CB_SLICE_625 \CB/SLICE_625 ( .D1(\CB/n20264 ), .C1(\CB/state_0 ), 
    .B1(\CB/num_1 ), .A1(\CB/state_1 ), .D0(\CB/num_0 ), .C0(\CB/num_1 ), 
    .B0(\CB/num_2 ), .A0(\CB/turn_0 ), .M0(DQ_out), 
    .CE(\CB/overflow_enable_4 ), .CLK(\CB/overflow ), .F0(\CB/n20264 ), 
    .Q0(\CB/read_in ), .F1(\CB/n20505 ));
  SLICE_626 SLICE_626( .D1(\CC/n5 ), .C1(\CC/d2_1 ), .B1(\CC/d2_2 ), 
    .A1(\CC/n14 ), .B0(clk_c_enable_272), .A0(n19748), .M0(kmodstate), 
    .CLK(clk_c), .F0(clk_c_enable_105), .Q0(kmodstate_ls), .F1(n19748));
  SLICE_627 SLICE_627( .D1(temp_0_1), .C1(temp_0_3), .B1(temp_0_0), 
    .A1(temp_0_2), .C0(temp_0_4), .B0(n30_adj_3555), .A0(\DT/n20385 ), 
    .F0(\DT/n20386 ), .F1(n30_adj_3555));
  SLICE_628 SLICE_628( .D1(temp_1_0), .C1(temp_1_3), .B1(temp_1_2), 
    .A1(temp_1_1), .C0(temp_1_4), .B0(n30_adj_3552), .A0(\DT/n20240 ), 
    .F0(\DT/n20241 ), .F1(n30_adj_3552));
  DT_SLICE_629 \DT/SLICE_629 ( .B1(\DT/shift_clock_cnt_14 ), 
    .A1(\DT/shift_clock_cnt_7 ), .D0(\DT/n42 ), .C0(\DT/n54 ), .B0(\DT/n60 ), 
    .A0(\DT/n41 ), .F0(\DT/n20036 ), .F1(\DT/n42 ));
  DT_SLICE_630 \DT/SLICE_630 ( .B1(\DT/shift_clock_cnt_24 ), 
    .A1(\DT/shift_clock_cnt_17 ), .D0(\DT/shift_clock_cnt_4 ), 
    .C0(\DT/shift_clock_cnt_1 ), .B0(\DT/n39 ), .A0(\DT/n51 ), .F0(\DT/n58 ), 
    .F1(\DT/n39 ));
  DT_SLICE_631 \DT/SLICE_631 ( .D1(temp_4_1), .C1(temp_4_2), .B1(temp_4_3), 
    .A1(temp_4_0), .D0(\DT/n1834 ), .C0(n1845), .B0(\DT/n20611 ), 
    .A0(\DT/n20279 ), .F0(\DT/n20281 ), .F1(\DT/n20611 ));
  DT_SLICE_632 \DT/SLICE_632 ( .D1(n1842), .C1(n1843), .B1(\DT/n20250 ), 
    .A1(\DT/n20252 ), .B0(mode_1), .A0(mode_0), .F0(\DT/n20250 ), 
    .F1(\DT/n20507 ));
  DT_SLICE_633 \DT/SLICE_633 ( .B1(\DT/shift_clock_cnt_23 ), 
    .A1(\DT/shift_clock_cnt_15 ), .D0(\DT/shift_clock_cnt_20 ), .C0(\DT/n46 ), 
    .B0(\DT/n56 ), .A0(\DT/shift_clock_cnt_10 ), .F0(\DT/n60 ), .F1(\DT/n46 ));
  DT_SLICE_634 \DT/SLICE_634 ( .B1(\DT/n1840 ), .A1(\DT/n1839 ), 
    .D0(\DT/n1837 ), .C0(\DT/n20570 ), .B0(\DT/n20584 ), .A0(\DT/n1838 ), 
    .F0(\DT/n19817 ), .F1(\DT/n20584 ));
  DT_SLICE_635 \DT/SLICE_635 ( .C1(\DT/rck_N_3190 ), .B1(linecode_16), 
    .A1(\DT/n19819 ), .D0(\DT/n1835 ), .C0(\DT/n1836 ), .B0(\DT/n15485 ), 
    .A0(\DT/n19817 ), .F0(\DT/n19819 ), .F1(\DT/din_N_3184 ));
  DT_SLICE_636 \DT/SLICE_636 ( .D1(\DT/n20563 ), .C1(\DT/n134_adj_3548 ), 
    .B1(\DT/n20569 ), .A1(\DT/n20570 ), .B0(\DT/n1841 ), .A0(\DT/n1834 ), 
    .F0(\DT/n20570 ), .F1(\DT/n19836 ));
  DT_SLICE_637 \DT/SLICE_637 ( .D1(\DT/n20553 ), .C1(\DT/n1837 ), 
    .B1(\DT/rck_N_3190 ), .A1(\DT/n19021 ), .D0(\DT/n1835 ), .C0(\DT/n1836 ), 
    .B0(\DT/n1841 ), .A0(\DT/n1834 ), .F0(\DT/n20553 ), .F1(\DT/n4 ));
  DT_SLICE_638 \DT/SLICE_638 ( .D1(\DT/shift_clock_ls ), .C1(\DT/n1834 ), 
    .B1(rst_c), .A1(sck_c), .D0(\DT/codeP_2 ), .C0(\DT/codeP_1 ), 
    .B0(\DT/codeP_0 ), .A0(\DT/clk_c_enable_132 ), .F0(\DT/n5116 ), 
    .F1(\DT/clk_c_enable_132 ));
  DT_SLICE_639 \DT/SLICE_639 ( .B1(\DT/n1847 ), .A1(n1846), .D0(\DT/n1834 ), 
    .C0(\DT/rck_N_3190 ), .B0(\DT/n19814 ), .A0(\DT/n1848 ), .F0(\DT/n19855 ), 
    .F1(\DT/n19814 ));
  SLICE_640 SLICE_640( .D1(temp_1_2), .C1(temp_1_0), .B1(temp_1_3), 
    .A1(temp_1_1), .C0(n1846), .B0(n15_adj_3553), .A0(\DT/n19966 ), 
    .F0(\DT/n20240 ), .F1(n15_adj_3553));
  SLICE_641 SLICE_641( .D1(temp_0_1), .C1(temp_0_2), .B1(temp_0_3), 
    .A1(temp_0_0), .C0(n1846), .B0(\DT/n20617 ), .A0(n15_adj_3556), 
    .F0(\DT/n20385 ), .F1(n15_adj_3556));
  CF_SLICE_642 \CF/SLICE_642 ( .D1(\CF/n19727 ), .C1(\CF/n19742 ), 
    .B1(\CF/n45_adj_3535 ), .A1(\CF/n21 ), .D0(\CF/n20541 ), 
    .C0(\CF/clk_c_enable_150 ), .B0(\CF/n19778 ), .A0(\CF/n20542 ), 
    .M1(\CF/de_3 ), .M0(\CF/de3 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/clk_c_enable_124 ), .Q0(\CF/DataF_1_31_N_2566_3 ), 
    .F1(\CF/n20542 ), .Q1(\CF/de3 ));
  CF_SLICE_643 \CF/SLICE_643 ( .D1(\CF/da_3 ), .C1(\CF/da_2 ), .B1(\CF/da_1 ), 
    .A1(\CF/da_0 ), .C0(\CF/n45_adj_3535 ), .B0(\CF/clk_c_enable_150 ), 
    .A0(\CF/n14 ), .M1(\CF/de_2 ), .M0(\CF/de2 ), .CE(\CF/clk_c_enable_150 ), 
    .CLK(clk_c), .F0(\CF/clk_c_enable_111 ), .Q0(\CF/DataF_1_31_N_2566_2 ), 
    .F1(\CF/n14 ), .Q1(\CF/de2 ));
  CF_SLICE_644 \CF/SLICE_644 ( .D1(\CF/n19727 ), .C1(\CF/clk_c_enable_150 ), 
    .B1(\CF/n45_adj_3535 ), .A1(\CF/n21 ), .D0(\CF/dc_3 ), .C0(\CF/dc_1 ), 
    .B0(\CF/dc_2 ), .A0(\CF/dc_0 ), .M1(\CF/dg_1 ), .M0(\CF/dg1 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/n21 ), 
    .Q0(\CF/DataF_3_31_N_2502_1 ), .F1(\CF/n5106 ), .Q1(\CF/dg1 ));
  CF_SLICE_645 \CF/SLICE_645 ( .C1(\CF/n19727 ), .B1(\CF/n21 ), 
    .A1(\CF/n19750 ), .D0(\CF/n19778 ), .C0(\CF/clk_c_enable_150 ), 
    .B0(\CF/n19742 ), .A0(\CF/n20545 ), .M1(\CF/dd_2 ), .M0(\CF/dd2 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/clk_c_enable_127 ), 
    .Q0(\CF/DataF_0_31_N_2598_2 ), .F1(\CF/n20545 ), .Q1(\CF/dd2 ));
  CF_SLICE_646 \CF/SLICE_646 ( .C1(\CF/n19727 ), .B1(\CF/n45_adj_3535 ), 
    .A1(\CF/n21 ), .D0(\CF/n20545 ), .C0(\CF/clk_c_enable_150 ), 
    .B0(\CF/n19742 ), .A0(\CF/n20546 ), .M1(\CF/df_0 ), .M0(\CF/df0 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/clk_c_enable_121 ), 
    .Q0(\CF/DataF_2_31_N_2534_0 ), .F1(\CF/n20546 ), .Q1(\CF/df0 ));
  CF_SLICE_647 \CF/SLICE_647 ( .D1(\CF/df_2 ), .C1(\CF/df_1 ), .B1(\CF/df_0 ), 
    .A1(\CF/df_3 ), .D0(\CF/n19778 ), .C0(\CF/clk_c_enable_150 ), 
    .B0(\CF/n19742 ), .A0(\CF/n20546 ), .M1(\CF/dd_0 ), .M0(\CF/dd0 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/n5110 ), 
    .Q0(\CF/DataF_0_31_N_2598_0 ), .F1(\CF/n19778 ), .Q1(\CF/dd0 ));
  CF_SLICE_648 \CF/SLICE_648 ( .D1(\CF/n19843 ), .C1(\CF/dg_3 ), 
    .B1(\CF/dg_0 ), .A1(\CF/n20535 ), .D0(\CF/n19742 ), .C0(\CF/n19778 ), 
    .B0(\CF/n19727 ), .A0(\CF/n20551 ), .M1(\CF/dd_3 ), .M0(\CF/dd3 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/n20535 ), 
    .Q0(\CF/DataF_0_31_N_2598_3 ), .F1(\CF/n493 ), .Q1(\CF/dd3 ));
  CF_SLICE_649 \CF/SLICE_649 ( .B1(\CF/n45_adj_3535 ), .A1(\CF/n21 ), 
    .D0(\CF/n20551 ), .C0(\CF/clk_c_enable_150 ), .B0(\CF/n20552 ), 
    .A0(\CF/n19727 ), .M1(\CF/df_1 ), .M0(\CF/df1 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/clk_c_enable_118 ), 
    .Q0(\CF/DataF_2_31_N_2534_1 ), .F1(\CF/n20552 ), .Q1(\CF/df1 ));
  CF_SLICE_650 \CF/SLICE_650 ( .D1(\CF/de_2 ), .C1(\CF/de_1 ), .B1(\CF/de_0 ), 
    .A1(\CF/de_3 ), .D0(\CF/n19742 ), .C0(\CF/clk_c_enable_150 ), 
    .B0(\CF/n20552 ), .A0(\CF/n19727 ), .M1(\CF/dd_1 ), .M0(\CF/dd1 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/n5108 ), 
    .Q0(\CF/DataF_0_31_N_2598_1 ), .F1(\CF/n19742 ), .Q1(\CF/dd1 ));
  CF_SLICE_651 \CF/SLICE_651 ( .D1(\CF/n19727 ), .C1(\CF/n19742 ), 
    .B1(\CF/n21 ), .A1(\CF/n19750 ), .D0(\CF/dd_1 ), .C0(\CF/dd_0 ), 
    .B0(\CF/dd_2 ), .A0(\CF/dd_3 ), .M1(\CF/df_3 ), .M0(\CF/df3 ), 
    .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/n19727 ), 
    .Q0(\CF/DataF_2_31_N_2534_3 ), .F1(\CF/n20541 ), .Q1(\CF/df3 ));
  CF_SLICE_652 \CF/SLICE_652 ( .C1(\CF/dh_3 ), .B1(\CF/dh_2 ), .A1(\CF/dh_1 ), 
    .D0(\CF/dh_0 ), .C0(\CF/n8 ), .B0(\CF/clk_c_enable_150 ), .A0(\CF/n493 ), 
    .M1(\CF/dg_0 ), .M0(\CF/dg0 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/n2252 ), .Q0(\CF/DataF_3_31_N_2502_0 ), .F1(\CF/n8 ), 
    .Q1(\CF/dg0 ));
  DE_SLICE_653 \DE/SLICE_653 ( .B1(\DE/temp_2__4__N_3061 ), .A1(n6561), 
    .D0(\DE/n20523 ), .C0(n6560), .B0(n6559), .A0(n6558), 
    .F0(\DE/temp_4_2_N_2768_0 ), .F1(\DE/n20523 ));
  DE_SLICE_654 \DE/SLICE_654 ( .D1(n6484), .C1(n6485), .B1(\DE/n20534 ), 
    .A1(n6483), .D0(n6486), .C0(\DE/n20557 ), .B0(\DE/n20547 ), .A0(n6292), 
    .F0(\DE/n20534 ), .F1(\DE/n20530 ));
  DE_SLICE_655 \DE/SLICE_655 ( .C1(n6293), .B1(n6295), .A1(n6294), .D0(n6484), 
    .C0(\DE/n20557 ), .B0(\DE/n20547 ), .A0(n6292), .F0(\DE/n4 ), 
    .F1(\DE/n20557 ));
  DE_SLICE_656 \DE/SLICE_656 ( .D1(n6409), .C1(\DE/n20527 ), .B1(n6410), 
    .A1(n6408), .B0(\DE/n20530 ), .A0(en_N_3200_0), .F0(\DE/n20527 ), 
    .F1(\DE/temp_2__4__N_3061 ));
  DE_SLICE_657 \DE/SLICE_657 ( .D1(\DE/n20556 ), .C1(\DE/temp_0_4_N_2865_1 ), 
    .B1(\DE/n20557 ), .A1(n6292), .D0(\DE/n20539 ), .C0(n6484), .B0(n6485), 
    .A0(n6486), .F0(\DE/n4_adj_3524 ), .F1(\DE/n20539 ));
  DE_SLICE_658 \DE/SLICE_658 ( .D1(temp_4_2), .C1(temp_4_1), .B1(temp_4_3), 
    .A1(temp_4_0), .D0(n20623), .C0(\DE/linecode_7_N_2688_7 ), .B0(n1842), 
    .A0(n20561), .F0(n6), .F1(\DE/linecode_7_N_2688_7 ));
  CB_SLICE_659 \CB/SLICE_659 ( .B1(\CB/state_1 ), .A1(\CB/state_0 ), 
    .D0(\CB/n20550 ), .C0(\CB/overflow_enable_36 ), .B0(\CB/n15316 ), 
    .A0(\CB/turn_0 ), .F0(\CB/overflow_enable_50 ), 
    .F1(\CB/overflow_enable_36 ));
  CB_SLICE_660 \CB/SLICE_660 ( .D1(\CB/n15316 ), .C1(\CB/turn_0 ), 
    .B1(\CB/n20562 ), .A1(\CB/n5 ), .D0(\CB/n14515 ), .C0(\CB/n2073 ), 
    .B0(\CB/state_1 ), .A0(\CB/state_0 ), .F0(\CB/overflow_enable_2 ), 
    .F1(\CB/n14515 ));
  CB_SLICE_661 \CB/SLICE_661 ( .B1(\CB/us_cnt_8 ), .A1(\CB/us_cnt_10 ), 
    .D0(\CB/n19799 ), .C0(\CB/n19775 ), .B0(\CB/n20591 ), .A0(\CB/n16921 ), 
    .F0(\CB/n2073 ), .F1(\CB/n20591 ));
  CB_SLICE_662 \CB/SLICE_662 ( .B1(\CB/us_cnt_6 ), .A1(\CB/n16921 ), 
    .D0(\CB/us_cnt_8 ), .C0(\CB/us_cnt_9 ), .B0(\CB/us_cnt_10 ), 
    .A0(\CB/n16914 ), .F0(\CB/n16921 ), .F1(\CB/n7 ));
  CB_SLICE_663 \CB/SLICE_663 ( .C1(\CB/us_cnt_2 ), .B1(\CB/us_cnt_4 ), 
    .A1(\CB/us_cnt_3 ), .D0(\CB/n19775 ), .C0(\CB/us_cnt_6 ), 
    .B0(\CB/us_cnt_5 ), .A0(\CB/us_cnt_7 ), .F0(\CB/n16914 ), .F1(\CB/n19775 ));
  CB_SLICE_664 \CB/SLICE_664 ( .C1(\CB/n19717 ), .B1(\CB/us_cnt_0 ), 
    .A1(\CB/us_cnt_1 ), .D0(\CB/us_cnt_6 ), .C0(\CB/us_cnt_2 ), 
    .B0(\CB/us_cnt_10 ), .A0(\CB/n6 ), .F0(\CB/n20259 ), .F1(\CB/n6 ));
  CB_SLICE_665 \CB/SLICE_665 ( .D1(\CB/turn_0 ), .C1(\CB/n20529 ), 
    .B1(\CB/n5 ), .A1(\CB/n20571 ), .B0(\CB/num_3 ), .A0(\CB/num_2 ), 
    .M0(\CB/read_in ), .CE(\CB/overflow_enable_11 ), .CLK(\CB/overflow ), 
    .F0(\CB/n20571 ), .Q0(sample_7), .F1(\CB/overflow_enable_49 ));
  CB_SLICE_666 \CB/SLICE_666 ( .D1(\CB/s_devide_10 ), .C1(\CB/s_devide_13 ), 
    .B1(\CB/s_devide_8 ), .A1(\CB/s_devide_3 ), .D0(\CB/n22 ), 
    .C0(\CB/n21_adj_3509 ), .B0(\CB/s_devide_18 ), .A0(\CB/n23 ), .F0(\CB/n9 ), 
    .F1(\CB/n22 ));
  CB_SLICE_667 \CB/SLICE_667 ( .D1(\CB/overflow_enable_36 ), .C1(\CB/n21 ), 
    .B1(\CB/n20543 ), .A1(\CB/n18861 ), .C0(\CB/us_cnt_1 ), .B0(\CB/us_cnt_2 ), 
    .A0(\CB/n20544 ), .F0(\CB/n20543 ), .F1(\CB/n20529 ));
  CB_SLICE_668 \CB/SLICE_668 ( .B1(\CB/s_devide_7 ), .A1(\CB/s_devide_12 ), 
    .D0(\CB/n14 ), .C0(\CB/s_devide_1 ), .B0(\CB/s_devide_5 ), 
    .A0(\CB/s_devide_15 ), .M0(\CB/read_in ), .CE(\CB/overflow_enable_49 ), 
    .CLK(\CB/overflow ), .F0(\CB/n23 ), .Q0(sample_0), .F1(\CB/n14 ));
  CB_SLICE_669 \CB/SLICE_669 ( .D1(\CB/n20532 ), .C1(\CB/turn_0 ), 
    .B1(\CB/n20562 ), .A1(\CB/n5 ), .C0(\CB/num_4 ), .B0(\CB/num_3 ), 
    .A0(\CB/num_2 ), .M0(\CB/read_in ), .CE(\CB/overflow_enable_10 ), 
    .CLK(\CB/overflow ), .F0(\CB/n20562 ), .Q0(sample_6), .F1(\CB/n20531 ));
  CB_SLICE_670 \CB/SLICE_670 ( .B1(\CB/num_1 ), .A1(\CB/num_0 ), 
    .D0(\CB/n20571 ), .C0(\CB/n20572 ), .B0(\CB/n20529 ), .A0(\CB/turn_0 ), 
    .F0(\CB/overflow_enable_5 ), .F1(\CB/n20572 ));
  CB_SLICE_671 \CB/SLICE_671 ( .B1(\CB/num_1 ), .A1(\CB/num_0 ), 
    .D0(\CB/n20571 ), .C0(\CB/n5_adj_3510 ), .B0(\CB/n20529 ), 
    .A0(\CB/turn_0 ), .F0(\CB/overflow_enable_9 ), .F1(\CB/n5_adj_3510 ));
  CB_SLICE_672 \CB/SLICE_672 ( .B1(\CB/num_1 ), .A1(\CB/num_0 ), 
    .D0(\CB/n20571 ), .C0(\CB/n5_adj_3511 ), .B0(\CB/n20529 ), 
    .A0(\CB/turn_0 ), .F0(\CB/overflow_enable_1 ), .F1(\CB/n5_adj_3511 ));
  CB_SLICE_673 \CB/SLICE_673 ( .B1(\CB/num_2 ), .A1(\CB/num_3 ), .D0(\CB/n79 ), 
    .C0(\CB/n5_adj_3510 ), .B0(\CB/n20529 ), .A0(\CB/turn_0 ), 
    .M0(\CB/read_in ), .CE(\CB/overflow_enable_39 ), .CLK(\CB/overflow ), 
    .F0(\CB/overflow_enable_38 ), .Q0(sample_10), .F1(\CB/n79 ));
  CB_SLICE_674 \CB/SLICE_674 ( .D1(\CB/state_0 ), .C1(\CB/n20550 ), 
    .B1(\CB/turn_0 ), .A1(\CB/n20532 ), .D0(\CB/num_4 ), .C0(\CB/n5 ), 
    .B0(\CB/num_3 ), .A0(\CB/num_2 ), .F0(\CB/n20550 ), .F1(\CB/n9_adj_3514 ));
  CB_SLICE_675 \CB/SLICE_675 ( .B1(\CB/num_1 ), .A1(\CB/num_0 ), .D0(\CB/n5 ), 
    .C0(\CB/n79 ), .B0(\CB/n20529 ), .A0(\CB/turn_0 ), .M0(\CB/read_in ), 
    .CE(\CB/overflow_enable_5 ), .CLK(\CB/overflow ), 
    .F0(\CB/overflow_enable_37 ), .Q0(sample_3), .F1(\CB/n5 ));
  CB_SLICE_676 \CB/SLICE_676 ( .D1(\CB/n21_adj_3516 ), .C1(\CB/us_cnt_6 ), 
    .B1(\CB/us_cnt_4 ), .A1(\CB/n26_adj_3512 ), .D0(\CB/n20543 ), 
    .C0(\CB/overflow_enable_36 ), .B0(\CB/turn_0 ), .A0(\CB/n18861 ), 
    .F0(\CB/overflow_enable_4 ), .F1(\CB/n18861 ));
  CB_SLICE_677 \CB/SLICE_677 ( .D1(\CB/n4_adj_3518 ), .C1(\CB/us_cnt_7 ), 
    .B1(\CB/us_cnt_10 ), .A1(\CB/us_cnt_5 ), .B0(\CB/n26_adj_3512 ), 
    .A0(\CB/us_cnt_3 ), .F0(\CB/n20548 ), .F1(\CB/n26_adj_3512 ));
  CB_SLICE_678 \CB/SLICE_678 ( .B1(\CB/us_cnt_6 ), .A1(\CB/us_cnt_2 ), 
    .D0(\CB/n6_adj_3513 ), .C0(\CB/us_cnt_0 ), .B0(\CB/n16921 ), 
    .A0(\CB/n15449 ), .F0(\CB/n19718 ), .F1(\CB/n15449 ));
  CB_SLICE_679 \CB/SLICE_679 ( .D1(\CB/n4_adj_3517 ), .C1(\CB/us_cnt_5 ), 
    .B1(\CB/n20579 ), .A1(\CB/us_cnt_8 ), .B0(\CB/n19717 ), .A0(\CB/us_cnt_1 ), 
    .M0(\CB/read_in ), .CE(\CB/overflow_enable_9 ), .CLK(\CB/overflow ), 
    .F0(\CB/n6_adj_3513 ), .Q0(sample_1), .F1(\CB/n19717 ));
  CB_SLICE_680 \CB/SLICE_680 ( .B1(\CB/num_2 ), .A1(\CB/num_3 ), 
    .D0(\CB/n5_adj_3511 ), .C0(\CB/n20587 ), .B0(\CB/turn_0 ), 
    .A0(\CB/n20529 ), .F0(\CB/overflow_enable_10 ), .F1(\CB/n20587 ));
  CB_SLICE_681 \CB/SLICE_681 ( .D1(\CB/n20579 ), .C1(\CB/n19799 ), 
    .B1(\CB/n20591 ), .A1(\CB/us_cnt_2 ), .B0(\CB/us_cnt_4 ), 
    .A0(\CB/us_cnt_3 ), .M0(\CB/read_in ), .CE(\CB/overflow_enable_37 ), 
    .CLK(\CB/overflow ), .F0(\CB/n20579 ), .Q0(sample_8), .F1(\CB/n19800 ));
  CB_SLICE_682 \CB/SLICE_682 ( .D1(\CB/us_cnt_1 ), .C1(\CB/us_cnt_0 ), 
    .B1(\CB/n12 ), .A1(\CB/n19912 ), .D0(\CB/n2083 ), .C0(\CB/state_0 ), 
    .B0(\CB/state_1 ), .A0(\CB/DQ_N_254 ), .M0(\CB/read_in ), 
    .CE(\CB/overflow_enable_6 ), .CLK(\CB/overflow ), .F0(\CB/n15374 ), 
    .Q0(sample_4), .F1(\CB/n2083 ));
  CB_SLICE_683 \CB/SLICE_683 ( .D1(\CB/n19902 ), .C1(\CB/n19840 ), 
    .B1(\CB/n29_adj_3515 ), .A1(\CB/n15374 ), .D0(\CB/n2083 ), 
    .C0(\CB/state_0 ), .B0(\CB/state_1 ), .A0(\CB/DQ_N_254 ), .F0(\CB/n19902 ), 
    .F1(\CB/n15867 ));
  CB_SLICE_684 \CB/SLICE_684 ( .D1(\CB/n20548 ), .C1(\CB/n15449 ), 
    .B1(\CB/n20582 ), .A1(\CB/us_cnt_4 ), .D0(\CB/n19723 ), .C0(\CB/n20579 ), 
    .B0(\CB/us_cnt_7 ), .A0(\CB/n21 ), .F0(\CB/n12 ), .F1(\CB/n21 ));
  CB_SLICE_685 \CB/SLICE_685 ( .D1(\CB/n19723 ), .C1(\CB/us_cnt_7 ), 
    .B1(\CB/us_cnt_0 ), .A1(\CB/us_cnt_1 ), .C0(\CB/us_cnt_5 ), 
    .B0(\CB/us_cnt_6 ), .A0(\CB/us_cnt_9 ), .F0(\CB/n19723 ), .F1(\CB/n19799 ));
  CB_SLICE_686 \CB/SLICE_686 ( .C1(\CB/n21 ), .B1(\CB/n20543 ), 
    .A1(\CB/n18861 ), .D0(\CB/overflow_enable_36 ), .C0(\CB/n20550 ), 
    .B0(\CB/turn_0 ), .A0(\CB/n20532 ), .F0(\CB/n19840 ), .F1(\CB/n20532 ));
  BC_SLICE_687 \BC/SLICE_687 ( .D1(\BC/div_clk_cnt_0 ), 
    .C1(\BC/div_clk_cnt_18 ), .B1(\BC/div_clk_cnt_8 ), 
    .A1(\BC/div_clk_cnt_28 ), .D0(\BC/div_clk_cnt_31 ), .C0(\BC/n46_adj_3505 ), 
    .B0(\BC/n54_adj_3504 ), .A0(\BC/div_clk_cnt_3 ), .F0(\BC/n57 ), 
    .F1(\BC/n46_adj_3505 ));
  BC_SLICE_688 \BC/SLICE_688 ( .B1(\BC/div_clk_cnt_30 ), 
    .A1(\BC/div_clk_cnt_27 ), .D0(\BC/n38 ), .C0(\BC/n50_adj_3506 ), 
    .B0(\BC/n56 ), .A0(\BC/n37 ), .F0(\BC/n58 ), .F1(\BC/n38 ));
  BC_SLICE_689 \BC/SLICE_689 ( .B1(\BC/div_clk_cnt_26 ), 
    .A1(\BC/div_clk_cnt_25 ), .D0(\BC/div_clk_cnt_21 ), .C0(\BC/n34 ), 
    .B0(\BC/n48_adj_3507 ), .A0(\BC/div_clk_cnt_11 ), .F0(\BC/n54_adj_3504 ), 
    .F1(\BC/n34 ));
  BC_SLICE_690 \BC/SLICE_690 ( .B1(\BC/div_clk_cnt_20 ), 
    .A1(\BC/div_clk_cnt_10 ), .D0(\BC/div_clk_cnt_6 ), .C0(\BC/n42 ), 
    .B0(\BC/n52_adj_3508 ), .A0(\BC/div_clk_cnt_5 ), .F0(\BC/n56 ), 
    .F1(\BC/n42 ));
  SLICE_691 SLICE_691( .D1(\MC/MK/keysampulsecnt_21 ), .C1(\MC/MK/n32 ), 
    .B1(\MC/MK/n42 ), .A1(\MC/MK/keysampulsecnt_23 ), 
    .D0(\MC/MK/keysampulsecnt_4 ), .C0(\MC/MK/keysampulsecnt_9 ), 
    .B0(\MC/MK/keysampulsecnt_18 ), .A0(\MC/MK/keysampulsecnt_5 ), 
    .M1(\DT/n1838 ), .M0(\DT/n1839 ), .CE(\DT/clk_c_enable_95 ), 
    .LSR(\DT/n15597 ), .CLK(clk_c), .F0(\MC/MK/n42 ), .Q0(\DT/n1838 ), 
    .F1(\MC/MK/n46 ), .Q1(\DT/n1837 ));
  SLICE_692 SLICE_692( .D1(\MC/MK/keysampulsecnt_2 ), .C1(\MC/MK/n38 ), 
    .B1(\MC/MK/keysampulsecnt_3 ), .A1(\MC/MK/n43 ), 
    .D0(\MC/MK/keysampulsecnt_22 ), .C0(\MC/MK/keysampulsecnt_13 ), 
    .B0(\MC/MK/keysampulsecnt_19 ), .A0(\MC/MK/keysampulsecnt_8 ), 
    .M1(\DT/n1836 ), .M0(\DT/n1837 ), .CE(\DT/clk_c_enable_95 ), 
    .LSR(\DT/n15597 ), .CLK(clk_c), .F0(\MC/MK/n43 ), .Q0(\DT/n1836 ), 
    .F1(\MC/MK/n47 ), .Q1(\DT/n1835 ));
  SLICE_693 SLICE_693( .D1(\MC/MK/keysampulsecnt_27 ), .C1(\MC/MK/n28 ), 
    .B1(\MC/MK/n40 ), .A1(\MC/MK/keysampulsecnt_31 ), 
    .D0(\MC/MK/keysampulsecnt_0 ), .C0(\MC/MK/keysampulsecnt_20 ), 
    .B0(\MC/MK/keysampulsecnt_24 ), .A0(\MC/MK/keysampulsecnt_17 ), 
    .M1(\DT/n1840 ), .M0(\DT/rck_N_3190 ), .CE(\DT/clk_c_enable_95 ), 
    .LSR(\DT/n15597 ), .CLK(clk_c), .F0(\MC/MK/n40 ), .Q0(\DT/n1848 ), 
    .F1(\MC/MK/n45 ), .Q1(\DT/n1839 ));
  CC_SLICE_694 \CC/SLICE_694 ( .B1(clk_c_enable_272), .A1(\CC/n14 ), 
    .D0(\CC/d1_3 ), .C0(\CC/d1_1 ), .B0(\CC/d1_2 ), .A0(\CC/d1_0 ), 
    .M1(\CC/db_3 ), .M0(\CC/db_2 ), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .F0(\CC/n14 ), .Q0(\CC/db2 ), .F1(\CC/n2160 ), .Q1(\CC/db3 ));
  CC_SLICE_695 \CC/SLICE_695 ( .D1(\CC/n6_adj_3495 ), .C1(\CC/d3_2 ), 
    .B1(\CC/d3_1 ), .A1(d3_0), .B0(clk_c_enable_272), .A0(\CC/n1959 ), 
    .M1(\CC/da_3 ), .M0(\CC/da_2 ), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .F0(\CC/clk_c_enable_108 ), .Q0(\CC/da2 ), .F1(\CC/n1959 ), .Q1(\CC/da3 ));
  CC_SLICE_696 \CC/SLICE_696 ( .D1(\CC/db_1 ), .C1(\CC/n6_adj_3487 ), 
    .B1(\CC/clk_c_enable_237 ), .A1(\CC/n14_adj_3483 ), .D0(\CC/da_3 ), 
    .C0(\CC/da_2 ), .B0(\CC/da_1 ), .A0(\CC/da_0 ), .M1(tempC_1_1), 
    .M0(tempC_1_0), .CE(clk_c_enable_272), .CLK(clk_c), .F0(\CC/n14_adj_3483 ), 
    .Q0(n6295), .F1(\CC/n2141 ), .Q1(n6294));
  CC_SLICE_697 \CC/SLICE_697 ( .D1(\CC/d1_0 ), .C1(\CC/d1_2 ), .B1(\CC/d1_3 ), 
    .A1(\CC/d1_1 ), .B0(\CC/n19730 ), .A0(clk_c_enable_272), .M1(\CC/db1 ), 
    .M0(\CC/db0 ), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .F0(\CC/clk_c_enable_275 ), .Q0(tempC_4_0), .F1(\CC/n19730 ), 
    .Q1(tempC_4_1));
  CC_SLICE_698 \CC/SLICE_698 ( .B1(\CC/d2_0 ), .A1(\CC/d2_3 ), 
    .D0(\CC/n19888 ), .C0(\CC/n19730 ), .B0(\CC/n5 ), .A0(clk_c_enable_272), 
    .M1(\CC/da_1 ), .M0(\CC/da_0 ), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), 
    .F0(\CC/n5096 ), .Q0(\CC/da0 ), .F1(\CC/n5 ), .Q1(\CC/da1 ));
  CC_SLICE_699 \CC/SLICE_699 ( .D1(\CC/n1959 ), .C1(\CC/n6 ), 
    .B1(clk_c_enable_272), .A1(\CC/d4_3 ), .C0(\CC/d4_1 ), .B0(\CC/d4_2 ), 
    .A0(\CC/d4_0 ), .M1(\CC/db_1 ), .M0(\CC/db_0 ), .CE(\CC/clk_c_enable_237 ), 
    .CLK(clk_c), .F0(\CC/n6 ), .Q0(\CC/db0 ), .F1(\CC/n2168 ), .Q1(\CC/db1 ));
  SLICE_700 SLICE_700( .D1(temp_0_2), .C1(temp_0_0), .B1(temp_0_3), 
    .A1(temp_0_1), .D0(temp_0_2), .C0(temp_0_0), .B0(temp_0_3), .A0(temp_0_1), 
    .M0(\DT/n1834 ), .CE(\DT/clk_c_enable_95 ), .CLK(clk_c), .F0(\DT/n20412 ), 
    .Q0(\DT/rck_N_3190 ), .F1(n20160));
  CF_SLICE_701 \CF/SLICE_701 ( .D1(tempC_3_3), .C1(tempC_3_1), .B1(tempC_3_2), 
    .A1(tempC_3_0), .D0(tempC_3_3), .C0(tempC_3_1), .B0(tempC_3_2), 
    .A0(tempC_3_0), .M1(\CF/dg_2 ), .M0(\CF/dg2 ), .CE(\CF/clk_c_enable_150 ), 
    .CLK(clk_c), .F0(\CF/n20555 ), .Q0(\CF/DataF_3_31_N_2502_2 ), 
    .F1(\CF/n18277 ), .Q1(\CF/dg2 ));
  CF_SLICE_702 \CF/SLICE_702 ( .D1(tempC_0_3), .C1(tempC_0_1), .B1(tempC_0_2), 
    .A1(tempC_0_0), .D0(tempC_0_3), .C0(tempC_0_1), .B0(tempC_0_2), 
    .A0(tempC_0_0), .M1(\CF/dh_0 ), .M0(\CF/dh0 ), .CE(\CF/clk_c_enable_150 ), 
    .CLK(clk_c), .F0(\CF/n20566 ), .Q0(\CF/DataF_4_31_N_2470_0 ), 
    .F1(\CF/n18307 ), .Q1(\CF/dh0 ));
  DE_SLICE_703 \DE/SLICE_703 ( .D1(temp_2_3), .C1(temp_2_1), .B1(temp_2_0), 
    .A1(temp_2_2), .D0(temp_2_1), .C0(temp_2_0), .B0(temp_2_3), .A0(temp_2_2), 
    .F0(\DE/n20408 ), .F1(\DE/n20920 ));
  DE_SLICE_704 \DE/SLICE_704 ( .D1(temp_3_2), .C1(temp_3_3), .B1(temp_3_0), 
    .A1(temp_3_1), .D0(temp_3_0), .C0(temp_3_2), .B0(temp_3_3), .A0(temp_3_1), 
    .F0(\DE/n20919 ), .F1(\DE/n20422 ));
  DE_SLICE_705 \DE/SLICE_705 ( .D1(n6409), .C1(en_N_3200_0), .B1(n6410), 
    .A1(\DE/n20530 ), .D0(n6410), .C0(n6409), .B0(\DE/n20530 ), 
    .A0(en_N_3200_0), .F0(\DE/n20522 ), .F1(\DE/n20525 ));
  DE_SLICE_706 \DE/SLICE_706 ( .D1(temp_4_3), .C1(temp_4_1), .B1(temp_4_2), 
    .A1(temp_4_0), .D0(temp_4_1), .C0(temp_4_2), .B0(temp_4_3), .A0(temp_4_0), 
    .F0(linecode_7_N_2688_3), .F1(n20561));
  DE_SLICE_707 \DE/SLICE_707 ( .D1(n6485), .C1(n6484), .B1(n6486), 
    .A1(\DE/n20539 ), .D0(n6485), .C0(n6484), .B0(n6486), .A0(\DE/n20539 ), 
    .F0(\DE/temp_1_4_N_2930_2 ), .F1(\DE/n5692 ));
  CB_SLICE_708 \CB/SLICE_708 ( .D1(\CB/us_devide_1 ), .C1(\CB/us_devide_3 ), 
    .B1(\CB/us_devide_2 ), .A1(\CB/us_devide_0 ), .D0(\CB/us_devide_3 ), 
    .C0(\CB/us_devide_1 ), .B0(\CB/us_devide_2 ), .A0(\CB/us_devide_0 ), 
    .F0(\CB/n18933 ), .F1(\CB/clk_c_enable_152 ));
  MC_SLICE_709 \MC/SLICE_709 ( .D1(n6558), .C1(n6560), .B1(n6559), .A1(n6561), 
    .D0(n6558), .C0(n6560), .B0(n6559), .A0(n6561), .F0(\MC/n20567 ), 
    .F1(\MC/n18371 ));
  DT_SLICE_710 \DT/SLICE_710 ( .D1(\DT/n1838 ), .C1(\DT/n1837 ), 
    .B1(\DT/n1840 ), .A1(\DT/n1839 ), .C0(\DT/n1838 ), .B0(\DT/n1840 ), 
    .A0(\DT/n1839 ), .F0(\DT/n20563 ), .F1(\DT/n20549 ));
  CF_SLICE_711 \CF/SLICE_711 ( .D1(tempC_4_3), .C1(tempC_4_0), .B1(tempC_4_2), 
    .A1(tempC_4_1), .C0(tempC_4_0), .B0(tempC_4_2), .A0(tempC_4_1), 
    .M1(\CF/de_0 ), .M0(\CF/de0 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/n20581 ), .Q0(\CF/DataF_1_31_N_2566_0 ), .F1(\CF/n6 ), 
    .Q1(\CF/de0 ));
  CF_SLICE_712 \CF/SLICE_712 ( .C1(\CF/clk_c_enable_150 ), 
    .B1(\CF/n45_adj_3535 ), .A1(\CF/n21 ), .D0(\CF/n19750 ), 
    .C0(\CF/clk_c_enable_150 ), .B0(\CF/n45_adj_3535 ), .A0(\CF/n21 ), 
    .M1(\CF/df_2 ), .M0(\CF/df2 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/clk_c_enable_114 ), .Q0(\CF/DataF_2_31_N_2534_2 ), .F1(\CF/n5104 ), 
    .Q1(\CF/df2 ));
  CF_SLICE_713 \CF/SLICE_713 ( .D1(tempC_1_3), .C1(tempC_1_0), .B1(tempC_1_2), 
    .A1(tempC_1_1), .C0(tempC_1_0), .B0(tempC_1_2), .A0(tempC_1_1), 
    .M1(\CF/de_1 ), .M0(\CF/de1 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), 
    .F0(\CF/n20586 ), .Q0(\CF/DataF_1_31_N_2566_1 ), .F1(\CF/n6_adj_3536 ), 
    .Q1(\CF/de1 ));
  DE_SLICE_714 \DE/SLICE_714 ( .C1(n6560), .B1(\DE/temp_2__4__N_3061 ), 
    .A1(n6561), .C0(n6561), .B0(n6560), .A0(\DE/temp_2__4__N_3061 ), 
    .F0(\DE/n20524 ), .F1(\DE/n20520 ));
  DE_SLICE_715 \DE/SLICE_715 ( .C1(en_N_3200_0), .B1(n6410), .A1(\DE/n20530 ), 
    .C0(n6410), .B0(\DE/n20530 ), .A0(en_N_3200_0), .F0(\DE/n20526 ), 
    .F1(\DE/n20528 ));
  DE_SLICE_716 \DE/SLICE_716 ( .C1(n6293), .B1(n6295), .A1(n6294), .C0(n6293), 
    .B0(n6295), .A0(n6294), .F0(\DE/n20554 ), .F1(\DE/n20556 ));
  CB_SLICE_717 \CB/SLICE_717 ( .D1(\CB/turn_0 ), .C1(\CB/n20529 ), 
    .B1(\CB/n5 ), .A1(\CB/n20587 ), .D0(\CB/n20572 ), .C0(\CB/n20587 ), 
    .B0(\CB/turn_0 ), .A0(\CB/n20529 ), .F0(\CB/overflow_enable_11 ), 
    .F1(\CB/overflow_enable_6 ));
  DT_SLICE_718 \DT/SLICE_718 ( .B1(\DT/shift_clock_ls ), .A1(sck_c), 
    .B0(\DT/shift_clock_ls ), .A0(sck_c), .F0(\DT/clk_c_enable_95 ), 
    .F1(\DT/din_N_3186 ));
  CF_SLICE_719 \CF/SLICE_719 ( .B1(tempC_4_0), .A1(tempC_4_1), .B0(tempC_4_1), 
    .A0(tempC_4_0), .M1(\CF/dh_2 ), .M0(\CF/dh2 ), .CE(\CF/clk_c_enable_150 ), 
    .CLK(clk_c), .F0(\CF/n12368 ), .Q0(\CF/DataF_4_31_N_2470_2 ), 
    .F1(\CF/n18239 ), .Q1(\CF/dh2 ));
  DE_SLICE_720 \DE/SLICE_720 ( .B1(mode_0), .A1(mode_1), .B0(mode_0), 
    .A0(mode_1), .F0(\DE/temp_4__2__N_2772 ), .F1(\DE/temp_4__31__N_2727 ));
  SLICE_721 SLICE_721( .B1(n6558), .A1(n6560), .D0(n6560), .C0(n6561), 
    .B0(\DE/temp_2__4__N_3061 ), .A0(n6558), .F0(\DE/n20787 ), 
    .F1(\MC/n18359 ));
  CB_SLICE_722 \CB/SLICE_722 ( .D1(\CB/n5_adj_3510 ), .C1(\CB/n20587 ), 
    .B1(\CB/turn_0 ), .A1(\CB/n20529 ), .D0(\CB/n79 ), .C0(\CB/n5_adj_3511 ), 
    .B0(\CB/n20529 ), .A0(\CB/turn_0 ), .M0(\CB/read_in ), 
    .CE(\CB/overflow_enable_1 ), .CLK(\CB/overflow ), 
    .F0(\CB/overflow_enable_39 ), .Q0(sample_2), .F1(\CB/overflow_enable_7 ));
  CB_SLICE_723 \CB/SLICE_723 ( .D1(\CB/n20601 ), .C1(\CB/us_cnt_1 ), 
    .B1(\CB/us_cnt_4 ), .A1(\CB/us_cnt_3 ), .D0(\CB/us_cnt_6 ), 
    .C0(\CB/us_cnt_4 ), .B0(\CB/n26_adj_3512 ), .A0(\CB/us_cnt_3 ), 
    .F0(\CB/n20544 ), .F1(\CB/n8 ));
  CB_SLICE_724 \CB/SLICE_724 ( .D1(\CB/n19800 ), .C1(\CB/state_1 ), 
    .B1(\CB/n20531 ), .A1(\CB/state_0 ), .C0(\CB/turn_0 ), .B0(\CB/state_1 ), 
    .A0(\CB/state_0 ), .F0(\CB/overflow_enable_47 ), .F1(\CB/n29_adj_3515 ));
  CB_SLICE_725 \CB/SLICE_725 ( .C1(\CB/us_cnt_2 ), .B1(\CB/us_cnt_0 ), 
    .A1(\CB/us_cnt_1 ), .B0(\CB/us_cnt_0 ), .A0(\CB/us_cnt_1 ), 
    .M0(\CB/read_in ), .CE(\CB/overflow_enable_38 ), .CLK(\CB/overflow ), 
    .F0(\CB/n20582 ), .Q0(sample_9), .F1(\CB/n20558 ));
  BC_SLICE_726 \BC/SLICE_726 ( .C1(\BC/pwm_out_N_3478 ), .B1(\BC/div_clk ), 
    .A1(\BC/div_clk_ls ), .B0(\BC/div_clk ), .A0(\BC/div_clk_ls ), 
    .M0(\BC/div_clk ), .CLK(clk_c), .F0(\BC/clk_c_enable_116 ), 
    .Q0(\BC/div_clk_ls ), .F1(\BC/n15610 ));
  DT_SLICE_727 \DT/SLICE_727 ( .D1(\DT/n20604 ), .C1(n1842), .B1(\DT/n1837 ), 
    .A1(\DT/n138_adj_3547 ), .C0(n1842), .B0(\DT/n1844 ), .A0(n1843), 
    .F0(\DT/n19941 ), .F1(\DT/n134_adj_3548 ));
  CF_SLICE_728 \CF/SLICE_728 ( .B1(tempC_0_1), .A1(tempC_0_0), .B0(tempC_0_3), 
    .A0(tempC_0_1), .M1(\CF/dg_3 ), .M0(\CF/dg3 ), .CE(\CF/clk_c_enable_150 ), 
    .CLK(clk_c), .F0(\CF/n18295 ), .Q0(\CF/DataF_3_31_N_2502_3 ), 
    .F1(\CF/n11797 ), .Q1(\CF/dg3 ));
  CF_SLICE_729 \CF/SLICE_729 ( .B1(tempC_3_3), .A1(tempC_3_1), .B0(tempC_3_1), 
    .A0(tempC_3_0), .M1(\CF/dh_1 ), .M0(\CF/dh1 ), .CE(\CF/clk_c_enable_150 ), 
    .CLK(clk_c), .F0(\CF/n13340 ), .Q0(\CF/DataF_4_31_N_2470_1 ), 
    .F1(\CF/n18265 ), .Q1(\CF/dh1 ));
  CB_SLICE_730 \CB/SLICE_730 ( .B1(\CB/us_cnt_8 ), .A1(\CB/us_cnt_9 ), 
    .C0(\CB/us_cnt_8 ), .B0(\CB/us_cnt_2 ), .A0(\CB/us_cnt_10 ), 
    .F0(\CB/n19912 ), .F1(\CB/n4_adj_3518 ));
  CB_SLICE_731 \CB/SLICE_731 ( .B1(\CB/us_cnt_7 ), .A1(\CB/us_cnt_9 ), 
    .B0(\CB/us_cnt_7 ), .A0(\CB/us_cnt_0 ), .M0(\CB/read_in ), 
    .CE(\CB/overflow_enable_7 ), .CLK(\CB/overflow ), .F0(\CB/n4 ), 
    .Q0(sample_5), .F1(\CB/n4_adj_3517 ));
  MC_SLICE_732 \MC/SLICE_732 ( .B1(n6559), .A1(n6561), .B0(n6410), .A0(n6561), 
    .F0(\MC/en_N_3200_1 ), .F1(\MC/n20590 ));
  SLICE_733 SLICE_733( .D1(\MC/MK/n46 ), .C1(\MC/MK/n45 ), 
    .B1(\MC/MK/keysampulsecnt_15 ), .A1(\MC/MK/n47 ), 
    .D0(\MC/MK/keysampulsecnt_7 ), .C0(\MC/MK/keysampulsecnt_6 ), 
    .B0(\MC/MK/keysampulsecnt_12 ), .A0(\MC/MK/keysampulsecnt_14 ), 
    .M1(\DT/n1848 ), .M0(\DT/n1835 ), .CE(\DT/clk_c_enable_95 ), 
    .LSR(\DT/n15597 ), .CLK(clk_c), .F0(\MC/MK/n19916 ), .Q0(\DT/n1834 ), 
    .F1(\MC/MK/n9 ), .Q1(\DT/n1847 ));
  BC_SLICE_734 \BC/SLICE_734 ( .B1(\BC/div_clk_cnt_16 ), 
    .A1(\BC/div_clk_cnt_4 ), .D0(\BC/div_clk_cnt_22 ), 
    .C0(\BC/div_clk_cnt_14 ), .B0(\BC/div_clk_cnt_19 ), 
    .A0(\BC/div_clk_cnt_7 ), .F0(\BC/n50_adj_3506 ), .F1(\BC/n37 ));
  DT_SLICE_735 \DT/SLICE_735 ( .B1(\DT/shift_clock_cnt_30 ), 
    .A1(\DT/shift_clock_cnt_27 ), .D0(\DT/shift_clock_cnt_6 ), 
    .C0(\DT/shift_clock_cnt_22 ), .B0(\DT/shift_clock_cnt_5 ), 
    .A0(\DT/shift_clock_cnt_19 ), .F0(\DT/n54 ), .F1(\DT/n41 ));
  DT_SLICE_736 \DT/SLICE_736 ( .D1(\DT/shift_clock_cnt_2 ), 
    .C1(\DT/shift_clock_cnt_28 ), .B1(\DT/shift_clock_cnt_18 ), 
    .A1(\DT/shift_clock_cnt_0 ), .D0(\DT/shift_clock_cnt_21 ), 
    .C0(\DT/shift_clock_cnt_16 ), .B0(\DT/shift_clock_cnt_11 ), 
    .A0(\DT/shift_clock_cnt_8 ), .F0(\DT/n50 ), .F1(\DT/n49 ));
  CC_SLICE_737 \CC/SLICE_737 ( .B1(\CC/clk_c_enable_237 ), 
    .A1(\CC/n14_adj_3483 ), .B0(\CC/da_2 ), .A0(\CC/da_0 ), .M1(\CC/da3 ), 
    .M0(\CC/da2 ), .CE(\CC/clk_c_enable_237 ), .CLK(clk_c), .F0(\CC/n4 ), 
    .Q0(tempC_3_2), .F1(\CC/n2139 ), .Q1(tempC_3_3));
  DT_SLICE_738 \DT/SLICE_738 ( .C1(\DT/n1834 ), .B1(\DT/shift_clock_ls ), 
    .A1(sck_c), .B0(\DT/n1836 ), .A0(\DT/n1835 ), .F0(\DT/n20569 ), 
    .F1(\DT/n15597 ));
  DE_SLICE_739 \DE/SLICE_739 ( .B1(mode_0), .A1(mode_1), .B0(n6294), 
    .A0(n6295), .F0(\DE/temp_0_4_N_2865_1 ), .F1(\DE/n20559 ));
  CF_SLICE_740 \CF/SLICE_740 ( .D1(\CF/da_3 ), .C1(\CF/da_1 ), .B1(\CF/db_0 ), 
    .A1(\CF/da_0 ), .B0(\CF/db_2 ), .A0(\CF/da_2 ), .M1(\CF/dh_3 ), 
    .M0(\CF/dh3 ), .CE(\CF/clk_c_enable_150 ), .CLK(clk_c), .F0(\CF/n19864 ), 
    .Q0(\CF/DataF_4_31_N_2470_3 ), .F1(\CF/n13 ), .Q1(\CF/dh3 ));
  mode_key mode_key_I( .PADDI(mode_key_c), .mode_key(mode_key));
  rst rst_I( .PADDI(rst_c), .rst(rst));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  rck rck_I( .PADDO(rck_c), .rck(rck));
  sck sck_I( .PADDO(sck_c), .sck(sck));
  din din_I( .PADDO(din_c), .din(din));
  beep beep_I( .PADDO(beep_c), .beep(beep));
  DQ DQ_I( .PADDI(DQ_out), .PADDT(\CB/DQ_N_216 ), .PADDO(DQ_N_215), .DQ(DQ));
  GSR_INST GSR_INST( .GSRNET(rst_c));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
endmodule

module DT_SLICE_0 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \DT/shift_clock_cnt_1608_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module DT_SLICE_1 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module DT_SLICE_2 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_3 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_4 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_5 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_8 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_9 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_10 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_11 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_12 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_13 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_14 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_15 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \DT/shift_clock_cnt_1608__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \DT/shift_clock_cnt_1608_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_16 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \DT/shift_clock_cnt_1608__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \DT/shift_clock_cnt_1608_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_17 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3146_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_18 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3233_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_19 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_20 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data8_299 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data7_297 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0006 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_21 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \CF/add_3233_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_22 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \CF/add_3233_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_23 ( input A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \CF/add_3146_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_24 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3146_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_25 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 \CF/add_3233_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_26 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20011 \CF/add_3233_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0555;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_27 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data6_295 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data5_293 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_28 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20012 \CF/add_3233_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_29 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data4_291 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data41_ret14_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_30 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data3_289 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data31_ret6_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_31 ( input A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20013 \CF/add_3102_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_32 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data2_287 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data21_ret9_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_33 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 \CF/add_3233_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_34 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data1_285 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data10_303 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_35 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data101_ret13_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data101_ret13_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_36 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/d43_333 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/d42_335 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_37 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3102_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_38 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_39 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_integer_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_integer_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_40 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3102_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_41 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_decimal_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_42 ( input A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \CF/add_3102_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_43 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3102_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_44 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3233_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_45 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3233_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_46 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3101_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input B1, A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_decimal_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \CF/add_2813_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_48 ( input B1, A1, B0, A0, M1, M0, CLK, output Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/Data41_ret14_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data41_ret14_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \CF/add_2813_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_49 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_50 ( input D1, C1, B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20014 \CF/add_3101_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9666;
  defparam inst1.INIT1 = 16'hf800;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_51 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20015 \CF/add_3101_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9666;
  defparam inst1.INIT1 = 16'h9666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_52 ( input C1, B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20016 \CF/add_3101_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h9696;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_53 ( input B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20017 \CF/add_3145_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7888;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_54 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20015 \CF/add_3145_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_55 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20015 \CF/add_3145_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_56 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3145_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_57 ( input FCI, output F1 );
  wire   GNDI;

  ccu20018 \CF/add_3098_17 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0fff;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_58 ( input FCI, output FCO );
  wire   GNDI;

  ccu20019 \CF/add_3098_15 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf000;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_59 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3176_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_60 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3176_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_61 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3176_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_62 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3176_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_63 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3176_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_64 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3176_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_65 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3176_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_66 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3176_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_67 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20013 \CF/add_2994_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_68 ( input A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20021 \CF/add_3098_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0555;
  defparam inst1.INIT1 = 16'hf000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_69 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_2994_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_70 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20012 \CF/add_3098_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_71 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_72 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0022 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module CF_SLICE_73 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_2994_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_74 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_2994_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_75 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20012 \CF/add_3098_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_76 ( input A1, A0, FCI, output F1, FCO );
  wire   GNDI;

  ccu20012 \CF/add_3098_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_77 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_2994_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_78 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3233_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_79 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre0006 \CC/DataOut_integer_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20003 \CF/add_2994_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_80 ( input A1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_integer_i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_integer_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2994_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_81 ( input A1, FCI, output F0, FCO );
  wire   GNDI;

  ccu20023 \CF/add_3098_5 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf000;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_82 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3233_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_83 ( input A1, output FCO );
  wire   GNDI;

  ccu20024 \CF/sub_972_add_2_2 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_84 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3233_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_85 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3233_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_86 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \CF/add_3098_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_87 ( input A1, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_integer_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_integer_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2994_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_88 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_2994_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_89 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20002 \CF/add_3098_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_90 ( input A0, FCI, output F1 );
  wire   GNDI;

  ccu20013 \CF/add_3141_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_91 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_92 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3241_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_93 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_2994_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_94 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_2994_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_95 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3241_26 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_96 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_97 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_98 ( input FCI, output FCO );
  wire   GNDI;

  ccu20025 \CF/add_3141_18 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0fff;
  defparam inst1.INIT1 = 16'h0fff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_99 ( input C1, B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20016 \CF/add_2994_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_100 ( input FCI, output F0, FCO );
  wire   GNDI;

  ccu20026 \CF/add_3141_16 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf000;
  defparam inst1.INIT1 = 16'hf000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_101 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3141_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_102 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3141_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_103 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3141_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_104 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_105 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3141_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_106 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_107 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3241_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_108 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_109 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_110 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3141_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_111 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_112 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_113 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3241_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_114 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_115 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3141_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_116 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_117 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3241_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_118 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3141_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_119 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/tmp_1607__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CF/tmp_1607_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_120 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3241_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_121 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \CF/tmp_1607__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \CF/tmp_1607_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_122 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_123 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_124 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_125 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_126 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_127 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_128 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_129 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_130 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_131 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3195_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_132 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3195_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_133 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_134 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3195_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_135 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_136 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3195_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_137 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_138 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_139 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_10 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_140 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_141 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_2992_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_142 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3195_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_143 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_144 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 \CF/add_3241_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_145 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3195_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_146 ( input B1, A1, B0, A0, DI1, M0, CE, CLK, output Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__rep_3__i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \CF/add_2992_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_147 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3195_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_148 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3144_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_149 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3144_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_150 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3241_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_151 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3195_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_152 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3195_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_153 ( input A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20013 \CF/add_3175_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_154 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3144_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_155 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3144_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_156 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3144_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_157 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_158 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3144_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_159 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_160 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_161 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_162 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_163 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3210_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_164 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_165 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3144_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_166 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3144_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_167 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_168 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_169 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_170 ( input C1, B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20016 \CF/add_3144_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_171 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_172 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3143_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_173 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_174 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_175 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3175_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_176 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3143_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_177 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3143_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_178 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3143_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_179 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3143_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_180 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3143_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_181 ( input A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \CF/add_3175_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_182 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_183 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3175_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_184 ( input A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \CF/add_3143_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_185 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3210_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_186 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3143_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_187 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3210_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_188 ( input A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20013 \CF/add_3142_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_189 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3142_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_190 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/sub_972_add_2_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_191 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3210_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_192 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20027 \CF/sub_972_add_2_32 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_193 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20028 \CF/sub_972_add_2_30 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_194 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3142_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_195 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3142_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_196 ( input B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20017 \CF/add_3113_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_197 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20015 \CF/add_3113_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_198 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \CF/add_3113_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h9666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_199 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3113_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_200 ( input DI0, M1, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__rep_2__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__ret0__i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CF/add_3110_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_201 ( input D1, C1, B1, A1, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_1__ret0__i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__ret0__i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 \CF/add_3110_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_202 ( input B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_1__ret0__i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__ret0__i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20030 \CF/add_3110_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5a96;
  defparam inst1.INIT1 = 16'h9666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_203 ( input C1, B1, A1, B0, A0, DI1, M0, CE, CLK, output Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_1__ret0__i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__rep_2__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20016 \CF/add_3110_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_204 ( input A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__ret1__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__ret1__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \CF/add_3151_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_205 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20031 \CF/sub_972_add_2_28 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_206 ( input DI0, M1, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__rep_3__i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CF/add_3223_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_207 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3142_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_208 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__ret1__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__ret1__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3151_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_209 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__ret1__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__ret1__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3151_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_210 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__ret1__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__ret1__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3151_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_211 ( input B1, A1, B0, A0, DI1, M0, CE, CLK, output Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__ret1__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__rep_2__i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \CF/add_3151_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_212 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3150_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_213 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3150_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_214 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3150_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_215 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3150_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_216 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3150_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_217 ( input DI0, M1, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_0__rep_2__i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CF/add_3178_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_218 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3178_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_219 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3178_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_220 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3178_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_221 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_222 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3142_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_223 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_224 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_225 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3174_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_226 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_227 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_228 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_229 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_230 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_231 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_232 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_233 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_234 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_24 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_235 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_22 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_236 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3178_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_237 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3178_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_238 ( input B1, A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20032 \CF/add_3178_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h9666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_239 ( input B1, A1, B0, A0, DI1, M0, CE, CLK, output Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_0__ret1__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \CF/add_3178_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_240 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3177_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_241 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3177_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_242 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3177_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_243 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3177_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_244 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3177_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_245 ( input A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20033 \CF/add_3177_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CF_SLICE_246 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3147_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_247 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3147_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_248 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3147_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_249 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3147_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_250 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3147_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_251 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \CF/add_3147_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_252 ( input C1, B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20016 \CF/add_3147_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_253 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \CF/add_3146_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_254 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3146_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_255 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_20 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_256 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_18 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_257 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_258 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_259 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_260 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_261 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_262 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3174_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_263 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_16 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_264 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CF/add_3223_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_265 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_14 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_266 ( input B1, A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20009 \CF/add_3174_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_267 ( input A1, B0, A0, DI1, M0, CE, CLK, output Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__rep_3__i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20033 \CF/add_3223_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_268 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20003 \CF/add_3146_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_269 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20005 \CF/sub_972_add_2_12 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_270 ( input A1, B0, A0, M1, M0, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data9_301 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 \CF/add_2813_26 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_271 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \CB/us_cnt_1601__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \CB/us_cnt_1601_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_272 ( input A0, DI0, CE, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20013 \CB/add_81_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_273 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_274 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20002 \CB/us_cnt_1601_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_275 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_276 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \CB/us_cnt_1601_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_277 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_278 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_279 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_280 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \CB/us_cnt_1601_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_281 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_282 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_283 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_284 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/s_devide_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CB/add_81_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_285 ( input B1, A1, DI1, CE, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0006 \CB/s_devide_i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20034 \CB/add_81_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CB_SLICE_286 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 \CB/us_cnt_1601_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_287 ( input A1, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \CB/us_cnt_1601__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \CB/us_cnt_1601_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_288 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/pwm_cnt_1610_1611_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_289 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \BC/pwm_cnt_1610_1611_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_290 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \BC/div_clk_cnt_1609_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_291 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_292 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_293 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_294 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_295 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_296 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_297 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_298 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_299 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_300 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_301 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_302 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_303 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_304 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_305 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/div_clk_cnt_1609__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/div_clk_cnt_1609_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_306 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \BC/div_clk_cnt_1609__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \BC/div_clk_cnt_1609_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_307 ( input FCI, output F1 );
  wire   GNDI;

  ccu20035 \BC/sub_985_add_2_12 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hffff;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module BC_SLICE_308 ( input A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 \BC/sub_985_add_2_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'hffff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module BC_SLICE_309 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20037 \BC/sub_985_add_2_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module BC_SLICE_310 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20003 \BC/sub_985_add_2_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module BC_SLICE_311 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20038 \BC/sub_985_add_2_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module BC_SLICE_312 ( input A1, A0, output FCO );
  wire   GNDI;

  ccu20039 \BC/sub_985_add_2_2 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module BC_SLICE_313 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \BC/pwm_cnt_1610_1611_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_314 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/pwm_cnt_1610_1611_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_315 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/pwm_cnt_1610_1611_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_316 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \BC/pwm_cnt_1610_1611__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \BC/pwm_cnt_1610_1611_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_317 ( input B1, A1, B0, A0, M1, M0, CE, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre \DT/shift_cnt_FSM__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20015 \MC/add_3121_6 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_318 ( input B1, A1, C0, B0, A0, M1, M0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre \DT/shift_cnt_FSM__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20029 \MC/add_3121_4 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_319 ( input B1, A1, B0, A0, M1, M0, CE, LSR, CLK, output Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  vmuxregsre \DT/shift_cnt_FSM__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20009 \MC/add_3121_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_SLICE_320 ( input FCI, output F0 );
  wire   GNDI;

  ccu20004 \MC/add_6796_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_SLICE_321 ( input M0, CE, CLK, FCI, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0006 \MC/MK/keystore_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20040 \MC/add_6796_10 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hffff;
  defparam inst1.INIT1 = 16'hffff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module MC_SLICE_322 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \MC/add_6796_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module MC_SLICE_323 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \MC/add_6796_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_SLICE_324 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20003 \MC/add_6796_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_SLICE_325 ( input A1, B0, A0, output FCO );
  wire   GNDI;

  ccu20042 \MC/add_6796_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_326 ( input B0, A0, M0, CE, LSR, CLK, FCI, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \DT/shift_cnt_FSM__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20017 \MC/add_3121_8 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_327 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \MC/MK/keysampulsecnt_1612_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_328 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_329 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_330 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_331 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_332 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_333 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_334 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_335 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_336 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_337 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_338 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_339 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_340 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_341 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_342 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \MC/MK/keysampulsecnt_1612_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_MK_SLICE_343 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \MC/MK/keysampulsecnt_1612__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \MC/MK/keysampulsecnt_1612_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_344 ( input DI0, M1, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  vmuxregsre0006 \CC/Data01_ret8_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data01_ret8_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CC/add_2930_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_345 ( input A1, A0, M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_3__ret3__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__rep_3__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20043 \CC/add_2930_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CC_SLICE_346 ( input A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0006 \CC/Data01_ret8_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data01_ret8_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20044 \CC/add_2930_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hf000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CC_SLICE_347 ( input B1, A1, B0, A0, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre0006 \CC/Data01_ret8_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20009 \CC/add_2930_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_348 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \CC/tmp1_1605_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_349 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp1_1605__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp1_1605_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_350 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp1_1605__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp1_1605_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_351 ( input M1, M0, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2700__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2700__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CC/sub_968_add_2_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_352 ( input M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__ret5__i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__rep_4__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20040 \CC/sub_968_add_2_9 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_353 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__rep_4__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_2__rep_4__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_968_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_354 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_2__rep_4__i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__ret0__i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_968_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_355 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_1__ret0__i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__ret0__i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_968_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_356 ( input B1, A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_1__rep_1__i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__rep_1__i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20045 \CC/sub_968_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20045 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CC_SLICE_357 ( input M1, M0, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/d41_337 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/d40_339 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CC/sub_970_add_2_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_358 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp1_1605__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp1_1605_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_359 ( input M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2703__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2703__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20040 \CC/sub_970_add_2_17 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_360 ( input A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2703__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2703__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20031 \CC/sub_970_add_2_15 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_361 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2701__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2701__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_970_add_2_13 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_362 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2701__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2701__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_970_add_2_11 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_363 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp1_1605__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp1_1605_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_364 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/d33_344 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/d32_346 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_970_add_2_9 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_365 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/d31_348 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/d30_350 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_970_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_366 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/d23_352 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/d22_354 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_970_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_367 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output Q0, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/d21_356 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/d20_358 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \CC/sub_970_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_368 ( input B1, A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2700__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2700__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20045 \CC/sub_970_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_369 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp1_1605__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp1_1605_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_370 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp1_1605__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp1_1605_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_371 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp1_1605__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \CC/tmp1_1605_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_372 ( input DI0, M1, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  vmuxregsre0006 \CC/Data0_283 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_decimal_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CC/add_3252_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_373 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_decimal_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20003 \CC/add_3252_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_374 ( input B1, A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_decimal_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20046 \CC/add_3252_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20046 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CC_SLICE_375 ( input A1, B0, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_decimal_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \CC/add_3252_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_376 ( input B1, A1, B0, A0, DI1, M0, CLK, output Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly;

  vmuxregsre0006 \CC/DataOut_decimal_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data101_ret13_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \CC/add_3252_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_377 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp_1603__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp_1603__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp_1603_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_378 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp_1603__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp_1603__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp_1603_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_379 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp_1603__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/tmp_1603__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \CC/tmp_1603_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_380 ( input M1, M0, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/No_Name_2702__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name_2702__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \CC/add_3251_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_381 ( input A1, A0, M1, M0, CE, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__ret7__i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__rep_5__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20043 \CC/add_3251_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_382 ( input A1, B0, A0, M1, M0, CE, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__rep_5__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_4__rep_5__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \CC/add_3251_4 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_383 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \CC/DataOut_4__rep_5__i0 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \CC/add_3251_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_384 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0022 \CC/tmp_1603__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \CC/tmp_1603_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_385 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \BC/i8476_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \BC/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \BC/div_clk_52 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module BC_SLICE_387 ( input B1, A1, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40048 \BC/i5306_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \BC/pwm_out_I_0_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \BC/pwm_out_56 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_388 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \CB/SLICE_388/CB/SLICE_388_K1_H1 , GNDI, 
         \CB/SLICE_388/CB/i8612/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40049 \CB/SLICE_388_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\CB/SLICE_388/CB/SLICE_388_K1_H1 ));
  lut40050 \CB/i8612/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\CB/SLICE_388/CB/i8612/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/i198_212 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \CB/SLICE_388_K0K1MUX ( .D0(\CB/SLICE_388/CB/i8612/GATE_H0 ), 
    .D1(\CB/SLICE_388/CB/SLICE_388_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1D0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5353) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module CB_SLICE_389 ( input B1, A1, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40047 \CB/i6894_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \CB/i2803_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CB/num_1599__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CB/num_1599__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_390 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40052 \CB/i6908_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40053 \CB/i6901_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CB/num_1599__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CB/num_1599__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_391 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CB/i6915_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CB/num_1599__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_392 ( input DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40055 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CB/overflow_202 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_394 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40056 \CB/i4623_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \CB/i8436_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CB/state_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8085) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF027) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_395 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40058 \CB/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \CB/i5209_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/state_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1A1A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_396 ( input D1, C1, B1, A1, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40060 \CB/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \CB/i8482_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/turn_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_397 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40062 \CB/us_cnt_1601_mux_6_i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \CB/us_cnt_1601_mux_6_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/us_cnt_1601__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CB/us_cnt_1601__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_398 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40064 \CB/us_cnt_1601_mux_6_i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40062 \CB/us_cnt_1601_mux_6_i3_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \CB/us_cnt_1601__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/us_cnt_1601__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_399 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40063 \CB/us_cnt_1601_mux_6_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CB/us_cnt_1601_mux_6_i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \CB/us_cnt_1601__i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CB/us_cnt_1601__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_400 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40063 \CB/us_cnt_1601_mux_6_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \CB/us_cnt_1601_mux_6_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \CB/us_cnt_1601__i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CB/us_cnt_1601__i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_401 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40065 \CB/i3_4_lut_adj_81 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \CB/us_cnt_1601_mux_6_i10_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/us_cnt_1601__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_402 ( input B1, A1, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40047 \CB/i6807_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \CB/i2640_1_lut_rep_109 ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \CB/us_devide_1597__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CB/us_devide_1597__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_403 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \CB/i6821_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CB/i6814_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/us_devide_1597__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CB/us_devide_1597__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_417 ( input B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40047 \CC/i7102_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data101_ret13_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/DataOut_decimal_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_421 ( input B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40047 \CC/i7109_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/Data01_ret8_i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/Data01_ret8_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_436 ( input B1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40047 \CC/i6836_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \CC/i2651_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/d1_1604__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/d1_1604__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_437 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40054 \CC/i6850_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CC/i6843_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CC/d1_1604__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/d1_1604__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_438 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40066 \CC/i2890_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CC/d2__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1E1E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CC_SLICE_439 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CC/i1962_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CC/i1955_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/d2__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/d2__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_440 ( input B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40067 \CC/i8252_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CC/i1969_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CC/d2__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CC_SLICE_441 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CC/i1933_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CC/i1926_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/d3__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/d3__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_442 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CC/i1940_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CC/d3__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_443 ( input C0, B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40066 \CC/i2880_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CC/d4__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_444 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CC/i1904_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CC/i1897_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/d4__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/d4__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_445 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CC/i1911_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CC/d4__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_448 ( input B1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40047 \CC/i6865_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \CC/i6863_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/da_1602__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/da_1602__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_449 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40054 \CC/i6879_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CC/i6872_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CC/da_1602__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/da_1602__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_452 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40068 \CC/i1_4_lut_adj_71 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \CC/i2857_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CC/db__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CC_SLICE_453 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CC/i1875_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CC/i1868_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/db__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CC/db__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_454 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40069 \CC/i2_3_lut_adj_73 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CC/i1882_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CC/db__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_465 ( input B1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40047 \CF/i6930_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \CF/i6928_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/da_1606__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/da_1606__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_466 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40054 \CF/i6944_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \CF/i6937_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \CF/da_1606__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/da_1606__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_467 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut4 \CF/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 \CF/i2859_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0022 \CF/db__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F2D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_468 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2212_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2205_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/db__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/db__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_469 ( input B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40048 \CF/i8244_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CF/i2219_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/db__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_470 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40071 \CF/i3_4_lut_adj_102 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40072 \CF/i2884_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/dc__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h04FB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_471 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2183_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2176_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/dc__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/dc__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_472 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CF/i2190_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/dc__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_475 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40073 \CF/i1_2_lut_rep_92 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \CF/i2887_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/dd__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h01FE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_476 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2154_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2147_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/dd__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/dd__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_477 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CF/i2161_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/dd__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_480 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40067 \CF/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \CF/i2886_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/de__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_481 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2125_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2118_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/de__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/de__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_482 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CF/i2132_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/de__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_485 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40075 \CF/i1_2_lut_rep_77_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40074 \CF/i2885_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/df__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_486 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2096_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2089_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/df__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/df__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_487 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CF/i2103_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/df__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_490 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40076 \CF/i362_2_lut_rep_56 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \CF/i2856_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0022 \CF/dg__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F78) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_491 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2067_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2060_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/dg__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/dg__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_492 ( input B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40067 \CF/i8211_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \CF/i2074_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/dg__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_495 ( input B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40067 \CF/i374_2_lut_rep_51 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \CF/i2889_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/dh__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_496 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 \CF/i2038_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i2031_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CF/dh__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \CF/dh__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_497 ( input D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40054 \CF/i2045_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0022 \CF/dh__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_498 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40065 \CB/i1_2_lut_rep_81_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 \CB/DQ_out_bdd_3_lut_8672_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CB/DQ_205 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_499 ( input B0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40047 \DT/i2861_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0022 \DT/codeP__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_500 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40079 \DT/i15_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \DT/i1216_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0022 \DT/codeP__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0022 \DT/codeP__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6C6C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_510 ( input D1, C1, B1, A1, B0, A0, DI0, M1, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40080 \MC/MK/i8479_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \MC/MK/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \DT/shift_clock_ls_60 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \MC/MK/keysampulse_31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module MC_MK_SLICE_512 ( input A0, DI0, M1, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40051 \MC/MK/btnstate_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \MC/MK/keystore_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \MC/MK/keystore_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_514 ( input B1, A1, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40073 \CC/i1_2_lut_adj_74 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 i2888_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0022 \CC/d3__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2D2D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_515 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40082 \DT/i5305_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \DT/codeP_2__I_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0084 \DT/din_62 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0084 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module MC_MK_SLICE_517 ( input C0, B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40085 \MC/MK/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \MC/MK/keysampulse_ls_32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \MC/MK/keystate_34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_519 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40073 \DE/i5407_2_lut_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 \DE/i2858_1_lut_rep_101_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0084 \MC/tmpmpde_i0_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0084 \MC/tmpmpde_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_520 ( input B1, A1, B0, A0, DI0, M1, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40047 \CF/i6967_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7114_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/DataOut_4__ret7__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/DataOut_4__ret7__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_522 ( input B1, A1, B0, A0, DI0, M1, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40048 \CF/i6984_2_lut_rep_116 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7105_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/DataOut_3__ret3__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/DataOut_3__ret3__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_524 ( input B1, A1, B0, A0, DI0, M1, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40047 \CF/i7126_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7125_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/DataOut_2__ret5__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/DataOut_2__ret5__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_526 ( input B1, A1, B0, A0, DI0, M1, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40047 \CF/i7057_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7128_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/DataOut_1__ret0__i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/DataOut_1__ret0__i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_529 ( input B1, A1, B0, A0, DI0, M1, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40048 \CF/i7013_2_lut_rep_129 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7127_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/DataOut_0__ret1__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/DataOut_0__ret1__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_553 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40086 \DT/i8473_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 \DT/i1_2_lut_adj_111 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0087 \DT/shift_clock_59 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0087 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_563 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \CC/i7130_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \MC/MK/i3_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/No_Name__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/No_Name__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_564 ( input C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40088 \MC/MK/i13_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \MC/MK/keysampulse_I_0_37_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/DataF_0___i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_0___i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_565 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40067 \MC/MK/i7_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \BC/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/DataF_0___i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_0___i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_566 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40065 \BC/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \CB/i1_2_lut_adj_95 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/DataF_1___i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_1___i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_567 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40065 \CB/i8_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \CB/i8278_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/DataF_1___i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/DataF_1___i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_568 ( input B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40076 \DE/i8484_3_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \DE/i8240_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/DataF_2___i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_2___i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_569 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40067 \DE/i1_2_lut_rep_114 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \DE/temp_0[[0__bdd_4_lut_8665 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CF/DataF_2___i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_2___i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD680) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_570 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40092 \DE/temp_2[[4__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \DE/temp_3[[4__bdd_4_lut_8653 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CF/DataF_3___i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/DataF_3___i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h76DB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_571 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \CF/i7103_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7110_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/DataF_3___i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_3___i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_572 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \CF/i7108_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7104_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/DataF_4___i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/DataF_4___i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_573 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40065 \DT/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \DT/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/DataF_4___i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/DataF_4___i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_574 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40093 \DE/tempC_0__0__I_0_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40094 \DE/mux_962_i1_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0095 \DE/temp_0__4__I_54_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF072) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0095 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   GATE;

  AND2 INST50( .A(SP), .B(CK), .Z(GATE));
  FL1S1D INST01( .D0(D0), .D1(D1), .CK(GATE), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module DE_SLICE_575 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_575/DE/SLICE_575_K1_H1 , 
         \DE/SLICE_575/DE/mux_962_i2/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_575_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_575/DE/SLICE_575_K1_H1 ));
  lut40097 \DE/mux_962_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_575/DE/mux_962_i2/GATE_H0 ));
  vmuxregsre0095 \DE/temp_0__4__I_54_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_575_K0K1MUX ( .D0(\DE/SLICE_575/DE/mux_962_i2/GATE_H0 ), 
    .D1(\DE/SLICE_575/DE/SLICE_575_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1E18) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_576 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_576/DE/SLICE_576_K1_H1 , 
         \DE/SLICE_576/DE/mux_962_i3/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_576_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_576/DE/SLICE_576_K1_H1 ));
  lut40098 \DE/mux_962_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_576/DE/mux_962_i3/GATE_H0 ));
  vmuxregsre0095 \DE/temp_0__4__I_54_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_576_K0K1MUX ( .D0(\DE/SLICE_576/DE/mux_962_i3/GATE_H0 ), 
    .D1(\DE/SLICE_576/DE/SLICE_576_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5695) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_577 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_577/DE/SLICE_577_K1_H1 , 
         \DE/SLICE_577/DE/mux_962_i4/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_577_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_577/DE/SLICE_577_K1_H1 ));
  lut40099 \DE/mux_962_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_577/DE/mux_962_i4/GATE_H0 ));
  vmuxregsre0095 \DE/temp_0__4__I_54_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_577_K0K1MUX ( .D0(\DE/SLICE_577/DE/mux_962_i4/GATE_H0 ), 
    .D1(\DE/SLICE_577/DE/SLICE_577_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA566) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_578 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40067 \DE/i1834_2_lut_rep_115 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40100 \DE/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0101 \DE/temp_0__4__I_54_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0101 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   Q_INT, D_INT, LSRB, L_IN;

  MUX41 INST10( .D0(Q_INT), .D1(Q_INT), .D2(D0), .D3(D1), .SD1(SD), .SD2(SP), 
    .Z(D_INT));
  INV INST20( .A(LSR), .Z(LSRB));
  AND2 INST30( .A(LSRB), .B(D_INT), .Z(L_IN));
  FD1S1A INST50( .D(L_IN), .CK(CK), .Q(Q_INT));
  defparam INST50.GSR = "DISABLED";
  BUFBA INST80( .A(Q_INT), .Z(Q));
endmodule

module DE_SLICE_579 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_579/DE/SLICE_579_K1_H1 , 
         \DE/SLICE_579/DE/mux_965_i1/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_579_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_579/DE/SLICE_579_K1_H1 ));
  lut40102 \DE/mux_965_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_579/DE/mux_965_i1/GATE_H0 ));
  vmuxregsre0095 \DE/temp_1__4__I_48_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_579_K0K1MUX ( .D0(\DE/SLICE_579/DE/mux_965_i1/GATE_H0 ), 
    .D1(\DE/SLICE_579/DE/SLICE_579_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC13) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_580 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_580/DE/SLICE_580_K1_H1 , 
         \DE/SLICE_580/DE/mux_965_i2/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_580_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_580/DE/SLICE_580_K1_H1 ));
  lut40103 \DE/mux_965_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_580/DE/mux_965_i2/GATE_H0 ));
  vmuxregsre0095 \DE/temp_1__4__I_48_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_580_K0K1MUX ( .D0(\DE/SLICE_580/DE/mux_965_i2/GATE_H0 ), 
    .D1(\DE/SLICE_580/DE/SLICE_580_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9694) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_581 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_581/DE/SLICE_581_K1_H1 , 
         \DE/SLICE_581/DE/mux_965_i3/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_581_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_581/DE/SLICE_581_K1_H1 ));
  lut40104 \DE/mux_965_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_581/DE/mux_965_i3/GATE_H0 ));
  vmuxregsre0095 \DE/temp_1__4__I_48_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_581_K0K1MUX ( .D0(\DE/SLICE_581/DE/mux_965_i3/GATE_H0 ), 
    .D1(\DE/SLICE_581/DE/SLICE_581_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_582 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_582/DE/SLICE_582_K1_H1 , 
         \DE/SLICE_582/DE/mux_965_i4/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_582_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_582/DE/SLICE_582_K1_H1 ));
  lut40105 \DE/mux_965_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_582/DE/mux_965_i4/GATE_H0 ));
  vmuxregsre0095 \DE/temp_1__4__I_48_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_582_K0K1MUX ( .D0(\DE/SLICE_582/DE/mux_965_i4/GATE_H0 ), 
    .D1(\DE/SLICE_582/DE/SLICE_582_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A66) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_583 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40106 \DE/n3885_bdd_3_lut_8639_rep_78_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40107 \DE/i1_4_lut_4_lut_adj_100 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0101 \DE/temp_1__4__I_48_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00FE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_584 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \DE/SLICE_584/DE/SLICE_584_K1_H1 , GNDI, 
         \DE/SLICE_584/DE/i8711/GATE_H0 , VCCI, DI0_dly, CLK_dly;

  lut40108 \DE/SLICE_584_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_584/DE/SLICE_584_K1_H1 ));
  lut40109 \DE/i8711/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\DE/SLICE_584/DE/i8711/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0095 \DE/temp_2__4__I_0_2810_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \DE/SLICE_584_K0K1MUX ( .D0(\DE/SLICE_584/DE/i8711/GATE_H0 ), 
    .D1(\DE/SLICE_584/DE/SLICE_584_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD88D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_585 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_585/DE/SLICE_585_K1_H1 , \DE/SLICE_585/DE/i8584/GATE_H0 , 
         VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_585_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_585/DE/SLICE_585_K1_H1 ));
  lut40110 \DE/i8584/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_585/DE/i8584/GATE_H0 ));
  vmuxregsre0095 \DE/temp_2__4__I_0_2810_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_585_K0K1MUX ( .D0(\DE/SLICE_585/DE/i8584/GATE_H0 ), 
    .D1(\DE/SLICE_585/DE/SLICE_585_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A69) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_586 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_586/DE/SLICE_586_K1_H1 , 
         \DE/SLICE_586/DE/mux_961_i3/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_586_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_586/DE/SLICE_586_K1_H1 ));
  lut40105 \DE/mux_961_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_586/DE/mux_961_i3/GATE_H0 ));
  vmuxregsre0095 \DE/temp_2__4__I_0_2810_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_586_K0K1MUX ( .D0(\DE/SLICE_586/DE/mux_961_i3/GATE_H0 ), 
    .D1(\DE/SLICE_586/DE/SLICE_586_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_587 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_587/DE/SLICE_587_K1_H1 , 
         \DE/SLICE_587/DE/mux_961_i4/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_587_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_587/DE/SLICE_587_K1_H1 ));
  lut40099 \DE/mux_961_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_587/DE/mux_961_i4/GATE_H0 ));
  vmuxregsre0095 \DE/temp_2__4__I_0_2810_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_587_K0K1MUX ( .D0(\DE/SLICE_587/DE/mux_961_i4/GATE_H0 ), 
    .D1(\DE/SLICE_587/DE/SLICE_587_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_588 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \DE/SLICE_588/DE/SLICE_588_K1_H1 , GNDI, 
         \DE/SLICE_588/DE/i8709/GATE_H0 , VCCI, DI0_dly, CLK_dly;

  lut40108 \DE/SLICE_588_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_588/DE/SLICE_588_K1_H1 ));
  lut40109 \DE/i8709/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\DE/SLICE_588/DE/i8709/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0095 \DE/temp_3__4__I_0_2808_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \DE/SLICE_588_K0K1MUX ( .D0(\DE/SLICE_588/DE/i8709/GATE_H0 ), 
    .D1(\DE/SLICE_588/DE/SLICE_588_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_589 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_589/DE/SLICE_589_K1_H1 , \DE/SLICE_589/DE/i8575/GATE_H0 , 
         VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_589_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_589/DE/SLICE_589_K1_H1 ));
  lut40110 \DE/i8575/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_589/DE/i8575/GATE_H0 ));
  vmuxregsre0095 \DE/temp_3__4__I_0_2808_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_589_K0K1MUX ( .D0(\DE/SLICE_589/DE/i8575/GATE_H0 ), 
    .D1(\DE/SLICE_589/DE/SLICE_589_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_590 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \DE/SLICE_590/DE/SLICE_590_K1_H1 , 
         \DE/SLICE_590/DE/mux_963_i3/GATE_H0 , VCCI, GNDI, DI0_dly, CLK_dly;

  lut40096 \DE/SLICE_590_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_590/DE/SLICE_590_K1_H1 ));
  lut40111 \DE/mux_963_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_590/DE/mux_963_i3/GATE_H0 ));
  vmuxregsre0095 \DE/temp_3__4__I_0_2808_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DE/SLICE_590_K0K1MUX ( .D0(\DE/SLICE_590/DE/mux_963_i3/GATE_H0 ), 
    .D1(\DE/SLICE_590/DE/SLICE_590_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA599) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_591 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \DE/SLICE_591/DE/SLICE_591_K1_H1 , GNDI, 
         \DE/SLICE_591/DE/i8761/GATE_H0 , VCCI, DI0_dly, CLK_dly;

  lut40112 \DE/SLICE_591_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/SLICE_591/DE/SLICE_591_K1_H1 ));
  lut40113 \DE/i8761/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\DE/SLICE_591/DE/i8761/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0095 \DE/temp_3__4__I_0_2808_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \DE/SLICE_591_K0K1MUX ( .D0(\DE/SLICE_591/DE/i8761/GATE_H0 ), 
    .D1(\DE/SLICE_591/DE/SLICE_591_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_592 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40093 \DE/tempC_4__0__I_0_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40114 \DE/mux_103_i1_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0095 \DE/temp_4__2__I_0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_593 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40093 \DE/tempC_4__2__I_0_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40093 \DE/tempC_4__1__I_0_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0101 \DE/temp_4__2__I_0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0115 \DE/temp_4__2__I_0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0115 ( input D0, D1, SD, SP, CK, LSR, output Q );
  wire   Q_INT, D_INT, L_IN;

  MUX41 INST10( .D0(Q_INT), .D1(Q_INT), .D2(D0), .D3(D1), .SD1(SD), .SD2(SP), 
    .Z(D_INT));
  OR2 INST30( .A(LSR), .B(D_INT), .Z(L_IN));
  FD1S1AY INST50( .D(L_IN), .CK(CK), .Q(Q_INT));
  defparam INST50.GSR = "DISABLED";
  BUFBA INST80( .A(Q_INT), .Z(Q));
endmodule

module DE_SLICE_594 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40100 \DE/i8453_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 \DE/tempC_4__3__I_0_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0095 \DE/temp_4__31__I_31_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module DT_SLICE_595 ( input C1, B1, A1, D0, C0, B0, A0, output OFX0, F1 );
  wire   GNDI, \DT/SLICE_595/DT/temp_1[[0__bdd_4_lut_4_lut_H0 ;

  lut40116 \DT/temp_1[[1__bdd_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40117 \DT/temp_1[[0__bdd_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/SLICE_595/DT/temp_1[[0__bdd_4_lut_4_lut_H0 ));
  selmux20118 \DT/SLICE_595_K0K1MUX ( 
    .D0(\DT/SLICE_595/DT/temp_1[[0__bdd_4_lut_4_lut_H0 ), .Z(OFX0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6161) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB7C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20118 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module DE_SLICE_596 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, FXB, FXA, 
    output OFX0, F1, OFX1 );
  wire   \DE/SLICE_596/DE/n1_bdd_4_lut_4_lut_4_lut_H0 ;

  lut40119 \DE/temp_1[[2__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 \DE/n1_bdd_4_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/SLICE_596/DE/n1_bdd_4_lut_4_lut_4_lut_H0 ));
  selmux20118 \DE/SLICE_596_K0K1MUX ( 
    .D0(\DE/SLICE_596/DE/n1_bdd_4_lut_4_lut_4_lut_H0 ), .Z(OFX0));
  selmux2 \DE/SLICE_596_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F67) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7CD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8634_SLICE_597 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \DT/i8634/SLICE_597/DT/i8634/SLICE_597_K1_H1 , 
         \DT/i8634/SLICE_597/DT/i8634/GATE_H0 ;

  lut40113 \DT/i8634/SLICE_597_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\DT/i8634/SLICE_597/DT/i8634/SLICE_597_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \DT/i8634/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8634/SLICE_597/DT/i8634/GATE_H0 ));
  selmux2 \DT/i8634/SLICE_597_K0K1MUX ( 
    .D0(\DT/i8634/SLICE_597/DT/i8634/GATE_H0 ), 
    .D1(\DT/i8634/SLICE_597/DT/i8634/SLICE_597_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8707_SLICE_598 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8707/SLICE_598/DT/i8707/SLICE_598_K1_H1 , 
         \DT/i8707/SLICE_598/DT/i8707/GATE_H0 ;

  lut40122 \DT/i8707/SLICE_598_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8707/SLICE_598/DT/i8707/SLICE_598_K1_H1 ));
  lut40123 \DT/i8707/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8707/SLICE_598/DT/i8707/GATE_H0 ));
  selmux2 \DT/i8707/SLICE_598_K0K1MUX ( 
    .D0(\DT/i8707/SLICE_598/DT/i8707/GATE_H0 ), 
    .D1(\DT/i8707/SLICE_598/DT/i8707/SLICE_598_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5114) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5457) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8703_SLICE_599 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8703/SLICE_599/DT/i8703/SLICE_599_K1_H1 , 
         \DT/i8703/SLICE_599/DT/i8703/GATE_H0 ;

  lut40124 \DT/i8703/SLICE_599_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8703/SLICE_599/DT/i8703/SLICE_599_K1_H1 ));
  lut40125 \DT/i8703/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8703/SLICE_599/DT/i8703/GATE_H0 ));
  selmux2 \DT/i8703/SLICE_599_K0K1MUX ( 
    .D0(\DT/i8703/SLICE_599/DT/i8703/GATE_H0 ), 
    .D1(\DT/i8703/SLICE_599/DT/i8703/SLICE_599_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1145) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5451) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8345_SLICE_600 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8345/SLICE_600/DT/i8345/SLICE_600_K1_H1 , 
         \DT/i8345/SLICE_600/DT/i8345/GATE_H0 ;

  lut40126 \DT/i8345/SLICE_600_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8345/SLICE_600/DT/i8345/SLICE_600_K1_H1 ));
  lut40127 \DT/i8345/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8345/SLICE_600/DT/i8345/GATE_H0 ));
  selmux2 \DT/i8345/SLICE_600_K0K1MUX ( 
    .D0(\DT/i8345/SLICE_600/DT/i8345/GATE_H0 ), 
    .D1(\DT/i8345/SLICE_600/DT/i8345/SLICE_600_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7340) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_mux_749_i1_SLICE_601 ( input B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \DT/mux_749_i1/SLICE_601/DT/mux_749_i1/SLICE_601_K1_H1 , 
         \DT/mux_749_i1/SLICE_601/DT/mux_749_i1/GATE_H0 ;

  lut40128 \DT/mux_749_i1/SLICE_601_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\DT/mux_749_i1/SLICE_601/DT/mux_749_i1/SLICE_601_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40129 \DT/mux_749_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/mux_749_i1/SLICE_601/DT/mux_749_i1/GATE_H0 ));
  selmux2 \DT/mux_749_i1/SLICE_601_K0K1MUX ( 
    .D0(\DT/mux_749_i1/SLICE_601/DT/mux_749_i1/GATE_H0 ), 
    .D1(\DT/mux_749_i1/SLICE_601/DT/mux_749_i1/SLICE_601_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i7389_SLICE_602 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i7389/SLICE_602/DT/i7389/SLICE_602_K1_H1 , 
         \DT/i7389/SLICE_602/DT/i7389/GATE_H0 ;

  lut40130 \DT/i7389/SLICE_602_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i7389/SLICE_602/DT/i7389/SLICE_602_K1_H1 ));
  lut40131 \DT/i7389/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i7389/SLICE_602/DT/i7389/GATE_H0 ));
  selmux2 \DT/i7389/SLICE_602_K0K1MUX ( 
    .D0(\DT/i7389/SLICE_602/DT/i7389/GATE_H0 ), 
    .D1(\DT/i7389/SLICE_602/DT/i7389/SLICE_602_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i127_SLICE_603 ( input D1, C1, B1, A1, B0, A0, M0, output OFX0 );
  wire   \DT/i127/SLICE_603/DT/i127/SLICE_603_K1_H1 , GNDI, 
         \DT/i127/SLICE_603/DT/i127/GATE_H0 ;

  lut40132 \DT/i127/SLICE_603_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i127/SLICE_603/DT/i127/SLICE_603_K1_H1 ));
  lut40133 \DT/i127/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\DT/i127/SLICE_603/DT/i127/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DT/i127/SLICE_603_K0K1MUX ( 
    .D0(\DT/i127/SLICE_603/DT/i127/GATE_H0 ), 
    .D1(\DT/i127/SLICE_603/DT/i127/SLICE_603_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8556_SLICE_604 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8556/SLICE_604/DT/i8556/SLICE_604_K1_H1 , 
         \DT/i8556/SLICE_604/DT/i8556/GATE_H0 ;

  lut40134 \DT/i8556/SLICE_604_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8556/SLICE_604/DT/i8556/SLICE_604_K1_H1 ));
  lut40135 \DT/i8556/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8556/SLICE_604/DT/i8556/GATE_H0 ));
  selmux2 \DT/i8556/SLICE_604_K0K1MUX ( 
    .D0(\DT/i8556/SLICE_604/DT/i8556/GATE_H0 ), 
    .D1(\DT/i8556/SLICE_604/DT/i8556/SLICE_604_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i4219_SLICE_605 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \DT/i4219/SLICE_605/DT/i4219/SLICE_605_K1_H1 , GNDI, 
         \DT/i4219/SLICE_605/DT/i4219/GATE_H0 ;

  lut40136 \DT/i4219/SLICE_605_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i4219/SLICE_605/DT/i4219/SLICE_605_K1_H1 ));
  lut40137 \DT/i4219/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\DT/i4219/SLICE_605/DT/i4219/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DT/i4219/SLICE_605_K0K1MUX ( 
    .D0(\DT/i4219/SLICE_605/DT/i4219/GATE_H0 ), 
    .D1(\DT/i4219/SLICE_605/DT/i4219/SLICE_605_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \DT/i4219/SLICE_605_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF67D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i3279_SLICE_606 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \DT/i3279/SLICE_606/DT/i3279/SLICE_606_K1_H1 , 
         \DT/i3279/SLICE_606/DT/i3279/GATE_H0 ;

  lut40138 \DT/i3279/SLICE_606_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\DT/i3279/SLICE_606/DT/i3279/SLICE_606_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \DT/i3279/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i3279/SLICE_606/DT/i3279/GATE_H0 ));
  selmux2 \DT/i3279/SLICE_606_K0K1MUX ( 
    .D0(\DT/i3279/SLICE_606/DT/i3279/GATE_H0 ), 
    .D1(\DT/i3279/SLICE_606/DT/i3279/SLICE_606_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD45) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i4228_SLICE_607 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \DT/i4228/SLICE_607/DT/i4228/SLICE_607_K1_H1 , GNDI, 
         \DT/i4228/SLICE_607/DT/i4228/GATE_H0 ;

  lut40136 \DT/i4228/SLICE_607_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i4228/SLICE_607/DT/i4228/SLICE_607_K1_H1 ));
  lut40137 \DT/i4228/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\DT/i4228/SLICE_607/DT/i4228/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \DT/i4228/SLICE_607_K0K1MUX ( 
    .D0(\DT/i4228/SLICE_607/DT/i4228/GATE_H0 ), 
    .D1(\DT/i4228/SLICE_607/DT/i4228/SLICE_607_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \DT/i4228/SLICE_607_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_i3297_SLICE_608 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \DT/i3297/SLICE_608/DT/i3297/SLICE_608_K1_H1 , 
         \DT/i3297/SLICE_608/DT/i3297/GATE_H0 ;

  lut40138 \DT/i3297/SLICE_608_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\DT/i3297/SLICE_608/DT/i3297/SLICE_608_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40139 \DT/i3297/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i3297/SLICE_608/DT/i3297/GATE_H0 ));
  selmux2 \DT/i3297/SLICE_608_K0K1MUX ( 
    .D0(\DT/i3297/SLICE_608/DT/i3297/GATE_H0 ), 
    .D1(\DT/i3297/SLICE_608/DT/i3297/SLICE_608_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_i8831_SLICE_609 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8831/SLICE_609/DT/i8831/SLICE_609_K1_H1 , 
         \DT/i8831/SLICE_609/DT/i8831/GATE_H0 ;

  lut40140 \DT/i8831/SLICE_609_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8831/SLICE_609/DT/i8831/SLICE_609_K1_H1 ));
  lut40141 \DT/i8831/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8831/SLICE_609/DT/i8831/GATE_H0 ));
  selmux2 \DT/i8831/SLICE_609_K0K1MUX ( 
    .D0(\DT/i8831/SLICE_609/DT/i8831/GATE_H0 ), 
    .D1(\DT/i8831/SLICE_609/DT/i8831/SLICE_609_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7CD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDBFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8723_SLICE_610 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8723/SLICE_610/DT/i8723/SLICE_610_K1_H1 , 
         \DT/i8723/SLICE_610/DT/i8723/GATE_H0 ;

  lut40142 \DT/i8723/SLICE_610_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8723/SLICE_610/DT/i8723/SLICE_610_K1_H1 ));
  lut40143 \DT/i8723/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8723/SLICE_610/DT/i8723/GATE_H0 ));
  selmux2 \DT/i8723/SLICE_610_K0K1MUX ( 
    .D0(\DT/i8723/SLICE_610/DT/i8723/GATE_H0 ), 
    .D1(\DT/i8723/SLICE_610/DT/i8723/SLICE_610_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD3F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8719_SLICE_611 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8719/SLICE_611/DT/i8719/SLICE_611_K1_H1 , 
         \DT/i8719/SLICE_611/DT/i8719/GATE_H0 ;

  lut40144 \DT/i8719/SLICE_611_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8719/SLICE_611/DT/i8719/SLICE_611_K1_H1 ));
  lut40145 \DT/i8719/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8719/SLICE_611/DT/i8719/GATE_H0 ));
  selmux2 \DT/i8719/SLICE_611_K0K1MUX ( 
    .D0(\DT/i8719/SLICE_611/DT/i8719/GATE_H0 ), 
    .D1(\DT/i8719/SLICE_611/DT/i8719/SLICE_611_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h371E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDF3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8829_SLICE_612 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8829/SLICE_612/DT/i8829/SLICE_612_K1_H1 , 
         \DT/i8829/SLICE_612/DT/i8829/GATE_H0 ;

  lut40140 \DT/i8829/SLICE_612_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8829/SLICE_612/DT/i8829/SLICE_612_K1_H1 ));
  lut40141 \DT/i8829/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8829/SLICE_612/DT/i8829/GATE_H0 ));
  selmux2 \DT/i8829/SLICE_612_K0K1MUX ( 
    .D0(\DT/i8829/SLICE_612/DT/i8829/GATE_H0 ), 
    .D1(\DT/i8829/SLICE_612/DT/i8829/SLICE_612_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_i8715_SLICE_613 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DT/i8715/SLICE_613/DT/i8715/SLICE_613_K1_H1 , 
         \DT/i8715/SLICE_613/DT/i8715/GATE_H0 ;

  lut40146 \DT/i8715/SLICE_613_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DT/i8715/SLICE_613/DT/i8715/SLICE_613_K1_H1 ));
  lut40147 \DT/i8715/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DT/i8715/SLICE_613/DT/i8715/GATE_H0 ));
  selmux2 \DT/i8715/SLICE_613_K0K1MUX ( 
    .D0(\DT/i8715/SLICE_613/DT/i8715/GATE_H0 ), 
    .D1(\DT/i8715/SLICE_613/DT/i8715/SLICE_613_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC7DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_i8538_SLICE_614 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \DT/i8538/SLICE_614/DT/i8538/SLICE_614_K1_H1 , 
         \DT/i8538/SLICE_614/DT/i8538/GATE_H0 ;

  lut40138 \DT/i8538/SLICE_614_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\DT/i8538/SLICE_614/DT/i8538/SLICE_614_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40113 \DT/i8538/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\DT/i8538/SLICE_614/DT/i8538/GATE_H0 ));
  selmux2 \DT/i8538/SLICE_614_K0K1MUX ( 
    .D0(\DT/i8538/SLICE_614/DT/i8538/GATE_H0 ), 
    .D1(\DT/i8538/SLICE_614/DT/i8538/SLICE_614_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DE_i8713_SLICE_615 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \DE/i8713/SLICE_615/DE/i8713/SLICE_615_K1_H1 , 
         \DE/i8713/SLICE_615/DE/i8713/GATE_H0 ;

  lut40122 \DE/i8713/SLICE_615_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\DE/i8713/SLICE_615/DE/i8713/SLICE_615_K1_H1 ));
  lut40123 \DE/i8713/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\DE/i8713/SLICE_615/DE/i8713/GATE_H0 ));
  selmux2 \DE/i8713/SLICE_615_K0K1MUX ( 
    .D0(\DE/i8713/SLICE_615/DE/i8713/GATE_H0 ), 
    .D1(\DE/i8713/SLICE_615/DE/i8713/SLICE_615_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_i5196_SLICE_616 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \CB/i5196/SLICE_616/CB/i5196/SLICE_616_K1_H1 , 
         \CB/i5196/SLICE_616/CB/i5196/GATE_H0 ;

  lut40148 \CB/i5196/SLICE_616_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\CB/i5196/SLICE_616/CB/i5196/SLICE_616_K1_H1 ));
  lut40149 \CB/i5196/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\CB/i5196/SLICE_616/CB/i5196/GATE_H0 ));
  selmux2 \CB/i5196/SLICE_616_K0K1MUX ( 
    .D0(\CB/i5196/SLICE_616/CB/i5196/GATE_H0 ), 
    .D1(\CB/i5196/SLICE_616/CB/i5196/SLICE_616_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_i8705_SLICE_617 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \CB/i8705/SLICE_617/CB/i8705/SLICE_617_K1_H1 , 
         \CB/i8705/SLICE_617/CB/i8705/GATE_H0 ;

  lut40150 \CB/i8705/SLICE_617_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\CB/i8705/SLICE_617/CB/i8705/SLICE_617_K1_H1 ));
  lut40151 \CB/i8705/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\CB/i8705/SLICE_617/CB/i8705/GATE_H0 ));
  selmux2 \CB/i8705/SLICE_617_K0K1MUX ( 
    .D0(\CB/i8705/SLICE_617/CB/i8705/GATE_H0 ), 
    .D1(\CB/i8705/SLICE_617/CB/i8705/SLICE_617_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_i8546_SLICE_618 ( input D1, C1, B1, A1, B0, A0, M0, output OFX0 );
  wire   \CB/i8546/SLICE_618/CB/i8546/SLICE_618_K1_H1 , GNDI, 
         \CB/i8546/SLICE_618/CB/i8546/GATE_H0 ;

  lut40152 \CB/i8546/SLICE_618_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\CB/i8546/SLICE_618/CB/i8546/SLICE_618_K1_H1 ));
  lut40153 \CB/i8546/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\CB/i8546/SLICE_618/CB/i8546/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \CB/i8546/SLICE_618_K0K1MUX ( 
    .D0(\CB/i8546/SLICE_618/CB/i8546/GATE_H0 ), 
    .D1(\CB/i8546/SLICE_618/CB/i8546/SLICE_618_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h15FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_i8543_SLICE_619 ( input C1, B1, A1, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   GNDI, \CB/i8543/SLICE_619/CB/i8543/SLICE_619_K1_H1 , 
         \CB/i8543/SLICE_619/CB/i8543/GATE_H0 ;

  lut40154 \CB/i8543/SLICE_619_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\CB/i8543/SLICE_619/CB/i8543/SLICE_619_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40155 \CB/i8543/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\CB/i8543/SLICE_619/CB/i8543/GATE_H0 ));
  selmux2 \CB/i8543/SLICE_619_K0K1MUX ( 
    .D0(\CB/i8543/SLICE_619/CB/i8543/GATE_H0 ), 
    .D1(\CB/i8543/SLICE_619/CB/i8543/SLICE_619_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \CB/i8543/SLICE_619_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1515) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_620 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40156 \DE/temp_0__4__I_0_Mux_5_i31_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40157 \DT/i8396_4_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_621 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40158 \DE/i2443_3_lut_4_lut_rep_88 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40159 \DE/i1_2_lut_rep_74_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6660) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_622 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40160 \CB/i1_2_lut_4_lut_adj_83 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40161 \CB/i8495_2_lut_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF28) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F07) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_623 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40162 \DT/n20251_bdd_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40163 \DT/n19814_bdd_4_lut_8660 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE33E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_624 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40164 \CB/i1_4_lut_adj_84 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40165 \CB/i1_3_lut_rep_79 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3032) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3232) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_625 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40166 \CB/n20264_bdd_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40167 \CB/turn_0__bdd_4_lut_8656 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CB/read_in_210 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4A40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA78) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_626 ( input D1, C1, B1, A1, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40071 \CC/i3_4_lut_adj_70 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 i1_2_lut_rep_58( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \MC/kmodstate_ls_27 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_627 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40168 \DE/i8463_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40162 \DT/i8632/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_628 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40168 \DE/i8468_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40162 \DT/i8536/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_629 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DT/i10_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40168 \DT/i8472_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_630 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DT/i7_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \DT/i26_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_631 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40169 \DT/temp_4[[0__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40170 \DT/n20280_bdd_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5BED) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_632 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40171 \DT/n20252_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \DT/n19814_bdd_2_lut_8659 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_633 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DT/i14_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \DT/i28_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_634 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DT/i3_2_lut_rep_125 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \DT/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_635 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40162 \DT/mux_816_i1/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 \DT/i2_4_lut_adj_109 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_636 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \DT/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \DT/i1_2_lut_rep_111 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_637 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40173 \DT/i1_4_lut_adj_112 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \DT/i1_2_lut_rep_94_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3332) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_638 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40080 \DT/i3_4_lut_adj_110 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 \DT/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_639 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DT/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40168 \DT/i8501_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_640 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40175 \DE/temp_1[[1__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40162 \DT/n19966_bdd_3_lut_8643 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCE8F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_641 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40176 \DE/temp_0[[0__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40177 \DT/n15_bdd_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_642 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40075 \CF/i1_2_lut_rep_83_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40178 \CF/i2_3_lut_rep_52_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/de3_349 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/de31__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_643 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40179 \CF/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 \CF/i2_2_lut_rep_49_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/de2_351 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/de21__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_644 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40181 \CF/i1_2_lut_3_lut_4_lut_adj_107 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40182 \CF/i3_4_lut_adj_101 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/dg1_337 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dg11__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_645 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40183 \CF/i1_2_lut_rep_86_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40181 \CF/i1_2_lut_rep_50_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CF/dd2_359 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/dd21__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_646 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40085 \CF/i2_2_lut_rep_87_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40178 \CF/i2_3_lut_rep_53_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/df0_347 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/df01__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_647 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut4 \CF/i2_4_lut_adj_105 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40181 \CF/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/dd0_363 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dd01__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_648 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40184 \CF/i3_4_lut_adj_106 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \CF/i1_2_lut_rep_76_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CF/dd3_357 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dd31__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_649 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40048 \CF/i11_2_lut_rep_93 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40178 \CF/i2_3_lut_rep_54_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/df1_345 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/df11__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_650 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut4 \CF/i2_4_lut_adj_104 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40181 \CF/i1_2_lut_3_lut_4_lut_adj_103 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CF/dd1_361 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dd11__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_651 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40080 \CF/i1_2_lut_rep_82_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40185 \CF/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/df3_341 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/df31__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_652 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40186 \CF/i3_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \CF/i378_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/dg0_339 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/dg01__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_653 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DE/i2269_2_lut_rep_64 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40188 \DE/n6558_bdd_4_lut_8759 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_654 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40189 \DE/n6483_bdd_4_lut_rep_71 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40190 \DE/i5289_2_lut_rep_75_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_655 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40090 \DE/i2368_2_lut_rep_98_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40191 \DE/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h13EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_656 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40192 \DE/n6408_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \DE/i2239_2_lut_rep_68 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_657 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40193 \DE/i2453_3_lut_rep_80_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40065 \DE/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEE8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_658 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40194 \DE/temp_4[[0__bdd_4_lut_8534 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40195 \DE/i1_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF67D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_659 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \CB/i1_2_lut_rep_119 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 \CB/i1_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_660 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40197 \CB/i3269_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40198 \CB/i1_4_lut_4_lut_adj_75 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h76FE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_661 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \CB/i1_2_lut_rep_132 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \CB/i3_4_lut_adj_76 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_662 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \CB/i2_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 \CB/i5635_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_663 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40085 \CB/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40200 \CB/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_664 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \CB/i1_2_lut_3_lut_adj_87 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 \CB/n16921_bdd_4_lut_8685 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_665 ( input D1, C1, B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40202 \CB/i8448_2_lut_3_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40067 \CB/i1_2_lut_rep_112 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/Data_i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_666 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40065 \CB/i9_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40203 \CB/i1_4_lut_adj_77 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_667 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40174 \CB/i1_2_lut_rep_70_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40204 \CB/n15461_bdd_3_lut_rep_84 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_668 ( input B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40067 \CB/i1_2_lut_adj_82 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \CB/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CB/Data_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_669 ( input D1, C1, B1, A1, C0, B0, A0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40205 \CB/i424_3_lut_rep_72_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40206 \CB/i1_2_lut_rep_103_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/Data_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_670 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \CB/i5524_2_lut_rep_113 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40184 \CB/i8486_2_lut_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_671 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \CB/equal_38_i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \CB/i8492_2_lut_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_672 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 \CB/equal_37_i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \CB/i8489_2_lut_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_673 ( input B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40089 \CB/i1_2_lut_adj_86 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 \CB/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CB/Data_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_674 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40207 \CB/i1_2_lut_4_lut_adj_90 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 \CB/i1_2_lut_rep_91_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_675 ( input B1, A1, D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40067 \CB/i1_2_lut_adj_89 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40184 \CB/i1_2_lut_3_lut_4_lut_adj_79 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CB/Data_i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_676 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40208 \CB/i2_4_lut_adj_91 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \CB/i3_4_lut_adj_80 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_677 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \CB/i2_4_lut_adj_96 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \CB/i1_2_lut_rep_89 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_678 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 \CB/i1_2_lut_adj_98 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40203 \CB/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_679 ( input D1, C1, B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40060 \CB/i2_4_lut_adj_92 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \CB/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/Data_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_680 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40082 \CB/i1_2_lut_rep_128 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \CB/i8522_2_lut_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_681 ( input D1, C1, B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40075 \CB/i3_3_lut_4_lut_adj_99 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \CB/i1_2_lut_rep_120 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CB/Data_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_682 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40209 \CB/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40210 \CB/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CB/Data_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0028) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_683 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40211 \CB/i1_4_lut_adj_85 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40212 \CB/i8266_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_684 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40213 \CB/i3_4_lut_adj_94 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 \CB/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_685 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40202 \CB/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40215 \CB/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_686 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40216 \CB/i2_3_lut_rep_73 ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 \CB/i2_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module BC_SLICE_687 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40065 \BC/i16_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \BC/i27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BC_SLICE_688 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \BC/i8_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \BC/i28_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BC_SLICE_689 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \BC/i4_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \BC/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module BC_SLICE_690 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \BC/i12_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \BC/i26_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_691 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40065 \MC/MK/i21_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \MC/MK/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \DT/shift_cnt_FSM__i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_692 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40065 \MC/MK/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \MC/MK/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \DT/shift_cnt_FSM__i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_693 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40065 \MC/MK/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \MC/MK/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \DT/shift_cnt_FSM__i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_694 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40076 \CC/i286_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40179 \CC/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CC/db3_310 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/db2_312 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_695 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40182 \CC/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \CC/i290_2_lut_rep_59 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/da3_320 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/da2_322 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_696 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40218 \CC/i267_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40179 \CC/i3_4_lut_adj_69 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CC/DataOut_1__rep_1__i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/DataOut_1__rep_1__i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CC_SLICE_697 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40209 \CC/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \CC/i1_2_lut_rep_62 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/No_Name__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/No_Name__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CC_SLICE_698 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40048 \CC/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40219 \CC/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CC/da1_324 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/da0_326 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CC_SLICE_699 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40187 \CC/i294_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40220 \CC/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CC/db1_314 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/db0_316 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_700 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40221 \DE/temp_0[[1__bdd_4_lut_8648 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40222 \DT/temp_0[[1__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0087 \DT/shift_cnt_FSM__i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5EE7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h73FD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_701 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40223 \CF/i7000_2_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40224 \CF/i6995_4_lut_3_lut_rep_96_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CF/dg2_335 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dg21__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_702 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40223 \CF/i7029_2_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40224 \CF/i7024_4_lut_3_lut_rep_107_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \CF/dh0_326 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dh01__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_703 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40225 \DE/temp_2[[4__bdd_4_lut_8652_rep_135 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40226 \DE/temp_2[[2__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1DD7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h76F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_704 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40227 \DE/temp_3[[2__bdd_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40228 \DE/temp_3[[4__bdd_4_lut_rep_134 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4FFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h671F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_705 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40229 \DE/i2527_2_lut_rep_66_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40230 \DE/i2252_2_lut_rep_63_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_706 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40065 \DE/i2_3_lut_rep_102_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40176 \DE/temp_4[[0__bdd_4_lut_8540 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DE_SLICE_707 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40231 \DE/i2312_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40232 \DE/i2310_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1EF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_708 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40214 \CB/i8510_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \CB/i8460_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_SLICE_709 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40223 \MC/i7090_2_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40224 \MC/i7085_4_lut_3_lut_rep_108_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_710 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 \DT/i1_2_lut_rep_90_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40088 \DT/i1_2_lut_rep_104_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_711 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40233 \CF/i6973_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40234 \CF/i1_3_lut_rep_122 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/de0_355 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/de01__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_712 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40090 \CF/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40235 \CF/i2_3_lut_rep_55_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \CF/df2_343 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/df21__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CF_SLICE_713 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40233 \CF/i7063_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40234 \CF/i1_3_lut_rep_127 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/de1_353 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/de11__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_714 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 \DE/i2277_2_lut_rep_61_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40236 \DE/temp_2__4__N_3061_bdd_3_lut_8577_rep_65 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DE_SLICE_715 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40236 \DE/n3920_bdd_3_lut_8589_rep_69 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \DE/i2247_2_lut_rep_67_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DE_SLICE_716 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40237 \DE/i1_2_lut_rep_97_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40238 \DE/i1839_2_lut_rep_95_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8787) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_717 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40202 \CB/i8527_2_lut_3_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40174 \CB/i8524_2_lut_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_718 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 \DT/din_I_65_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \DT/sck_I_0_73_2_lut_rep_133 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_719 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40089 \CF/i6965_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7116_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/dh2_322 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/dh21__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DE_SLICE_720 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40089 \DE/mode_1__I_0_2812_i4_1_lut_2_lut_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40239 \DE/i5616_1_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_721 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 \MC/i7079_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40240 \DE/n6558_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA954) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_722 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut4 \CB/i8519_2_lut_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 \CB/i1_2_lut_3_lut_4_lut_adj_78 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \CB/Data_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_723 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 \CB/i3_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \CB/i2_3_lut_rep_85_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_724 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40241 \CB/i41_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40242 \CB/i8504_2_lut_rep_106_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F7A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CB_SLICE_725 ( input C1, B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40238 \CB/i1_2_lut_rep_99_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \CB/i1_2_lut_rep_123 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CB/Data_i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_726 ( input C1, B1, A1, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40243 \BC/i4294_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \BC/div_clk_ls_I_0_2_lut_rep_126 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \BC/div_clk_ls_53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module DT_SLICE_727 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40083 \DT/i123_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 \DT/i8506_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_728 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \CF/i7129_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7018_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/dg3_333 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/dg31__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CF_SLICE_729 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \CF/i6989_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \CF/i7106_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CF/dh1_324 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/dh11__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module CB_SLICE_730 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \CB/i1_2_lut_adj_97 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \CB/i8276_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CB_SLICE_731 ( input B1, A1, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40048 \CB/i1_2_lut_adj_93 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \CB/i1_2_lut_adj_88 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CB/Data_i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module MC_SLICE_732 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40048 \MC/i7074_2_lut_rep_131 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \MC/i7101_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_733 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40203 \MC/MK/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \MC/MK/i8280_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \DT/shift_cnt_FSM__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \DT/shift_cnt_FSM__i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module BC_SLICE_734 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \BC/i7_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \BC/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_735 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40067 \DT/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \DT/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DT_SLICE_736 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40065 \DT/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \DT/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CC_SLICE_737 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40076 \CC/i265_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 \CC/i1_2_lut_adj_72 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \CC/No_Name_2702__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CC/No_Name_2702__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module DT_SLICE_738 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40243 \DT/i4328_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \DT/i1_2_lut_rep_110 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module DE_SLICE_739 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 \DE/mode_1__I_0_2812_i3_2_lut_rep_100_2_lut ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \DE/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module CF_SLICE_740 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40174 \CF/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \CF/i8230_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \CF/dh3_320 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \CF/dh31__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mode_key ( output PADDI, input mode_key );

  xo2iobuf mode_key_pad( .Z(PADDI), .PAD(mode_key));

  specify
    (mode_key => PADDI) = (0:0:0,0:0:0);
    $width (posedge mode_key, 0:0:0);
    $width (negedge mode_key, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module rst ( output PADDI, input rst );

  xo2iobuf rst_pad( .Z(PADDI), .PAD(rst));

  specify
    (rst => PADDI) = (0:0:0,0:0:0);
    $width (posedge rst, 0:0:0);
    $width (negedge rst, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module rck ( input PADDO, output rck );
  wire   GNDI;

  xo2iobuf0244 rck_pad( .I(PADDO), .T(GNDI), .PAD(rck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => rck) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0244 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module sck ( input PADDO, output sck );
  wire   GNDI;

  xo2iobuf0244 sck_pad( .I(PADDO), .T(GNDI), .PAD(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module din ( input PADDO, output din );
  wire   GNDI;

  xo2iobuf0244 din_pad( .I(PADDO), .T(GNDI), .PAD(din));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => din) = (0:0:0,0:0:0);
  endspecify

endmodule

module beep ( input PADDO, output beep );
  wire   GNDI;

  xo2iobuf0244 beep_pad( .I(PADDO), .T(GNDI), .PAD(beep));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => beep) = (0:0:0,0:0:0);
  endspecify

endmodule

module DQ ( output PADDI, input PADDT, PADDO, inout DQ );
  wire   PADDT_NOTIN;

  xo2iobuf0245 DQ_pad( .I(PADDO), .T(PADDT_NOTIN), .Z(PADDI), .PAD(DQ), 
    .PADI(DQ));
  inverter PADDT_INVERTERIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => DQ) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => DQ) = (0:0:0,0:0:0);
    (DQ => PADDI) = (0:0:0,0:0:0);
    $width (posedge DQ, 0:0:0);
    $width (negedge DQ, 0:0:0);
  endspecify

endmodule

module xo2iobuf0245 ( input I, T, output Z, PAD, input PADI );

  IBPD INST1( .I(PADI), .O(Z));
  OBZPD INST2( .I(I), .T(T), .O(PAD));
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
